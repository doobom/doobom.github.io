<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>oops: run</title><link href="https://doobom.me/" rel="alternate"></link><link href="https://doobom.me/feeds/all-en.atom.xml" rel="self"></link><id>https://doobom.me/</id><updated>2020-02-19T14:06:00+08:00</updated><subtitle>keep running...</subtitle><entry><title>wsl centos7: Failed to get D-Bus connection Operation not permitted</title><link href="https://doobom.me/wsl-centos7-failed-to-get-d-bus-connection-Operation-not-permitted" rel="alternate"></link><published>2020-02-19T14:06:00+08:00</published><updated>2020-02-19T14:06:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2020-02-19:/wsl-centos7-failed-to-get-d-bus-connection-Operation-not-permitted</id><summary type="html">&lt;p&gt;wsl 方式运行的 CentOS 7 无法运行 service/systemctl&amp;nbsp;命令的解决办法.&lt;/p&gt;</summary><content type="html">&lt;p&gt;即然是 CentOS 那如果不能运行 &lt;code&gt;service&lt;/code&gt; &lt;code&gt;systemctl&lt;/code&gt; 那不是等于是残了嘛.&lt;/p&gt;
&lt;p&gt;用的是 &lt;a href="https://github.com/yuk7/CentWSL"&gt;yuk7/CentWSL&lt;/a&gt; 这个 CentOS 7 装完感觉挺好的, 心里暗爽,&amp;nbsp;然后就开始折腾了.&lt;/p&gt;
&lt;p&gt;安装 PostgreSQL 配置完了以后就准备 &lt;code&gt;service postgresql start&lt;/code&gt; 的时候就提示了错误:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Failed to get D-Bus connection Operation not permitted&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;查了一下，意思就是 wsl&amp;nbsp;并不支持。&lt;/p&gt;
&lt;p&gt;不过 github 上有人解决了, &lt;a href="https://github.com/DDoSolitary/LxRunOffline/issues/88"&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;大概就是这样：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mv /usr/bin/systemctl /usr/bin/systemctl.old&lt;/span&gt;
&lt;span class="code-line"&gt;curl https://raw.githubusercontent.com/gdraheim/docker-systemctl-replacement/master/files/docker/systemctl.py &amp;gt; /usr/bin/systemctl&lt;/span&gt;
&lt;span class="code-line"&gt;chmod +x /usr/bin/systemctl&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;有一个介绍 wsl 的写的很详细，推友 塔Q 分享的 &lt;a href="https://dowww.spencerwoo.com/1.0/1-preparations/1-0-intro.html"&gt;Dev on Windows with &lt;span class="caps"&gt;WSL&lt;/span&gt;&lt;/a&gt;，值得一读.&lt;/p&gt;
&lt;p&gt;另一个设置自动运行一文章： &lt;a href="https://dev.to/ironfroggy/wsl-tips-starting-linux-background-services-on-windows-login-3o98"&gt;&lt;span class="caps"&gt;WSL&lt;/span&gt; Tips: Starting Linux Background Services on Windows&amp;nbsp;Login&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;还有一个 repo: &lt;a href="https://github.com/troytse/wsl-autostart"&gt;troytse/wsl-autostart&lt;/a&gt;&lt;/p&gt;</content><category term="Windows"></category><category term="windows"></category><category term="wsl"></category><category term="linux"></category></entry><entry><title>How to enable the Windows subsystem for linux feature</title><link href="https://doobom.me/enable-windows-subsystem-linux-feature" rel="alternate"></link><published>2020-02-18T16:02:00+08:00</published><updated>2020-02-18T16:02:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2020-02-18:/enable-windows-subsystem-linux-feature</id><summary type="html">&lt;p&gt;The Windows Subsystem for Linux (&lt;span class="caps"&gt;WSL&lt;/span&gt;) is an efficient way to get the benefits of different Linux operating systems on Windows 10 &lt;span class="caps"&gt;PC&lt;/span&gt; and laptops. &lt;span class="caps"&gt;WSL&lt;/span&gt; allows running of Linux apps directly on Windows 10 system without using any virtualization software like VirtualBox or VMware. The &lt;span class="caps"&gt;WSL&lt;/span&gt; is available for Windows 10 and Windows server&amp;nbsp;2019.&lt;/p&gt;</summary><content type="html">
&lt;blockquote&gt;
&lt;p&gt;原文: &lt;a href="https://www.how2shout.com/how-to/enable-windows-subsystem-linux-feature.html"&gt;How to enable the Windows subsystem for linux feature&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The Windows Subsystem for Linux (&lt;span class="caps"&gt;WSL&lt;/span&gt;) is an efficient way to get the benefits of different Linux operating systems on Windows 10 &lt;span class="caps"&gt;PC&lt;/span&gt; and laptops. &lt;span class="caps"&gt;WSL&lt;/span&gt; allows running of Linux apps directly on Windows 10 system without using any virtualization software like VirtualBox or VMware. The &lt;span class="caps"&gt;WSL&lt;/span&gt; is available for Windows 10 and Windows server 2019.&lt;/p&gt;
&lt;p&gt;Windows Subsystem for Linux (&lt;span class="caps"&gt;WSL&lt;/span&gt;) basically a compatibility layer developed by Microsoft for running Linux binaries. It doesn’t contain any kind of Linux kernel code rather it uses a Linux compatible kernel interface. The disadvantage of the &lt;span class="caps"&gt;WSL&lt;/span&gt; it is not capable of running all Linux software especially those requires the Linux kernel services.&lt;/p&gt;
&lt;p&gt;We can run Linux apps in graphical mode by installing the opensource X11 server on the Windows 10 (hosts), however, the performance would be poor due to lack of audio or hardware acceleration.&lt;/p&gt;
&lt;p&gt;There are lots of advantages of &lt;span class="caps"&gt;WSL&lt;/span&gt; too, such as the user don’t need to install any Virtual machine to test out Linux application; one can install and create Apache (&lt;span class="caps"&gt;LAMP&lt;/span&gt; stack), Nginx kind of web server natively on Windows 10; different types of Linux distributions systems available as apps such as Debian, Ubuntu, Kali Linux and OpenSuse; Consume low resources as compared to Virtual machines; navigate around the file system; use of command line Linux apps via Bash and more… Now let’s see how to install Windows subsystem for Linux on Windows 10 or Windows server 2019. The &lt;span class="caps"&gt;WSL&lt;/span&gt; is not available for older versions of Windows.&lt;/p&gt;
&lt;h1 id="enable-windows-subsystem-for-linux-wsl-on-windows-10"&gt;Enable Windows Subsystem for Linux (&lt;span class="caps"&gt;WSL&lt;/span&gt;) on Windows 10&lt;a class="headerlink" href="#enable-windows-subsystem-for-linux-wsl-on-windows-10" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Open &lt;strong&gt;Control Panel&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Click on &lt;strong&gt;Programs&lt;/strong&gt; option&lt;/li&gt;
&lt;li&gt;Select the &lt;strong&gt;Turn Windows features Turn on or off&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Scroll down and find &lt;strong&gt;Windows SubSystem for Linux&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;When it appears to select its &lt;strong&gt;checkbox&lt;/strong&gt; and click on the &lt;strong&gt;&lt;span class="caps"&gt;OK&lt;/span&gt;&lt;/strong&gt; button.&lt;/li&gt;
&lt;li&gt;In a few minutes, the &lt;strong&gt;Windows Subsystem for Linux (&lt;span class="caps"&gt;WSL&lt;/span&gt;)&lt;/strong&gt; will automatically get installed on the system.&lt;/li&gt;
&lt;li&gt;After installation, click the &lt;strong&gt;Restart Now&lt;/strong&gt; button.&lt;/li&gt;
&lt;li&gt;Now open &lt;strong&gt;Microsoft Windows store&lt;/strong&gt; and search for &lt;strong&gt;Linux&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Install any of the available open-source Linux apps on Windows 10&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="step-by-step-installation-with-screenshots"&gt;Step by step installation with screenshots&lt;a class="headerlink" href="#step-by-step-installation-with-screenshots" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;: Click on the Start menu of Windows and navigate to open the control panel.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt;: From the Control Panel, first click on the “Turn Windows features on or off” option. One can also search directly for it from the Search box of Windows.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Turns windows features turn on or off from control panel" src="images/8001-1.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 3&lt;/strong&gt;: Scroll down and you will find an option Windows Subsystem for Linux. A box is given in front of that click on that to check and then the &lt;span class="caps"&gt;OK&lt;/span&gt; button to install the &lt;span class="caps"&gt;WSL&lt;/span&gt; on Windows 10.&lt;/p&gt;
&lt;p&gt;&lt;img alt="subsystem for Linux" src="images/8001-2.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 4&lt;/strong&gt;: When it asks to restart the system do that.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 5&lt;/strong&gt;: After the installation, go to the Microsoft store and download the Linux app to play with.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 6&lt;/strong&gt;: When you search for the term Linux: Run Linux of Windows, Debian, Ubuntu, OpenSuse enterprise server, Kali Linux environments will appear. Choose the one you want to work with to download and install. Here we are installing Ubuntu 18.04.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Run linux on WIndows" src="images/8001-3.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 7&lt;/strong&gt;: Once we installed Ubuntu or other Linux apps on Windows then just go to search box and type its name. For example, we have installed Ubuntu, so we typed Ubuntu.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Ubuntu 18.04 on windows WSL" src="images/8001-4.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 8&lt;/strong&gt;: As soon as you open the bash of Ubuntu on Windows you can run the native Linux commands directly on Windows 10 systems. You can now setup Apache (&lt;span class="caps"&gt;LAMP&lt;/span&gt;) web server without the need of &lt;span class="caps"&gt;WAMP&lt;/span&gt; or &lt;span class="caps"&gt;XAMPP&lt;/span&gt; like servers.  All the files of the Linux apps will save on your C Drive without any contradiction with Windows files.&lt;/p&gt;
&lt;p&gt;We tried to set up Apache and &lt;span class="caps"&gt;PHP&lt;/span&gt; on Ubuntu on Windows 10 subsystem for Linux and it worked perfectly. It was smooth and performed better than installing a virtual machine using VirtualBox or other Virtualization software.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Installing PHP on Windows subsystem Linux" src="images/8001-5.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;So, in this way, anyone can enable the subsystem for Linux on Windows to test different Linux commands without compromising much on hardware resources.&lt;/p&gt;
&lt;hr/&gt;
&lt;h1 id="use-powershell-command-to-install-wsl"&gt;Use PowerShell command to Install &lt;span class="caps"&gt;WSL&lt;/span&gt;&lt;a class="headerlink" href="#use-powershell-command-to-install-wsl" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;原文： &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10"&gt;Windows Subsystem for Linux Installation Guide for Windows 10&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Install the Windows Subsystem for Linux&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Before installing any Linux distros for &lt;span class="caps"&gt;WSL&lt;/span&gt;, you must ensure that the “Windows Subsystem for Linux” optional feature is enabled:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open PowerShell as Administrator and run:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Restart your computer when prompted.&lt;/li&gt;
&lt;/ul&gt;</content><category term="Windows"></category><category term="windows"></category><category term="wsl"></category><category term="linux"></category></entry><entry><title>How to Install and Configure Askbot with Nginx on CentOS 7</title><link href="https://doobom.me/how-to-install-and-configure-askbot-with-nginx-on-centos-7" rel="alternate"></link><published>2020-02-10T10:56:00+08:00</published><updated>2020-02-10T10:56:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2020-02-10:/how-to-install-and-configure-askbot-with-nginx-on-centos-7</id><summary type="html">&lt;p&gt;Askbot is an open source software for creating Q&amp;amp;A forums based on Python Django Framework. It&amp;#8217;s basically a Q&amp;amp;A system like StackOverflow, Yahoo Answers, and others. Created by Mike Chan and Sailing Cai on 2009, and it&amp;#8217;s easy to install and configure on Linux systems like Ubuntu and CentOS. Many large open source software projects like Fedora and LibreOffice are using&amp;nbsp;it.&lt;/p&gt;</summary><content type="html">
&lt;blockquote&gt;
&lt;p&gt;原文: &lt;a href="https://www.howtoforge.com/tutorial/how-to-install-and-configure-askbot-with-nginx-on-centos-7/"&gt;How to Install and Configure Askbot with Nginx on CentOS 7&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Askbot is an open source software for creating Q&amp;amp;A forums based on Python Django Framework. It’s basically a Q&amp;amp;A system like StackOverflow, Yahoo Answers, and others. Created by Mike Chan and Sailing Cai on 2009, and it’s easy to install and configure on Linux systems like Ubuntu and CentOS. Many large open source software projects like Fedora and LibreOffice are using it.&lt;/p&gt;
&lt;p&gt;In this tutorial, we will show you how to install Askbot Python Django application using uWSGI and Nginx web server on CentOS 7 system. As for database, we will be using PostgreSQL for Askbot installation.&lt;/p&gt;
&lt;h1 id="what-we-will-do"&gt;What we will do&lt;a class="headerlink" href="#what-we-will-do" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Install dependencies&lt;/li&gt;
&lt;li&gt;Install and configure PostgreSQL&lt;/li&gt;
&lt;li&gt;Install and configure Askbot&lt;/li&gt;
&lt;li&gt;Install and configure uWSGI&lt;/li&gt;
&lt;li&gt;Install and configure Nginx Webserver&lt;/li&gt;
&lt;li&gt;Test the setup&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="prerequisites"&gt;Prerequisites&lt;a class="headerlink" href="#prerequisites" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;CentOS 7 Server&lt;/li&gt;
&lt;li&gt;Root privileges&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="step-1-install-dependencies"&gt;Step 1 - Install dependencies&lt;a class="headerlink" href="#step-1-install-dependencies" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;In this step, we will install some packages that are needed for successful Askbot installation. These include ‘Development Tools’, Epel repository, and some python-related tools (for managing Python packages). So let’s begin.&lt;/p&gt;
&lt;p&gt;First, install CentOS ‘Development Tools’ with yum group command below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yum group install &lt;span class="s1"&gt;'Development Tools'&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then install the Epel repository.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yum -y install epel-release&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And finally install the python packages, including python pip, python-devel and python six.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yum -y install python-pip python-devel python-six&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="Installing python" src="images/7002-1.png"/&gt;&lt;/p&gt;
&lt;h1 id="step-2-install-and-configure-postgresql"&gt;Step 2 - Install and configure PostgreSQL&lt;a class="headerlink" href="#step-2-install-and-configure-postgresql" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Now we need PostgreSQL database, which is available in the CentOS repository. In this section, we will discuss how you can install PostgreSQL database, change the postgres password user, create a new user and database for the Askbot installation, and finally, change the postgres authentication config.&lt;/p&gt;
&lt;p&gt;So let’s start with installing PostgreSQL from the repository using the yum command below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yum -y install postgresql-server postgresql-devel postgresql-contrib&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once the installation is complete, we need to initialize the database, which you can do using the command below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;postgresql-setup initdb&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Moving on, start postgres and enable it to launch automatically at the boot time.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;systemctl start postgresql&lt;/span&gt;
&lt;span class="code-line"&gt;systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; postgresql&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;At this point, the PostgreSQL database should be installed. Next, we need to reset the postgres user password. For this, first login as ‘postgres’ user and access the psql command line tool.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;su - postgres&lt;/span&gt;
&lt;span class="code-line"&gt;psql&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then give the postgres user a new password.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="se"&gt;\p&lt;/span&gt;assword postgres&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, create a new database and user for Askbot. For example, we want to create a new user ‘&lt;strong&gt;hakaselabs&lt;/strong&gt;‘ with password ‘&lt;strong&gt;hakase123&lt;/strong&gt;‘, and the database named ‘&lt;strong&gt;askbotdb&lt;/strong&gt;‘. The following postgres queries will help us create all of these.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;create database askbotdb&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;create user hakaselabs with password &lt;span class="s1"&gt;'hakase123'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;grant all privileges on database askbotdb to hakaselabs&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="Install PostgreSQL" src="images/7002-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;So now, a database and user for Askbot installation have been created. The next step is to edit the postgres configuration for authentication setup, which you can do by heading to the ‘pgsql/data’ directory and editing the ‘pg_hba.conf’ file with vim.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /var/lib/pgsql/data/&lt;/span&gt;
&lt;span class="code-line"&gt;vim pg_hba.conf&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once inside the file, change all authentication to md5, as shown below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;local   all             all                                     md5&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt; # IPv4 local connections:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt; host    all             all             127.0.0.1/32            md5&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt; # IPv6 local connections:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt; host    all             all             ::1/128                 md5&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="Configure PostgreSQL" src="images/7002-3.png"/&gt;&lt;/p&gt;
&lt;p&gt;Now, save and exit the file, and then restart the postgres service.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;systemctl restart postgresql&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So by now, the PostgreSQL database has been installed; database for the Askbot installation has been created; and the postgres user authentication method has been changed to md5.&lt;/p&gt;
&lt;h1 id="step-3-install-and-configure-askbot"&gt;Step 3 - Install and configure Askbot&lt;a class="headerlink" href="#step-3-install-and-configure-askbot" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;In this step, we will discuss the installation and configuration of Askbot. We will install Askbot under a user named ‘askbot’, and using the virtualenv python. So let’s begin.&lt;/p&gt;
&lt;p&gt;Firstly, create a new user ‘askbot’ and give the user a new password.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;useradd -m -s /bin/bash askbot&lt;/span&gt;
&lt;span class="code-line"&gt;passwd askbot&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then add the ‘askbot’ user to the ‘wheel’ group for sudo command access (not sure what ‘sudo’ is? Learn more about it &lt;a href="https://www.howtoforge.com/tutorial/sudo-beginners-guide/"&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;usermod -a -G wheel askbot&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="Install AskBot" src="images/7002-4.png"/&gt;&lt;/p&gt;
&lt;p&gt;Now upgrade pip to the latest version and install the python virtualenv package.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install --upgrade pip&lt;/span&gt;
&lt;span class="code-line"&gt;pip install virtualenv six&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="Install pip" src="images/7002-5.png"/&gt;&lt;/p&gt;
&lt;p&gt;Next. log in as ‘askbot’ user and create new python virtual environment ‘hakase-labs’ with virtualenv.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;su - askbot&lt;/span&gt;
&lt;span class="code-line"&gt;virtualenv hakase-labs/&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Go to the ‘hakase-labs’ directory and activate the virtual environment for Askbot installation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; hakase-labs/&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;source&lt;/span&gt; bin/activate&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now install askbot and other python packages with pip command on ‘hakase-labs’ virtual environment.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install six &lt;/span&gt;
&lt;span class="code-line"&gt;pip install askbot psycopg2&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="installing askbot" src="images/7002-6.png"/&gt;&lt;/p&gt;
&lt;p&gt;Next, create a new directory for the ‘Askbot’ project. Please make sure you don’t use ‘askbot’ as the directory name. In our case, for example, we created a new directory named ‘myapp’&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir myapp/&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Go to the myapp directory and run the ‘askbot-setup’ command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; myapp/&lt;/span&gt;
&lt;span class="code-line"&gt;askbot-setup&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The ‘askbot-setup’ command will ask you certain things. For example, you will be asked about directory path to deploy Askbot - you can type ‘.’ and press Enter to continue. Similarly, when asked about database engine, type ‘1’ to use postgresql and press Enter. For database-related details, enter databasename as ‘askbotdb’, database user as ‘hakaselabs’, and password as ‘hakase123’.&lt;/p&gt;
&lt;p&gt;&lt;img alt="configure the application" src="images/7002-7.png"/&gt;&lt;/p&gt;
&lt;p&gt;So Askbot is now installed on the ‘myapp’ directory. Now we need to generate Askbot Django static files and the database.&lt;/p&gt;
&lt;p&gt;Run the command below to generate Askbot Django static files.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python manage.py collectstatic&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When asked for confirmation, type ‘yes’ and press Enter.&lt;/p&gt;
&lt;p&gt;&lt;img alt="python manage.py" src="images/7002-8.png"/&gt;&lt;/p&gt;
&lt;p&gt;Now, to generate the database, run syncdb as below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python manage.py syncdb&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You will be asked about creating the admin user and password. So when asked, type the username, email, and password for admin configuration.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Create admin user" src="images/7002-9.png"/&gt;&lt;/p&gt;
&lt;p&gt;So by now, Askbot has been installed, static files have been generated, and the database configuration has been completed.&lt;/p&gt;
&lt;p&gt;You can test the Askbot installation with runserver command below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python manage.py runserver &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0:8080&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Open your Web browser and type the server &lt;span class="caps"&gt;IP&lt;/span&gt; address, and you should see a page similar to the following:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Result in web browser" src="images/7002-10.png"/&gt;&lt;/p&gt;
&lt;h1 id="step-4-install-and-configure-uwsgi"&gt;Step 4 - Install and configure uWSGI&lt;a class="headerlink" href="#step-4-install-and-configure-uwsgi" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;We will be using uWSGI as service for the Askbot Django project. Specifically, we will be using uWSGI with Nginx web server for the Askbot installation. So let’s begin.&lt;/p&gt;
&lt;p&gt;Firstly, install uWSGI using the pip command, as shown below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo pip install uwsgi&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After the installation is complete, create a new directory for the uWSGI virtual host files. For example, in our case, we created ‘/etc/uwsgi/sites’.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir -p /etc/uwsgi/sites&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Go to the newly-created directory and create new askbot uWSGI configuration with vim.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /etc/uwsgi/sites&lt;/span&gt;
&lt;span class="code-line"&gt;vim askbot.ini&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Paste the following configuration in the file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[uwsgi]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="c1"&gt;# Project directory, Python directory&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="na"&gt;chdir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/home/askbot/hakase-labs/myapp&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; home = /home/askbot/hakase-labs/&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; static-map = /m=/home/askbot/hakase-labs/myapp/static&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; wsgi-file = /home/askbot/hakase-labs/myapp/django.wsgi&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="na"&gt;master&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;true&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; processes = 5&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="c1"&gt;# Askbot will running under the sock file&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="na"&gt;socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/run/uwsgi/askbot.sock&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; chmod-socket = 664&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; uid = askbot&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; gid = nginx&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; vacuum = true&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="c1"&gt;# uWSGI Log file&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="na"&gt;logto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/var/log/uwsgi.log&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That’s it. Save the file and exit from the editor.&lt;/p&gt;
&lt;p&gt;Next, add new uWSGI service script file to the ‘/etc/systemd/system’ directory. Go to the directory and create the ‘uwsgi.service’ file with vim.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /etc/systemd/system/&lt;/span&gt;
&lt;span class="code-line"&gt;vim uwsgi.service&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Paste the following uWSGI service configuration in the file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[Unit]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="na"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;uWSGI Emperor service&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="k"&gt;[Service]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="na"&gt;ExecStartPre&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/bin/bash -c 'mkdir -p /run/uwsgi; chown askbot:nginx /run/uwsgi'&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; ExecStart=/bin/uwsgi --emperor /etc/uwsgi/sites&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; Restart=always&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; KillSignal=SIGQUIT&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; Type=notify&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; NotifyAccess=all&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="k"&gt;[Install]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="na"&gt;WantedBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;multi-user.target&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Save and exit.&lt;/p&gt;
&lt;p&gt;Now, reload systemd services and enable uWSGI to start automatically at the boot time.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;systemctl daemon-reload&lt;/span&gt;
&lt;span class="code-line"&gt;systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; uwsgi&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="Reload services" src="images/7002-11.png"/&gt;&lt;/p&gt;
&lt;p&gt;So with this, uWSGI has been installed, and you should see it running as a service.&lt;/p&gt;
&lt;h1 id="step-5-install-and-configure-nginx-webserver"&gt;Step 5 - Install and configure Nginx webserver&lt;a class="headerlink" href="#step-5-install-and-configure-nginx-webserver" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;So, Askbot is now installed, and it’s running under uWSGI sock file ‘askbot.sock’. In this step, we will be using Nginx web server as a reverse proxy for uWSGI application ‘Askbot’.&lt;/p&gt;
&lt;p&gt;To begin with, install Nginx with the yum command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yum -y install nginx&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now go to the Nginx ‘conf.d’ directory and create new virtual host file ‘askbot.conf’ with the vim editor.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /etc/nginx/conf.d/&lt;/span&gt;
&lt;span class="code-line"&gt;vim askbot.conf&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="install nginx" src="images/7002-12.png"/&gt;&lt;/p&gt;
&lt;p&gt;Paste the following Askbot Nginx configuration in the file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;server {&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;         listen 80;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;         server_name askbot.me www.askbot.me;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;         location / {&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;         include         uwsgi_params;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;         uwsgi_pass      unix:/run/uwsgi/askbot.sock;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;    }&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt; }&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Save the file and exit from the editor. Now, test the configuration to make sure there is no error.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;nginx -t&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, start Nginx and uWSGI services.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;systemctl start nginx&lt;/span&gt;
&lt;span class="code-line"&gt;systemctl start uwsgi&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And enable them to start automatically at the boot time.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; nginx&lt;/span&gt;
&lt;span class="code-line"&gt;systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; uwsgi&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="test nginx config and restart nginx" src="images/7002-13.png"/&gt;&lt;/p&gt;
&lt;p&gt;So Nginx is now installed as a reverse proxy for uWSGI application ‘Askbot’.&lt;/p&gt;
&lt;h1 id="step-6-test-the-setup"&gt;Step 6 - Test the setup&lt;a class="headerlink" href="#step-6-test-the-setup" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Open your web browser and visit the Askbot domain name: askbot.me, and you will get to see the home page, as shown below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="askbot domain" src="images/7002-14.png"/&gt;&lt;/p&gt;
&lt;p&gt;Here’s the Askbot user login page:&lt;/p&gt;
&lt;p&gt;&lt;img alt="askbot login" src="images/7002-15.png"/&gt;&lt;/p&gt;
&lt;p&gt;Askbot user dashboard:&lt;/p&gt;
&lt;p&gt;&lt;img alt="askbot dashboard" src="images/7002-16.png"/&gt;&lt;/p&gt;
&lt;p&gt;Askbot admin setting:&lt;/p&gt;
&lt;p&gt;&lt;img alt="askbot admin dashboard" src="images/7002-17.png"/&gt;&lt;/p&gt;
&lt;p&gt;Askbot Django admin login:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Django admin login" src="images/7002-18.png"/&gt;&lt;/p&gt;
&lt;p&gt;Askbot Django admin dashboard:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Django admin dashboard" src="images/7002-19.png"/&gt;&lt;/p&gt;
&lt;p&gt;So the Q&amp;amp;A system application ‘Askbot’ has been successfully installed with uWSGI and Nginx web server on CentOS 7 server.&lt;/p&gt;
&lt;h1 id="reference"&gt;Reference&lt;a class="headerlink" href="#reference" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://askbot.org/en/"&gt;https://askbot.org/en/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Linux"></category><category term="nginx"></category><category term="uWSGI"></category><category term="PostgreSQL"></category><category term="python"></category><category term="Q&amp;A"></category><category term="askbot"></category><category term="centos"></category></entry><entry><title>git ssh 配置</title><link href="https://doobom.me/git-auth-via-ssh-key" rel="alternate"></link><published>2020-02-06T15:09:00+08:00</published><updated>2020-02-06T15:09:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2020-02-06:/git-auth-via-ssh-key</id><summary type="html">&lt;p&gt;用 ssh 私钥登录 github&amp;nbsp;配置记录&lt;/p&gt;</summary><content type="html">&lt;h3 id="git"&gt;添加用户名及邮箱到 git 的全局配置&lt;a class="headerlink" href="#git" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git config --global user.name &lt;span class="s2"&gt;&amp;quot;Your Name Here&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Sets the default name for git to use when you commit&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;git config --global user.email &lt;span class="s2"&gt;&amp;quot;your_email@example.com&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Sets the default email for git to use when you commit&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="ssh"&gt;生成 ssh 密钥文件（已有证书就忽略&lt;a class="headerlink" href="#ssh" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1. 邮箱改成你的 github&amp;nbsp;邮件，根据提示操作创建密钥&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh-keygen -t rsa -b &lt;span class="m"&gt;4096&lt;/span&gt; -C &lt;span class="s2"&gt;&amp;quot;your_email@example.com&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;2. 提示 &lt;code&gt;nter a file in which to save the key,&lt;/code&gt; 输入文件保存的路径，直接回车就保存到提示的目录&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Enter a file in which to save the key &lt;span class="o"&gt;(&lt;/span&gt;/c/Users/you/.ssh/id_rsa&lt;span class="o"&gt;)&lt;/span&gt;:&lt;span class="o"&gt;[&lt;/span&gt;Press enter&lt;span class="o"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;3.&amp;nbsp;如果需要添加密码就在出现下面提示时输入&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Enter passphrase &lt;span class="o"&gt;(&lt;/span&gt;empty &lt;span class="k"&gt;for&lt;/span&gt; no passphrase&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;Type a passphrase&lt;span class="o"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Enter same passphrase again: &lt;span class="o"&gt;[&lt;/span&gt;Type passphrase again&lt;span class="o"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="ssh_1"&gt;设置 ssh&lt;a class="headerlink" href="#ssh_1" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1. 修改 &lt;code&gt;/etc/ssh/ssh_config&lt;/code&gt;,&amp;nbsp;在文件末尾添加&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Host github.com&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;    User git&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;    Hostname github.com&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;    IdentityFile /etc/ssh/github-ecdsa-521&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;2. 将公钥添加到 github&amp;nbsp;帐户&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;复制公钥文件到剪贴板&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;clip &amp;lt; /etc/ssh/github-ecdsa-521.pub&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Copies the contents of the id_rsa.pub file to your clipboard&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;然后点击 你的头像 -&amp;gt; &lt;code&gt;Setting&lt;/code&gt; -&amp;gt; &lt;code&gt;SSH and GPG keys&lt;/code&gt; -&amp;gt; &lt;code&gt;New SSH key&lt;/code&gt; -&amp;gt; 取个名字，粘贴上公钥 -&amp;gt; &lt;code&gt;Add SSH key&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3.&amp;nbsp;用命令测试一下&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh -T git@github.com&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果提示信息里面能看到你的用户名就说明成功了&lt;/p&gt;
&lt;h3 id="_1"&gt;参考&lt;a class="headerlink" href="#_1" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://help.github.com/en/github/authenticating-to-github"&gt;GitHub&amp;nbsp;Help&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;-= 完&amp;nbsp;=-&lt;/p&gt;</content><category term="git"></category><category term="git"></category><category term="github"></category><category term="ssh"></category></entry><entry><title>Nginx 配置跨域请求 Access-Control-Allow-Origin *</title><link href="https://doobom.me/nginx-access-control-allow-origin" rel="alternate"></link><published>2020-01-28T16:36:00+08:00</published><updated>2020-01-28T16:36:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2020-01-28:/nginx-access-control-allow-origin</id><summary type="html">&lt;p&gt;nginx&amp;nbsp;跨域请求&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;原文: &lt;a href="https://segmentfault.com/a/1190000012550346"&gt;https://segmentfault.com/a/1190000012550346&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作者:&amp;nbsp;Developer&lt;/p&gt;
&lt;p&gt;本作品系 原作者原创 ， 采用&lt;a href="https://creativecommons.org/licenses/by-nc-nd/4.0/"&gt;《署名-非商业性使用-禁止演绎 4.0&amp;nbsp;国际》许可协议&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当出现 &lt;code&gt;403&lt;/code&gt; 跨域错误的时候 &lt;code&gt;No 'Access-Control-Allow-Origin' header is present on the requested resource&lt;/code&gt;，需要给 Nginx 服务器配置响应的 &lt;code&gt;header&lt;/code&gt;参数：&lt;/p&gt;
&lt;h2 id="_1"&gt;一、 解决方案&lt;a class="headerlink" href="#_1" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;只需要在Nginx的配置文件中配置以下参数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;  &lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;add_header&lt;/span&gt; &lt;span class="k"&gt;Access&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Control&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Allow&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Origin&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;add_header&lt;/span&gt; &lt;span class="k"&gt;Access&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Control&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Allow&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Methods&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GET, POST, OPTIONS&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;add_header&lt;/span&gt; &lt;span class="k"&gt;Access&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Control&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Allow&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Headers&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;request_method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;OPTIONS&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;204&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="err"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;}&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上面配置代码即可解决问题了，不想深入研究的，看到这里就可以啦=-=&lt;/p&gt;
&lt;h2 id="_2"&gt;二、 解释&lt;a class="headerlink" href="#_2" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1.&amp;nbsp;Access-Control-Allow-Origin&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;服务器默认是不被允许跨域的。给 Nginx 服务器配置&lt;code&gt;Access-Control-Allow-Origin *&lt;/code&gt;后，表示服务器可以接受所有的请求源（Origin）,即接受所有跨域的请求。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Access-Control-Allow-Headers&amp;nbsp;是为了防止出现以下错误：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Request header field Content-Type is not allowed by Access-Control-Allow-Headers in preflight response.&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这个错误表示当前请求 &lt;code&gt;Content-Type&lt;/code&gt; 的值不被支持。其实是我们发起了 &lt;code&gt;application/json&lt;/code&gt; 的类型请求导致的。这里涉及到一个概念：预检请求（preflight&amp;nbsp;request）,请看下面&amp;#8221;预检请求&amp;#8221;的介绍。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. Access-Control-Allow-Methods&amp;nbsp;是为了防止出现以下错误：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Content-Type is not allowed by Access-Control-Allow-Headers in preflight response.&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;4.给 &lt;code&gt;OPTIONS&lt;/code&gt; 添加 &lt;code&gt;204&lt;/code&gt; 的返回，是为了处理在发送 &lt;span class="caps"&gt;POST&lt;/span&gt; 请求时 Nginx&amp;nbsp;依然拒绝访问的错误&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;发送&amp;#8221;预检请求&amp;#8221;时，需要用到方法 &lt;code&gt;OPTIONS&lt;/code&gt; ,所以服务器需要允许该方法。&lt;/p&gt;
&lt;h2 id="preflight-request"&gt;三、 预检请求（preflight request）&lt;a class="headerlink" href="#preflight-request" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;其实上面的配置涉及到了一个 &lt;span class="caps"&gt;W3C&lt;/span&gt; 标准： &lt;code&gt;CROS&lt;/code&gt;,全称是跨域资源共享 (Cross-origin resource&amp;nbsp;sharing)，它的提出就是为了解决跨域请求的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;跨域资源共享(&lt;span class="caps"&gt;CORS&lt;/span&gt;)标准新增了一组 &lt;span class="caps"&gt;HTTP&lt;/span&gt; 首部字段，允许服务器声明哪些源站有权限访问哪些资源。另外，规范要求，&lt;strong&gt;对那些可能对服务器数据产生副作用的HTTP 请求方法（特别是 &lt;span class="caps"&gt;GET&lt;/span&gt; 以外的 &lt;span class="caps"&gt;HTTP&lt;/span&gt; 请求，或者搭配某些 &lt;span class="caps"&gt;MIME&lt;/span&gt; 类型的 &lt;span class="caps"&gt;POST&lt;/span&gt; 请求）&lt;/strong&gt;，浏览器必须首先使用 &lt;span class="caps"&gt;OPTIONS&lt;/span&gt; 方法发起一个预检请求（preflight request），从而获知服务端是否允许该跨域请求。服务器确认允许之后，才发起实际的 &lt;span class="caps"&gt;HTTP&lt;/span&gt; 请求。在预检请求的返回中，服务器端也可以通知客户端，是否需要携带身份凭证（包括 Cookies 和 &lt;span class="caps"&gt;HTTP&lt;/span&gt;&amp;nbsp;认证相关数据）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其实 &lt;code&gt;Content-Type&lt;/code&gt; 字段的类型为 &lt;code&gt;application/json&lt;/code&gt; 的请求就是上面所说的搭配某些 &lt;code&gt;MIME&lt;/code&gt; 类型的 &lt;code&gt;POST&lt;/code&gt; 请求,&lt;span class="caps"&gt;CORS&lt;/span&gt; 规定，&lt;code&gt;Content-Type&lt;/code&gt; 不属于以下 &lt;code&gt;MIME&lt;/code&gt; 类型的，都属于预检请求：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;application/x-www-form-urlencoded&lt;/span&gt;
&lt;span class="code-line"&gt;multipart/form-data&lt;/span&gt;
&lt;span class="code-line"&gt;text/plain&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;所以 &lt;code&gt;application/json&lt;/code&gt; 的请求 会在正式通信之前，增加一次&amp;#8221;预检&amp;#8221;请求，这次&amp;#8221;预检&amp;#8221;请求会带上头部信息 &lt;code&gt;Access-Control-Request-Headers: Content-Type&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;OPTIONS /api/test HTTP/1.1&lt;/span&gt;
&lt;span class="code-line"&gt;Origin: http://foo.example&lt;/span&gt;
&lt;span class="code-line"&gt;Access-Control-Request-Method: POST&lt;/span&gt;
&lt;span class="code-line"&gt;Access-Control-Request-Headers: Content-Type&lt;/span&gt;
&lt;span class="code-line"&gt;... 省略了一些&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;服务器回应时，返回的头部信息如果不包含 &lt;code&gt;Access-Control-Allow-Headers: Content-Type&lt;/code&gt; 则表示不接受非默认的的 &lt;code&gt;Content-Type&lt;/code&gt;。即出现以下错误：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Request header field Content-Type is not allowed by Access-Control-Allow-Headers in preflight response.&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="_3"&gt;参考文章：&lt;a class="headerlink" href="#_3" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ruanyifeng.com/blog/2016/04/cors.html"&gt;阮一峰【跨域资源共享 &lt;span class="caps"&gt;CORS&lt;/span&gt;&amp;nbsp;详解】&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/zh-CN/"&gt;&lt;span class="caps"&gt;MDN&lt;/span&gt; web docs【HTTP访问控制（&lt;span class="caps"&gt;CORS&lt;/span&gt;）】&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="nginx"></category><category term="nginx"></category><category term="header"></category><category term="cors"></category><category term="cross-site"></category></entry><entry><title>MariaDB 主从数据库同步</title><link href="https://doobom.me/mariadb-master-slave-server-sync" rel="alternate"></link><published>2020-01-15T16:15:00+08:00</published><updated>2020-01-15T16:15:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2020-01-15:/mariadb-master-slave-server-sync</id><summary type="html">&lt;p&gt;MariaDB&amp;nbsp;主从数据库同步&lt;/p&gt;</summary><content type="html">&lt;h2 id="_1"&gt;环境：&lt;a class="headerlink" href="#_1" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="caps"&gt;OS&lt;/span&gt;: CentOS 7.4&amp;nbsp;x64&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;DB&lt;/span&gt;: MariaDB&amp;nbsp;5.5.56&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_2"&gt;服务端新建一个用于同步的用户：&lt;a class="headerlink" href="#_2" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;MariaDB &lt;span class="o"&gt;[(&lt;/span&gt;none&lt;span class="o"&gt;)]&lt;/span&gt;&amp;gt; GRANT FILE, REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO &lt;span class="s1"&gt;&amp;#39;sync_account&amp;#39;&lt;/span&gt;@&lt;span class="s1"&gt;&amp;#39;%&amp;#39;&lt;/span&gt; IDENTIFIED BY &lt;span class="s1"&gt;&amp;#39;123456&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="mycnf"&gt;修改服务端 my.cnf 配置文件：&lt;a class="headerlink" href="#mycnf" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;server-id = 1              #Server标识, 不能重复&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;log-bin = mysql-bin        #日志文件名&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;auto_increment_increment=2 #自动增长的步长 解决多个主机自动增长出现重复问题 这个主机使用奇数值 另外一个主机使用偶数值  &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;auto_increment_offset=1    #自动增长的起始数值&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;binlog-do-db=testdb        #指定需要日志的数据库，多个加一行，不需要就注释&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;binlog-ignore-db = db_name #指定不需要日志的数据库，多个加一行，不需要就注释&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;replicate-do-db = testdb   #指定从端需要同步的数据库，多个加一行，不需要就注释&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="mariadb"&gt;重启 MariaDB:&lt;a class="headerlink" href="#mariadb" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;service mariadb restart&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;配置过程中为了防止突然的主机数据写入 导致配置主从失败 可以将机器锁定只允许读 注意千万不要将从机配成锁定&amp;nbsp;否则无法同步数据了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;MariaDB &lt;span class="o"&gt;[(&lt;/span&gt;none&lt;span class="o"&gt;)]&lt;/span&gt;&amp;gt; FLUSH TABLES WITH READ LOCK&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;配置完从端解锁：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;MariaDB &lt;span class="o"&gt;[(&lt;/span&gt;none&lt;span class="o"&gt;)]&lt;/span&gt;&amp;gt; UNLOCK TABLES&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="_3"&gt;备份数据库：&lt;a class="headerlink" href="#_3" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mysql -u root -p --quick --all-databases --flush-logs --delete-master-logs --single-transaction &amp;gt; sync.sql&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="_4"&gt;查看服务端状态&lt;a class="headerlink" href="#_4" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;MariaDB &lt;span class="o"&gt;[(&lt;/span&gt;none&lt;span class="o"&gt;)]&lt;/span&gt;&amp;gt; SHOW MASTER STATUS&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;显示类似如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;+------------------+----------+-------------------------------------+------------------+&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;|&lt;/span&gt; File             &lt;span class="p"&gt;|&lt;/span&gt; Position &lt;span class="p"&gt;|&lt;/span&gt; Binlog_Do_DB                        &lt;span class="p"&gt;|&lt;/span&gt; Binlog_Ignore_DB &lt;span class="p"&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;+------------------+----------+-------------------------------------+------------------+&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;|&lt;/span&gt; mysql-bin.000013 &lt;span class="p"&gt;|&lt;/span&gt;  &lt;span class="m"&gt;1714336&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; testdb                              &lt;span class="p"&gt;|&lt;/span&gt;                  &lt;span class="p"&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;+------------------+----------+-------------------------------------+------------------+&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;1&lt;/span&gt; row in &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00 sec&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="_5"&gt;从端导入数据库&lt;a class="headerlink" href="#_5" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mysql -u root -p &amp;lt; sync.sql&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="mycnf_1"&gt;修改从端 my.cnf 配置文件：&lt;a class="headerlink" href="#mycnf_1" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;server-id = 2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;auto_increment_increment=3  &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;auto_increment_offset=1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;#其余项目与服务端一致就可以了, 完了重启 MariaDB&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="_6"&gt;配置从端主服务器信息：&lt;a class="headerlink" href="#_6" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;MariaDB &lt;span class="o"&gt;[(&lt;/span&gt;none&lt;span class="o"&gt;)]&lt;/span&gt;&amp;gt; CHANGE MASTER TO &lt;span class="nv"&gt;MASTER_HOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;master.host.name&amp;#39;&lt;/span&gt;,&lt;span class="se"&gt;\ &lt;/span&gt; &lt;span class="c1"&gt;#主服务器主机名称&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    -&amp;gt; &lt;span class="nv"&gt;MASTER_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sync_account&amp;#39;&lt;/span&gt;,&lt;span class="se"&gt;\ &lt;/span&gt;                                 &lt;span class="c1"&gt;#用于复制的用户&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    -&amp;gt; &lt;span class="nv"&gt;MASTER_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;12345&amp;#39;&lt;/span&gt;,&lt;span class="se"&gt;\ &lt;/span&gt;                                    &lt;span class="c1"&gt;#复制用户的密码&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    -&amp;gt; &lt;span class="nv"&gt;MASTER_PORT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3306&lt;/span&gt;,&lt;span class="se"&gt;\ &lt;/span&gt;                                           &lt;span class="c1"&gt;#连接使用的端口&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    -&amp;gt; &lt;span class="nv"&gt;MASTER_LOG_FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mysql-bin.000013&amp;#39;&lt;/span&gt;,&lt;span class="se"&gt;\ &lt;/span&gt;                         &lt;span class="c1"&gt;#起点日志文件&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    -&amp;gt; &lt;span class="nv"&gt;MASTER_LOG_POS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1714336&lt;/span&gt;,&lt;span class="se"&gt;\ &lt;/span&gt;                                     &lt;span class="c1"&gt;#起点位置&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    -&amp;gt; &lt;span class="nv"&gt;MASTER_CONNECT_RETRY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;,&lt;span class="se"&gt;\ &lt;/span&gt;                                    &lt;span class="c1"&gt;#连接重试间隔&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    -&amp;gt; &lt;span class="nv"&gt;MASTER_HEARTBEAT_PERIOD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                                    &lt;span class="c1"&gt;#心跳间隔时间&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="_7"&gt;启动从端数据库同步&lt;a class="headerlink" href="#_7" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;MariaDB &lt;span class="o"&gt;[(&lt;/span&gt;none&lt;span class="o"&gt;)]&lt;/span&gt;&amp;gt; START SLAVE&lt;span class="p"&gt;;&lt;/span&gt;                            &lt;span class="c1"&gt;#启动同步进程&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="_8"&gt;查看同步信息&lt;a class="headerlink" href="#_8" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;MariaDB &lt;span class="o"&gt;[(&lt;/span&gt;none&lt;span class="o"&gt;)]&lt;/span&gt;&amp;gt; SHOW SLAVE STATUS&lt;span class="se"&gt;\G&lt;/span&gt;                     &lt;span class="c1"&gt;#查看从服务器线程的关键参数的信息&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;*************************** &lt;span class="m"&gt;1&lt;/span&gt;. row ***************************&lt;/span&gt;
&lt;span class="code-line"&gt;               Slave_IO_State: Waiting &lt;span class="k"&gt;for&lt;/span&gt; master to send event&lt;/span&gt;
&lt;span class="code-line"&gt;                  Master_Host: master&lt;/span&gt;
&lt;span class="code-line"&gt;                  Master_User: backup1                    &lt;span class="c1"&gt;#被用于连接主服务器的当前用户&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;                  Master_Port: &lt;span class="m"&gt;3306&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;                Connect_Retry: &lt;span class="m"&gt;10&lt;/span&gt;                         &lt;span class="c1"&gt;#连接重试间隔&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;              Master_Log_File: mysql-bin.000003           &lt;span class="c1"&gt;#I/O线程当前正在读取的主服务器二进制日志文件的名称&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;          Read_Master_Log_Pos: &lt;span class="m"&gt;1832&lt;/span&gt;                       &lt;span class="c1"&gt;#在当前的主服务器二进制日志中，I/O线程已经读取的位置&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;               Relay_Log_File: relay-bin.000003           &lt;span class="c1"&gt;#SQL线程当前正在读取和执行的中继日志文件的名称&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;                Relay_Log_Pos: &lt;span class="m"&gt;529&lt;/span&gt;                        &lt;span class="c1"&gt;#在当前的中继日志中，SQL线程已读取和执行的位置&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        Relay_Master_Log_File: mysql-bin.000003           &lt;span class="c1"&gt;#由SQL线程执行的包含多数近期事件的主服务器二进制日志文件的名称&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;             Slave_IO_Running: Yes                        &lt;span class="c1"&gt;#I/O线程是否被启动并成功地连接到主服务器上&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            Slave_SQL_Running: Yes                        &lt;span class="c1"&gt;#SQL线程是否被启动&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            ...&lt;/span&gt;
&lt;span class="code-line"&gt;             Master_Server_Id: &lt;span class="m"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;查看从端 &lt;code&gt;MASTER&lt;/code&gt; 状态，然后在主端启动服务器同步就可以实现相互同步了。&lt;/p&gt;
&lt;h2 id="_9"&gt;参考：&lt;a class="headerlink" href="#_9" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.csdn.net/mycwq/article/details/17136001"&gt;MySQL数据库设置主从同步&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.csdn.net/guoguo1980/article/details/2343722"&gt;实现两个Mysql数据库之间的主从同步&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.csdn.net/liaomin416100569/article/details/78580382"&gt;mariadb配置双主多从&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cnblogs.com/xyhome/p/6892631.html"&gt;MariaDB主从同步&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.mysql.com/doc/refman/5.7/en/change-master-to.html"&gt;MySQL&amp;nbsp;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="MySQL"></category><category term="mysql"></category><category term="mariadb"></category><category term="sync"></category></entry><entry><title>使用 grep/sed/awk 提取字符串</title><link href="https://doobom.me/get-string-in-shell-via-grep-sed-awk" rel="alternate"></link><published>2019-07-17T10:23:00+08:00</published><updated>2019-07-17T10:23:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2019-07-17:/get-string-in-shell-via-grep-sed-awk</id><summary type="html">&lt;p&gt;使用 grep/sed/awk&amp;nbsp;提取字符串&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;原文: &lt;a href="http://curryhuang.com/2015/07/18/extract-string-by-grep-sed-awk/"&gt;http://curryhuang.com/2015/07/18/extract-string-by-grep-sed-awk/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最近需要对日志进行分析，顺便学习了一下以前一直都没弄得太明白的awk和sed。&lt;/p&gt;
&lt;h2 id="_1"&gt;任务描述&lt;a class="headerlink" href="#_1" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;日志是一个 tsv 文件，这里以 sample.log 为例，每一行大致长成下面这样，需要查看某个 api 的最长 10 次查询时间。根据记录格式，需要提取最后一个字段 &lt;code&gt;ts=&lt;/code&gt; 之后的字符串，然后进行排序，排序和求 &lt;code&gt;top&lt;/code&gt; 比较容易，&lt;code&gt;sort -nr | head -n 10&lt;/code&gt; 即可，比较麻烦的是从字符串中提取数字。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2015&lt;/span&gt;-07-18 &lt;span class="m"&gt;11&lt;/span&gt;:00:01,807&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;service_name&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;INFO&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;172&lt;/span&gt;.0.0.1&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;api/mock_api1&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;ts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;239&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="_2"&gt;解决方案&lt;a class="headerlink" href="#_2" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Google 了一番以后，发现 grep/sed/awk&amp;nbsp;均可以，下面分别说一下每一种方案。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;以下方案均在CentOS6上测试通过&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="grep"&gt;grep&lt;a class="headerlink" href="#grep" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;grep &lt;span class="s2"&gt;&amp;quot;api/mock_api1&amp;quot;&lt;/span&gt; sample.log &lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;grep -Eo &lt;span class="s1"&gt;&amp;#39;\[ts=[0-9]+\]&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;grep -Eo &lt;span class="s1"&gt;&amp;#39;[0-9]+&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;grep 参数说明：
&lt;code&gt;E&lt;/code&gt; 使用正则表达式
&lt;code&gt;o&lt;/code&gt; 只返回匹配的部分&lt;/p&gt;
&lt;p&gt;分两部匹配，第一步提取出&lt;code&gt;[ts=xxxx]&lt;/code&gt;，第二步提取出数字&lt;/p&gt;
&lt;h3 id="sed"&gt;sed&lt;a class="headerlink" href="#sed" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;grep &lt;span class="s2"&gt;&amp;quot;api/mock_api1&amp;quot;&lt;/span&gt; sample.log &lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;grep -Eo &lt;span class="s1"&gt;&amp;#39;\[ts=[0-9]+\]&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;sed -r &lt;span class="s1"&gt;&amp;#39;s/\[ts=([0-9]+)\]/\1/g&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;sed参数说明：
&lt;code&gt;r&lt;/code&gt; 使用正则表达式&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;sed&lt;/code&gt; 也需要通过 &lt;code&gt;grep&lt;/code&gt; 先匹配出最后一个字段，再使用 &lt;code&gt;sed&lt;/code&gt; 提取数字部分，&lt;code&gt;\1&lt;/code&gt;表示正则表达式中的分组1&lt;/p&gt;
&lt;h3 id="gawk"&gt;gawk&lt;a class="headerlink" href="#gawk" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;grep &lt;span class="s2"&gt;&amp;quot;api/mock_api1&amp;quot;&lt;/span&gt; sample.log &lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;gawk -F&lt;span class="s1"&gt;&amp;#39;\t&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;match($6, /\[ts=([0-9]+)\]/, arr) { print arr[1] }&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;gawk 参数说明：
&lt;code&gt;F&lt;/code&gt; 指定分隔符，这里指定为tab
&lt;code&gt;match&lt;/code&gt; 的函数参数分别为：待匹配字符串，模式，匹配后的字符串分组&lt;/p&gt;
&lt;p&gt;&lt;code&gt;awk&lt;/code&gt; 比较强大，可以直接提取出字段信息，这里使用的是 &lt;code&gt;gawk&lt;/code&gt;，&lt;code&gt;gawk&lt;/code&gt; 兼容 &lt;code&gt;awk&lt;/code&gt; 语法，经测试，同样的语法 &lt;code&gt;awk&lt;/code&gt; 无法满足需求，应该是 &lt;code&gt;gawk&lt;/code&gt; 和 &lt;code&gt;awk&lt;/code&gt; 实现有细微区别。&lt;/p&gt;
&lt;h2 id="_3"&gt;总结&lt;a class="headerlink" href="#_3" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;如果仅仅是提取一个字段信息，三个工具都可以满足需求，相比起来，awk的功能更强大，完成字符串提取，&lt;code&gt;grep&lt;/code&gt; 和 &lt;code&gt;sed&lt;/code&gt; 的能力更多依赖正则表达式，如果需要同时处理一行记录中的多个字段，比如找出访问请求最长的 10 个 ip，&lt;code&gt;grep&lt;/code&gt; 和 &lt;code&gt;sed&lt;/code&gt; 就需要很复杂的正则表达式去匹配。&lt;/p&gt;</content><category term="Shell"></category><category term="shell"></category><category term="grep"></category><category term="sed"></category><category term="awk"></category></entry><entry><title>如何用 js 准确获取当前页面url网址信息</title><link href="https://doobom.me/get-url-info-via-javascript" rel="alternate"></link><published>2019-05-16T09:58:00+08:00</published><updated>2019-05-16T09:58:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2019-05-16:/get-url-info-via-javascript</id><summary type="html">&lt;p&gt;在 &lt;span class="caps"&gt;WEB&lt;/span&gt; 开发中，时常会用到 javascript 来获取当前页面的 url 网址信息，在这里是我的一些获取 url&amp;nbsp;信息的小总结。&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;原文： &lt;a href="https://blog.csdn.net/voke_/article/details/78293076"&gt;https://blog.csdn.net/voke_/article/details/78293076&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 &lt;span class="caps"&gt;WEB&lt;/span&gt; 开发中，时常会用到 javascript 来获取当前页面的 url 网址信息，在这里是我的一些获取 url 信息的小总结。 
下面我们举例一个 &lt;span class="caps"&gt;URL&lt;/span&gt;，然后获得它的各个组成部分：http://i.cnblogs.com/EditPosts.aspx?opt=1&lt;/p&gt;
&lt;h2 id="1windowlocationhref-url"&gt;1、window.location.href(设置或获取整个 &lt;span class="caps"&gt;URL&lt;/span&gt; 为字符串)&lt;a class="headerlink" href="#1windowlocationhref-url" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;//返回：http://i.cnblogs.com/EditPosts.aspx?opt=1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="2windowlocationprotocol-url"&gt;2、window.location.protocol(设置或获取 &lt;span class="caps"&gt;URL&lt;/span&gt; 的协议部分)&lt;a class="headerlink" href="#2windowlocationprotocol-url" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;protocol&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;//返回：http:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="3windowlocationhost-url"&gt;3、window.location.host(设置或获取 &lt;span class="caps"&gt;URL&lt;/span&gt; 的主机部分)&lt;a class="headerlink" href="#3windowlocationhost-url" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;//返回：i.cnblogs.com&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="4windowlocationport-url"&gt;4、window.location.port(设置或获取与 &lt;span class="caps"&gt;URL&lt;/span&gt; 关联的端口号码)&lt;a class="headerlink" href="#4windowlocationport-url" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;//返回：空字符(如果采用默认的80端口(update:即使添加了:80)，那么返回值并不是默认的80而是空字符)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="5windowlocationpathname-url"&gt;5、window.location.pathname(设置或获取与 &lt;span class="caps"&gt;URL&lt;/span&gt; 的路径部分（就是文件地址）)&lt;a class="headerlink" href="#5windowlocationpathname-url" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pathname&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;//返回：/EditPosts.aspx&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="6windowlocationsearch-href"&gt;6、window.location.search(设置或获取 href 属性中跟在问号后面的部分)&lt;a class="headerlink" href="#6windowlocationsearch-href" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;//返回：?opt=1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;span class="caps"&gt;PS&lt;/span&gt;：获得查询（参数）部分，除了给动态语言赋值以外，我们同样可以给静态页面，并使用 javascript&amp;nbsp;来获得相信应的参数值。&lt;/p&gt;
&lt;h2 id="7windowlocationhash-href"&gt;7、window.location.hash(设置或获取 href 属性中在井号“#”后面的分段)&lt;a class="headerlink" href="#7windowlocationhash-href" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;//返回：空字符(因为url中没有)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="8jsurl"&gt;8、js获取url中的参数值&lt;a class="headerlink" href="#8jsurl" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;h3 id="_1"&gt;一、正则法&lt;a class="headerlink" href="#_1" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getQueryString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;reg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;RegExp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;(^|&amp;amp;)&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;=([^&amp;amp;]*)(&amp;amp;|$)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;unescape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;// 这样调用：&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;GetQueryString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;参数名1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;GetQueryString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;参数名2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;GetQueryString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;参数名3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="split"&gt;二、split拆分法&lt;a class="headerlink" href="#split" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;GetRequest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//获取url中&amp;quot;?&amp;quot;符后的字串&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;theRequest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nx"&gt;strs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;amp;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;strs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="nx"&gt;theRequest&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;strs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;=&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;unescape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;strs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;=&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;theRequest&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;Request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nx"&gt;Request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;GetRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;br&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="c1"&gt;// var id=Request[&amp;quot;id&amp;quot;]; &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;// var 参数1,参数2,参数3,参数N;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;// 参数1 = Request[&amp;#39;参数1&amp;#39;];&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;// 参数2 = Request[&amp;#39;参数2&amp;#39;];&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;// 参数3 = Request[&amp;#39;参数3&amp;#39;];&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;// 参数N = Request[&amp;#39;参数N&amp;#39;];&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="_2"&gt;三、指定取&lt;a class="headerlink" href="#_2" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;比如说一个 url：http://i.cnblogs.com/?j=js&amp;nbsp;,我们想得到参数j的值，可以通过以下函数调用。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;GetQueryString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;reg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;RegExp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;(^|&amp;amp;)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;=([^&amp;amp;]*)(&amp;amp;|$)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;i&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//获取url中&amp;quot;?&amp;quot;符后的字符串并正则匹配&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;     &lt;span class="nx"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nx"&gt;reg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;undefined&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;GetQueryString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;j&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="_3"&gt;四、单个参数的获取方法&lt;a class="headerlink" href="#_3" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;GetRequest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//获取url中&amp;quot;?&amp;quot;符后的字串&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="c1"&gt;//判断是否有参数&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//从第一个字符开始 因为第0个是?号 获取所有除问号的所有符串&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="nx"&gt;strs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;=&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;//用等号进行分隔 （因为知道只有一个参数 所以直接用等号进分隔 如果有多个参数 要用&amp;amp;号分隔 再用等号进行分隔）&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;strs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;     &lt;span class="c1"&gt;//直接弹出第一个参数 （如果有多个参数 还要进行循环的）&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以上就是本文的全部内容，希望对大家理解如何获取当前页面 url&amp;nbsp;网址信息有所帮助。&lt;/p&gt;
&lt;p&gt;-= &lt;span class="caps"&gt;END&lt;/span&gt;&amp;nbsp;=-&lt;/p&gt;</content><category term="Javascript"></category><category term="javascript"></category><category term="string"></category><category term="url"></category></entry><entry><title>LINUX 暂停、继续进程</title><link href="https://doobom.me/linux-stop-cont-ps" rel="alternate"></link><published>2019-05-09T16:01:00+08:00</published><updated>2019-05-09T16:01:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2019-05-09:/linux-stop-cont-ps</id><summary type="html">&lt;p&gt;&lt;span class="caps"&gt;LINUX&lt;/span&gt;&amp;nbsp;如何暂停、继续进程&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;原文： &lt;a href="https://www.cnblogs.com/mfryf/archive/2012/09/24/2700042.html"&gt;https://www.cnblogs.com/mfryf/archive/2012/09/24/2700042.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;kill -STOP 1234&lt;/code&gt; 将该进程暂停。&lt;/p&gt;
&lt;p&gt;如果要让它恢复到后台，用 &lt;code&gt;kill -CONT 1234&lt;/code&gt; （很多在前台运行的程序这样是不行的）&lt;/p&gt;
&lt;p&gt;如果要恢复到前台，请在当时运行该进程的那个终端用 &lt;code&gt;jobs&lt;/code&gt; 命令查询暂停的进程。&lt;/p&gt;
&lt;p&gt;然后用 &lt;code&gt;fg 〔job号〕&lt;/code&gt; 把进程恢复到前台。&lt;/p&gt;
&lt;p&gt;如果 &lt;code&gt;jobs&lt;/code&gt; 只查询到一个进程，只用 &lt;code&gt;fg&lt;/code&gt; 即可。&lt;/p&gt;
&lt;p&gt;例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;root@dWorks:~# bc -q&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;+  Stopped                 bc -q&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;root@dWorks:~# bc -q&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;+  Stopped                 bc -q&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;root@dWorks:~# &lt;span class="nb"&gt;jobs&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;-  Stopped                 bc -q&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;+  Stopped                 bc -q&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;root@dWorks:~# &lt;span class="nb"&gt;fg&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;bc -q&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;1&lt;/span&gt;+1&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A. Shell&amp;nbsp;支持作用控制，有以下命令：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;command&amp;amp;&lt;/code&gt; 让进程在后台运行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;jobs&lt;/code&gt; 查看后台运行的进程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;fg %n&lt;/code&gt; 让后台运行的进程n到前台来&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;bg %n&lt;/code&gt; 让进程 n&amp;nbsp;到后台去；  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class="caps"&gt;PS&lt;/span&gt;:&amp;#8221;n&amp;#8221;为 jobs&amp;nbsp;查看到的进程编号.&lt;/p&gt;
&lt;p&gt;B.下列转:http://blog.chinaunix.net/u/1604/showart_1079559.html&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fg&lt;/code&gt;、&lt;code&gt;bg&lt;/code&gt;、&lt;code&gt;jobs&lt;/code&gt;、&amp;amp;、&lt;code&gt;ctrl + z&lt;/code&gt; 都是跟系统任务有关的，虽然现在基本上不怎么需要用到这些命令，但学会了也是很实用的&lt;/p&gt;
&lt;p&gt;一。 &lt;code&gt;&amp;amp;&lt;/code&gt; 最经常被用到&lt;/p&gt;
&lt;p&gt;这个用在一个命令的最后，可以把这个命令放到后台执行&lt;/p&gt;
&lt;p&gt;二。&lt;code&gt;ctrl + z&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可以将一个正在前台执行的命令放到后台，并且暂停&lt;/p&gt;
&lt;p&gt;三。&lt;code&gt;jobs&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查看当前有多少在后台运行的命令&lt;/p&gt;
&lt;p&gt;四。&lt;code&gt;fg&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将后台中的命令调至前台继续运行&lt;/p&gt;
&lt;p&gt;如果后台中有多个命令，可以用 &lt;code&gt;fg %jobnumber&lt;/code&gt; 将选中的命令调出，&lt;code&gt;%jobnumber&lt;/code&gt; 是通过 &lt;code&gt;jobs&lt;/code&gt; 命令查到的后台正在执行的命令的序号(不是pid)&lt;/p&gt;
&lt;p&gt;五。&lt;code&gt;bg&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将一个在后台暂停的命令，变成继续执行&lt;/p&gt;
&lt;p&gt;如果后台中有多个命令，可以用 &lt;code&gt;bg %jobnumber&lt;/code&gt; 将选中的命令调出，&lt;code&gt;%jobnumber&lt;/code&gt; 是通过 &lt;code&gt;jobs&lt;/code&gt; 命令查到的后台正在执行的命令的序号(不是pid)&lt;/p&gt;
&lt;h2 id="linuxshelljobs"&gt;Linux下使用Shell命令控制任务Jobs执行&lt;a class="headerlink" href="#linuxshelljobs" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;下列命令可以用来操纵进程任务：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ps&lt;/code&gt; 列出系统中正在运行的进程；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kill&lt;/code&gt; 发送信号给一个或多个进程（经常用来杀死一个进程）；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;jobs&lt;/code&gt; 列出当前 shell 环境中已启动的任务状态，若未指定 jobsid，则显示所有活动的任务状态信息；如果报告了一个任务的终止(即任务的状态被标记为 Terminated)，shell 从当前的 shell&amp;nbsp;环境已知的列表中删除任务的进程标识；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bg&lt;/code&gt; 将进程搬到后台运行（Background）；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fg&lt;/code&gt; 将进程搬到前台运行（Foreground）；&lt;/p&gt;
&lt;p&gt;将 job&amp;nbsp;转移到后台运行&lt;/p&gt;
&lt;p&gt;如果你经常在X图形下工作，你可能有这样的经历：通过终端命令运行一个 &lt;span class="caps"&gt;GUI&lt;/span&gt; 程序，&lt;span class="caps"&gt;GUI&lt;/span&gt; 界面出来了，但是你的终端还停留在原地，你不能在 shell 中继续执行其他命令了，除非将 &lt;span class="caps"&gt;GUI&lt;/span&gt; 程序关掉。
　　为了使程序执行后终端还能继续接受命令，你可以将进程移到后台运行，使用如下命令运行程序：&amp;nbsp;#假设要运行xmms&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$xmms&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样打开 xmms 后，终端的提示又回来了。现在 xmms 在后台运行着呢；但万一你运行程序时忘记使用 “&amp;amp;” 了，又不想重新执行；你可以先使用 &lt;code&gt;ctrl+z&lt;/code&gt; 挂起程序，然后敲入 &lt;code&gt;bg&lt;/code&gt; 命令，这样程序就在后台继续运行了。&lt;/p&gt;
&lt;h3 id="_1"&gt;概念：当前任务&lt;a class="headerlink" href="#_1" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;如果后台的任务号有2个，[1],[2]；如果当第一个后台任务顺利执行完毕，第二个后台任务还在执行中时，当前任务便会自动变成后台任务号码“[2]”的后台任务。所以可以得出一点，即当前任务是会变动的。当用户输入 &lt;code&gt;fg&lt;/code&gt;、&lt;code&gt;bg&lt;/code&gt; 和 &lt;code&gt;stop&lt;/code&gt; 等命令时，如果不加任何引号，则所变动的均是当前任务。&lt;/p&gt;
&lt;h3 id="jobs"&gt;察看 jobs&lt;a class="headerlink" href="#jobs" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;使用 &lt;code&gt;jobs&lt;/code&gt; 或 &lt;code&gt;ps&lt;/code&gt; 命令可以察看正在执行的&amp;nbsp;jobs。&lt;/p&gt;
&lt;p&gt;jobs 命令执行的结果，&lt;code&gt;＋&lt;/code&gt; 表示是一个当前的作业，&lt;code&gt;-&lt;/code&gt; 表是是一个当前作业之后的一个作业，&lt;code&gt;jobs -l&lt;/code&gt; 选项可显示所有任务的 &lt;span class="caps"&gt;PID&lt;/span&gt;, jobs 的状态可以是 running, stopped, Terminated,但是如果任务被终止了（kill），shell 从当前的 shell 环境已知的列表中删除任务的进程标识；也就是说，jobs&amp;nbsp;命令显示的是当前shell环境中所起的后台正在运行或者被挂起的任务信息；&lt;/p&gt;
&lt;h3 id="_2"&gt;进程的挂起&lt;a class="headerlink" href="#_2" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;h4 id="_3"&gt;后台进程的挂起：&lt;a class="headerlink" href="#_3" title="Permanent link"&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;在 solaris 中通过 &lt;code&gt;stop&lt;/code&gt; 命令执行，通过 &lt;code&gt;jobs&lt;/code&gt; 命令查看 job 号(假设为 num)，然后执行&lt;code&gt;stop %num&lt;/code&gt;；&lt;/p&gt;
&lt;p&gt;在 redhat 中，不存在 &lt;code&gt;stop&lt;/code&gt; 命令，可通过执行命令 &lt;code&gt;kill -stop PID&lt;/code&gt;，将进程挂起；&lt;/p&gt;
&lt;p&gt;当要重新执行当前被挂起的任务时，通过 &lt;code&gt;bg %num&lt;/code&gt; 即可将挂起的 job 的状态由 stopped 改为running，仍在后台执行；当需要改为在前台执行时，执行命令 &lt;code&gt;fg %num&lt;/code&gt; 即可；&lt;/p&gt;
&lt;h4 id="_4"&gt;前台进程的挂起：&lt;a class="headerlink" href="#_4" title="Permanent link"&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;ctrl+Z&lt;/code&gt; 进程的终止&lt;/p&gt;
&lt;h4 id="_5"&gt;后台进程的终止：&lt;a class="headerlink" href="#_5" title="Permanent link"&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;方法一：
　　通过 &lt;code&gt;jobs&lt;/code&gt; 命令查看 job 号（假设为 num ），然后执行 &lt;code&gt;kill %num&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;方法二：
　　通过 &lt;code&gt;ps&lt;/code&gt; 命令查看 job 的进程号（&lt;span class="caps"&gt;PID&lt;/span&gt;，假设为pid），然后执行 &lt;code&gt;kill pid&lt;/code&gt;&lt;/p&gt;
&lt;h4 id="_6"&gt;前台进程的终止：&lt;a class="headerlink" href="#_6" title="Permanent link"&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;ctrl+c&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;kill的其他作用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kill&lt;/code&gt; 除了可以终止进程，还能给进程发送其它信号，使用 &lt;code&gt;kill -l&lt;/code&gt; 可以察看 &lt;code&gt;kill&lt;/code&gt; 支持的信号。&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;SIGTERM&lt;/span&gt; 是不带参数时 &lt;code&gt;kill&lt;/code&gt; 发送的信号，意思是要进程终止运行，但执行与否还得看进程是否支持。如果进程还没有终止，可以使用 &lt;code&gt;kill -SIGKILL pid&lt;/code&gt; ，这是由内核来终止进程，进程不能监听这个信号。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Unix/Linux 下一般想让某个程序在后台运行，很多都是使用 &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt;&amp;nbsp;在程序结尾来让程序自动运行。比如我们要运行mysql在后台：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/usr/local/mysql/bin/mysqld_safe --user&lt;span class="o"&gt;=&lt;/span&gt;mysql &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;但是我们很多程序并不象 mysqld 一样可以做成守护进程，可能我们的程序只是普通程序而已，一般这种程序即使使用 &lt;code&gt;&amp;amp;&lt;/code&gt; 结尾，如果终端关闭，那么程序也会被关闭。为了能够后台运行，我们需要使用&lt;code&gt;nohup&lt;/code&gt; 这个命令，比如我们有个 &lt;code&gt;start.sh&lt;/code&gt; 需要在后台运行，并且希望在后台能够一直运行，那么就使用 &lt;code&gt;nohup&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;nohup /root/start.sh &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在 shell&amp;nbsp;中回车后提示：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;$ appending output to nohup.out&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;原程序的的标准输出被自动改向到当前目录下的 &lt;code&gt;nohup.out&lt;/code&gt; 文件，起到了 log&amp;nbsp;的作用。&lt;/p&gt;
&lt;p&gt;但是有时候在这一步会有问题，当把终端关闭后，进程会自动被关闭，察看 &lt;code&gt;nohup.out&lt;/code&gt; 可以看到在关闭终端瞬间服务自动关闭。&lt;/p&gt;
&lt;p&gt;咨询红旗 Linux&amp;nbsp;工程师后，他也不得其解，在我的终端上执行后，他启动的进程竟然在关闭终端后依然运行。&lt;/p&gt;
&lt;p&gt;在第二遍给我演示时，我才发现我和他操作终端时的一个细节不同：他是在当 shell 中提示了 &lt;code&gt;nohup&lt;/code&gt; 成功后还需要按终端上键盘任意键退回到 shell 输入命令窗口，然后通过在 shell 中输入 &lt;code&gt;exit&lt;/code&gt; 来退出终端；而我是每次在 &lt;code&gt;nohup&lt;/code&gt; 执行成功后直接点关闭程序按钮关闭终端.。所以这时候会断掉该命令所对应的 session，导致 &lt;code&gt;nohup&lt;/code&gt; 对应的进程被通知需要一起&amp;nbsp;shutdown。&lt;/p&gt;
&lt;p&gt;这个细节有人和我一样没注意到，所以在这儿记录一下了。&lt;/p&gt;
&lt;h2 id="nohup"&gt;附：nohup命令参考&lt;a class="headerlink" href="#nohup" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;nohup&amp;nbsp;命令&lt;/p&gt;
&lt;p&gt;用途：不挂断地运行命令。&lt;/p&gt;
&lt;p&gt;语法：&lt;code&gt;nohup Command [ Arg ... ] [　&amp;amp; ]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;描述：nohup 命令运行由 Command 参数和任何相关的 Arg 参数指定的命令，忽略所有挂断（&lt;span class="caps"&gt;SIGHUP&lt;/span&gt;）信号。在注销后使用 nohup 命令运行后台中的程序。要运行后台中的 nohup 命令，添加 &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt;&amp;nbsp;（表示&amp;#8221;and&amp;#8221;的符号）到命令的尾部。&lt;/p&gt;
&lt;p&gt;无论是否将 nohup 命令的输出重定向到终端，输出都将附加到当前目录的 &lt;code&gt;nohup.out&lt;/code&gt; 文件中。如果当前目录的 &lt;code&gt;nohup.out&lt;/code&gt; 文件不可写，输出重定向到 &lt;code&gt;$HOME/nohup.out&lt;/code&gt; 文件中。如果没有文件能创建或打开以用于追加，那么 Command&amp;nbsp;参数指定的命令不可调用。如果标准错误是一个终端，那么把指定的命令写给标准错误的所有输出作为标准输出重定向到相同的文件描述符。&lt;/p&gt;
&lt;p&gt;退出状态：该命令返回下列出口值：&lt;/p&gt;
&lt;p&gt;126 可以查找但不能调用 Command&amp;nbsp;参数指定的命令。&lt;/p&gt;
&lt;p&gt;127 nohup 命令发生错误或不能查找由 Command&amp;nbsp;参数指定的命令。&lt;/p&gt;
&lt;p&gt;否则，nohup 命令的退出状态是 Command&amp;nbsp;参数指定命令的退出状态。&lt;/p&gt;
&lt;p&gt;nohup命令及其输出文件&lt;/p&gt;
&lt;p&gt;nohup命令：如果你正在运行一个进程，而且你觉得在退出帐户时该进程还不会结束，那么可以使用nohup命令。该命令可以在你退出帐户/关闭终端之后继续运行相应的进程。nohup就是不挂起的意思( n ohang&amp;nbsp;up)。&lt;/p&gt;
&lt;p&gt;该命令的一般形式为：&lt;code&gt;nohup command &amp;amp;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用nohup命令提交作业&lt;/p&gt;
&lt;p&gt;如果使用nohup命令提交作业，那么在缺省情况下该作业的所有输出都被重定向到一个名为 &lt;code&gt;nohup.out&lt;/code&gt; 的文件中，除非另外指定了输出文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;nohup &lt;span class="nb"&gt;command&lt;/span&gt; &amp;gt; myout.file &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在上面的例子中，输出被重定向到 &lt;code&gt;myout.file&lt;/code&gt; 文件中。&lt;/p&gt;
&lt;p&gt;使用 jobs&amp;nbsp;查看任务。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;fg %n&lt;/code&gt;　关闭。&lt;/p&gt;
&lt;p&gt;另外有两个常用的 ftp 工具 &lt;code&gt;ncftpget&lt;/code&gt; 和 &lt;code&gt;ncftpput&lt;/code&gt;，可以实现后台的 ftp&amp;nbsp;上传和下载，这样就可以利用这些命令在后台上传和下载文件了。&lt;/p&gt;
&lt;p&gt;简单而有用的 &lt;code&gt;nohup&lt;/code&gt; 命令在 &lt;span class="caps"&gt;UNIX&lt;/span&gt;/&lt;span class="caps"&gt;LINUX&lt;/span&gt; 中，普通进程用&amp;amp;符号放到后台运行，如果启动该程序的控制台&amp;nbsp;logout，则该进程随即终止。&lt;/p&gt;
&lt;p&gt;要实现守护进程，一种方法是按守护进程的规则去编程（本站有文章介绍过），比较麻烦；另一种方法是仍然用普通方法编程，然后用nohup命令启动程序：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;nohup＜程序名＞&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;则控制台logout后，进程仍然继续运行，起到守护进程的作用（虽然它不是严格意义上的守护进程）。&lt;/p&gt;
&lt;p&gt;使用nohup命令后，原程序的的标准输出被自动改向到当前目录下的 &lt;code&gt;nohup.out&lt;/code&gt; 文件，起到了 log&amp;nbsp;的作用，实现了完整的守护进程功能。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;ygwu @ 2005年04月18日&amp;nbsp;上午10:03&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For&amp;nbsp;example：&lt;/p&gt;
&lt;p&gt;如何远程启动 WebLogic&amp;nbsp;服务?&lt;/p&gt;
&lt;p&gt;用 telnet 远程控制服务器，远程启动 &lt;span class="caps"&gt;WEBLOGIC&lt;/span&gt; 服务，启动后关闭 telnet，WebLogic 服务也跟着停止，这是因为使用 telnet 启动的进程会随着 telnet 进程的关闭而关闭。所以我们可以使用一些 &lt;span class="caps"&gt;UNIX&lt;/span&gt;&amp;nbsp;下的命令来做到不关闭。&lt;/p&gt;
&lt;p&gt;使用如下命令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nohup startWeblogic.sh&amp;amp;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果想要监控标准输出可以使用：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tail -f nohup.out&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当在后台运行了程序的时候，可以用 &lt;code&gt;jobs&lt;/code&gt; 命令来查看后台作业的状态。在有多个后台程序时，要使用来参数的 &lt;code&gt;fg&lt;/code&gt; 命令将不同序号的后台作业切换到前台上运行。&lt;/p&gt;
&lt;p&gt;当用户启动一个进程的时候，这个进程是运行在前台，使用与相应控制终端相联系的标准输入、输出进行输入和输出。即使将进程的输入输出重定向，并将进程放在后台执行，进程仍然和当前终端设备有关系。正因为如此，在当前的登录会话结束时，控制终端设备将和登录进程相脱离，那么系统就向所有与这个终端相联系的进程发送 &lt;span class="caps"&gt;SIGHUP&lt;/span&gt; 的信号，通知进程线路已经挂起了，如果程序没有接管这个信号的处理，那么缺省的反应是进程结束。因此普通的程序并不能真正脱离登录会话而运行进程，为了使得在系统登录后还可以正常执行，只有使用命令 &lt;code&gt;nohup&lt;/code&gt; 来启动相应程序。&lt;/p&gt;
&lt;p&gt;使用命令 &lt;code&gt;nohup&lt;/code&gt; 当然可以启动这样的程序，但 &lt;code&gt;nohup&lt;/code&gt; 启动的程序在进程执行完毕就退出，而常见的一些服务进程通常永久的运行在后台，不向屏幕输出结果。在 Unix&amp;nbsp;中这些永久的后台进程称为守护进程（daemon）。守护进程通常从系统启动时自动开始执行，系统关闭时才停止。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;-=- &lt;span class="caps"&gt;END&lt;/span&gt;&amp;nbsp;-=-&lt;/p&gt;</content><category term="Linux"></category><category term="Linux"></category><category term="Shell"></category></entry><entry><title>Telnet 中使用 smtp 发送邮件</title><link href="https://doobom.me/send-mail-via-smtp-in-telnet" rel="alternate"></link><published>2019-04-15T16:01:00+08:00</published><updated>2019-04-15T16:01:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2019-04-15:/send-mail-via-smtp-in-telnet</id><summary type="html">&lt;p&gt;Telnet 中使用 smtp&amp;nbsp;发送邮件&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;原文作者：litreily&lt;/p&gt;
&lt;p&gt;原文链接：&lt;a href="https://www.litreily.top/2017/08/17/telnet-smtp/"&gt;https://www.litreily.top/2017/08/17/telnet-smtp/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这两天在折腾 javascript 发送邮件的事情,&amp;nbsp;然后就看到了这个.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Telnet是远程登录服务的标准协议和主要方式，工作于TCP/IP协议族的应用层，常用于远程登录web服务器，其中便包括SMTP，POP3等邮件服务器。&lt;/p&gt;
&lt;p&gt;这几天参考书籍《计算机网络-自顶向下方法》学习计算机网络知识，顺便尝试了如何使用Telnet登录smtp发送邮件，下面通过一个简单示例介绍具体的发送过程。&lt;/p&gt;
&lt;h2 id="telnet-smtp163com-25"&gt;Telnet smtp.163.com 25&lt;a class="headerlink" href="#telnet-smtp163com-25" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;smtp对应的端口号为25，以163邮箱为例，下面是邮件发送过程。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;→ ~ telnet smtp.163.com &lt;span class="m"&gt;25&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Trying &lt;span class="m"&gt;220&lt;/span&gt;.181.12.15...&lt;/span&gt;
&lt;span class="code-line"&gt;Connected to smtp.163.com.&lt;/span&gt;
&lt;span class="code-line"&gt;Escape character is ^&lt;span class="o"&gt;]&lt;/span&gt;.&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;220&lt;/span&gt; &lt;span class="m"&gt;163&lt;/span&gt;.com Anti-spam GT &lt;span class="k"&gt;for&lt;/span&gt; Coremail System &lt;span class="o"&gt;(&lt;/span&gt;163com&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;20141201&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;helo &lt;span class="m"&gt;163&lt;/span&gt;.com&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;250&lt;/span&gt; OK&lt;/span&gt;
&lt;span class="code-line"&gt;auth login&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;334&lt;/span&gt; dXNlcm5hbWU6&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;MTgyNjY2MzI4NzJAMTYzLmNvbQ&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;334&lt;/span&gt; UGFzc3dvcmQ6&lt;/span&gt;
&lt;span class="code-line"&gt;****************&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;235&lt;/span&gt; Authentication successful&lt;/span&gt;
&lt;span class="code-line"&gt;mail from:&amp;lt;&lt;span class="m"&gt;182&lt;/span&gt;****2872@163.com&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;250&lt;/span&gt; Mail OK&lt;/span&gt;
&lt;span class="code-line"&gt;rcpt to:&amp;lt;&lt;span class="m"&gt;707&lt;/span&gt;***098@qq.com&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;250&lt;/span&gt; Mail OK&lt;/span&gt;
&lt;span class="code-line"&gt;data&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;354&lt;/span&gt; End data with &amp;lt;CR&amp;gt;&amp;lt;LF&amp;gt;.&amp;lt;CR&amp;gt;&amp;lt;LF&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;From: &lt;span class="m"&gt;182&lt;/span&gt;****2872@163.com&lt;/span&gt;
&lt;span class="code-line"&gt;To: &lt;span class="m"&gt;707&lt;/span&gt;***098@qq.com&lt;/span&gt;
&lt;span class="code-line"&gt;Subject: Test the use of smtp&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  Hello, litreily.                          &lt;/span&gt;
&lt;span class="code-line"&gt;  This is a message edit with telnet.&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Best wish to you.&lt;/span&gt;
&lt;span class="code-line"&gt;Litreily&lt;/span&gt;
&lt;span class="code-line"&gt;.&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;250&lt;/span&gt; Mail OK queued as smtp11,D8CowAAnjlqKlZVZXa4QAQ--.18342S2 &lt;span class="m"&gt;1502975693&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;quit&lt;/span&gt;
&lt;span class="code-line"&gt;Connection closed by foreign host.&lt;/span&gt;
&lt;span class="code-line"&gt;→ ~&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;下面分开对每个过程进行解析，C代表客户端，即本机，S代表远程服务器端。整个过程分为以下几步：
* 打招呼
* 账户认证
* 声明邮箱地址
* 书写邮件内容
*&amp;nbsp;退出Telnet&lt;/p&gt;
&lt;h3 id="_1"&gt;招呼语&lt;a class="headerlink" href="#_1" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;S &lt;span class="m"&gt;220&lt;/span&gt; &lt;span class="m"&gt;163&lt;/span&gt;.com Anti-spam GT &lt;span class="k"&gt;for&lt;/span&gt; Coremail System &lt;span class="o"&gt;(&lt;/span&gt;163com&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;20141201&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;C helo &lt;span class="m"&gt;163&lt;/span&gt;.com&lt;/span&gt;
&lt;span class="code-line"&gt;S &lt;span class="m"&gt;250&lt;/span&gt; OK&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;220&lt;/code&gt;代表服务器已准备好，客户端首先向服务器打一声招呼&lt;code&gt;helo&lt;/code&gt;，服务器接收到后返回一个&lt;code&gt;250&lt;/code&gt;应答信号，代表打招呼成功，下面可以进行账户的密码认证。&lt;/p&gt;
&lt;h3 id="_2"&gt;账户认证&lt;a class="headerlink" href="#_2" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;C auth login&lt;/span&gt;
&lt;span class="code-line"&gt;S &lt;span class="m"&gt;334&lt;/span&gt; dXNlcm5hbWU6&lt;/span&gt;
&lt;span class="code-line"&gt;C &lt;span class="nv"&gt;MTgyNjY2MzI4NzJAMTYzLmNvbQ&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;S &lt;span class="m"&gt;334&lt;/span&gt; UGFzc3dvcmQ6&lt;/span&gt;
&lt;span class="code-line"&gt;C ****************&lt;/span&gt;
&lt;span class="code-line"&gt;S &lt;span class="m"&gt;235&lt;/span&gt; Authentication successful&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;客户端发送&lt;code&gt;auth login&lt;/code&gt;声明自己将进行邮箱账户的用户名认证和密码认证。服务器端返回一个以&lt;code&gt;334&lt;/code&gt;代码开头的提示信息，不必追究其语义，而后用户依次输入通过Base64加密的邮箱名和密码，加密网址见后续参考资料。当输入的账号密码无误时，服务端将返回认证成功的提示语。&lt;/p&gt;
&lt;h3 id="_3"&gt;声明邮箱地址&lt;a class="headerlink" href="#_3" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;C mail from:&amp;lt;&lt;span class="m"&gt;182&lt;/span&gt;****2872@163.com&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;S &lt;span class="m"&gt;250&lt;/span&gt; Mail OK&lt;/span&gt;
&lt;span class="code-line"&gt;C rcpt to:&amp;lt;&lt;span class="m"&gt;707&lt;/span&gt;***098@qq.com&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;S &lt;span class="m"&gt;250&lt;/span&gt; Mail OK&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;账户密码认证结束后，客户端通过&lt;code&gt;mail from:&amp;lt;emailName&amp;gt;&lt;/code&gt;以及&lt;code&gt;rcpt to:&amp;lt;nameEmail&amp;gt;&lt;/code&gt;声明邮箱的源地址和目的地址。&lt;/p&gt;
&lt;h3 id="_4"&gt;书写邮件内容&lt;a class="headerlink" href="#_4" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;C data&lt;/span&gt;
&lt;span class="code-line"&gt;S &lt;span class="m"&gt;354&lt;/span&gt; End data with &amp;lt;CR&amp;gt;&amp;lt;LF&amp;gt;.&amp;lt;CR&amp;gt;&amp;lt;LF&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;C From: &lt;span class="m"&gt;182&lt;/span&gt;****2872@163.com&lt;/span&gt;
&lt;span class="code-line"&gt;C To: &lt;span class="m"&gt;707&lt;/span&gt;***098@qq.com&lt;/span&gt;
&lt;span class="code-line"&gt;C Subject: Test the use of smtp&lt;/span&gt;
&lt;span class="code-line"&gt;C &lt;/span&gt;
&lt;span class="code-line"&gt;C   Hello, litreily.                          &lt;/span&gt;
&lt;span class="code-line"&gt;C   This is a message edit with telnet.&lt;/span&gt;
&lt;span class="code-line"&gt;C &lt;/span&gt;
&lt;span class="code-line"&gt;C Best wish to you.&lt;/span&gt;
&lt;span class="code-line"&gt;C Litreily&lt;/span&gt;
&lt;span class="code-line"&gt;C .&lt;/span&gt;
&lt;span class="code-line"&gt;S &lt;span class="m"&gt;250&lt;/span&gt; Mail OK queued as smtp11,D8CowAAnjlqKlZVZXa4QAQ--.18342S2 &lt;span class="m"&gt;1502975693&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;写明邮件地址后，使用指令&lt;code&gt;data&lt;/code&gt;进入邮件编辑状态，服务器端会提示当输入&lt;code&gt;&amp;lt;CR&amp;gt;&amp;lt;LF&amp;gt;.&amp;lt;CR&amp;gt;&amp;lt;LF&amp;gt;&lt;/code&gt;时退出编辑状态。&lt;/p&gt;
&lt;p&gt;邮件内容有一定的格式要求，不按要求随意书写有可能被当成垃圾邮件或不合法邮件而退信。通常需要指定邮件主题 &lt;strong&gt;Subject&lt;/strong&gt;，其它相关信息包括时间 &lt;strong&gt;Date&lt;/strong&gt;，邮件地址 &lt;strong&gt;From&lt;/strong&gt;，&lt;strong&gt;To&lt;/strong&gt; 等，然后再书写邮件主体内容，更详细的格式可以参考文档【&lt;span class="caps"&gt;RFC&lt;/span&gt; 821】。编辑结束后，以单行的点号&lt;code&gt;.&lt;/code&gt;结束。如果一切正常，服务器端将返回以&lt;code&gt;250&lt;/code&gt;开头的应答信息，并提示邮件以进入smtp的发送队列。此时便可以查收邮件予以验证了。&lt;/p&gt;
&lt;h3 id="telnet"&gt;退出Telnet&lt;a class="headerlink" href="#telnet" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;C quit&lt;/span&gt;
&lt;span class="code-line"&gt;S Connection closed by foreign host.&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;当邮件发送结束后，客户端通过&lt;code&gt;quit&lt;/code&gt;退出Telnet。&lt;/p&gt;
&lt;h2 id="smtp-code"&gt;&lt;span class="caps"&gt;SMTP&lt;/span&gt; Code&lt;a class="headerlink" href="#smtp-code" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;211&amp;nbsp;系统状态或系统帮助响应&lt;/li&gt;
&lt;li&gt;214&amp;nbsp;帮助信息&lt;/li&gt;
&lt;li&gt;220&amp;nbsp;服务就绪&lt;/li&gt;
&lt;li&gt;221&amp;nbsp;服务关闭传输信道&lt;/li&gt;
&lt;li&gt;235&amp;nbsp;用户验证成功&lt;/li&gt;
&lt;li&gt;250&amp;nbsp;要求的邮件操作完成&lt;/li&gt;
&lt;li&gt;251&amp;nbsp;用户非本地，将转发向&lt;/li&gt;
&lt;li&gt;334&amp;nbsp;等待用户输入验证信息&lt;/li&gt;
&lt;li&gt;354&amp;nbsp;开始邮件输入，以单行.结束&lt;/li&gt;
&lt;li&gt;421&amp;nbsp;服务未就绪，关闭传输信道（当必须关闭时，此应答可以作为对任何命令的响应）&lt;/li&gt;
&lt;li&gt;450&amp;nbsp;要求的邮件操作未完成，邮箱不可用（例如，邮箱忙）&lt;/li&gt;
&lt;li&gt;451&amp;nbsp;放弃要求的操作；处理过程中出错&lt;/li&gt;
&lt;li&gt;452&amp;nbsp;系统存储不足，要求的操作未执行&lt;/li&gt;
&lt;li&gt;500&amp;nbsp;格式错误，命令不可识别（此错误也包括命令行过长）&lt;/li&gt;
&lt;li&gt;501&amp;nbsp;参数格式错误&lt;/li&gt;
&lt;li&gt;502&amp;nbsp;命令不可实现&lt;/li&gt;
&lt;li&gt;503&amp;nbsp;错误的命令序列&lt;/li&gt;
&lt;li&gt;504&amp;nbsp;命令参数不可实现&lt;/li&gt;
&lt;li&gt;535&amp;nbsp;用户验证失败&lt;/li&gt;
&lt;li&gt;550&amp;nbsp;要求的邮件操作未完成，邮箱不可用（例如，邮箱未找到，或不可访问）&lt;/li&gt;
&lt;li&gt;551&amp;nbsp;用户非本地，请尝试&lt;/li&gt;
&lt;li&gt;552&amp;nbsp;过量的存储分配，要求的操作未执行&lt;/li&gt;
&lt;li&gt;553&amp;nbsp;邮箱名不可用，要求的操作未执行（例如邮箱格式错误）&lt;/li&gt;
&lt;li&gt;554&amp;nbsp;操作失败&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_5"&gt;参考资料&lt;a class="headerlink" href="#_5" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;SMTP文档(&lt;span class="caps"&gt;RFC&lt;/span&gt; 821) : &lt;a href="https://tools.ietf.org/pdf/rfc821.pdf"&gt;https://tools.ietf.org/pdf/rfc821.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;SMTP&lt;/span&gt; Code : &lt;a href="http://bbs.csdn.net/topics/80275246"&gt;http://bbs.csdn.net/topics/80275246&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;163.com 邮件退信代码 : &lt;a href="http://help.163.com/09/1224/17/5RAJ4LMH00753VB8.html"&gt;http://help.163.com/09/1224/17/&lt;span class="caps"&gt;5RAJ4LMH00753VB8&lt;/span&gt;.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="Shell"></category><category term="smtp"></category><category term="shell"></category><category term="mail"></category><category term="telnet"></category></entry><entry><title>JS 数字指定长度不足前补零的实现</title><link href="https://doobom.me/string-number-to-define-length" rel="alternate"></link><published>2019-04-15T16:01:00+08:00</published><updated>2019-04-15T16:01:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2019-04-15:/string-number-to-define-length</id><summary type="html">&lt;p&gt;&lt;span class="caps"&gt;JS&lt;/span&gt;&amp;nbsp;数字指定长度不足前补零的实现&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;原文： &lt;a href="https://wsj123.iteye.com/blog/2412696"&gt;https://wsj123.iteye.com/blog/2412696&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_1"&gt;问题描述：&lt;a class="headerlink" href="#_1" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;要求输出的数字长度是固定的，如长度为2，数字为1，则输出01，即不够位数就在之前补足0。 &lt;/p&gt;
&lt;h3 id="_2"&gt;解决方法：&lt;a class="headerlink" href="#_2" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;h4 id="1"&gt;方法1&lt;a class="headerlink" href="#1" title="Permanent link"&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;fn1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toFixed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;  &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="2"&gt;方法2&lt;a class="headerlink" href="#2" title="Permanent link"&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;fn2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0000000000000000&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;  &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;  &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="3"&gt;方法3&lt;a class="headerlink" href="#3" title="Permanent link"&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;fn3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;  &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="_3"&gt;上述三种方法的效率如下：&lt;a class="headerlink" href="#_3" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;time1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nx"&gt;fn1&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;timeEnd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;time1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;//chrome返回值：time1: 0.126953125ms  &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;time2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nx"&gt;fn2&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;timeEnd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;time2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//chrome返回值：time2: 0.0810546875ms  &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nx"&gt;fn3&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;timeEnd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;time3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//chrome返回值：time3: 0ms  &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;-=- &lt;span class="caps"&gt;END&lt;/span&gt;&amp;nbsp;-=-&lt;/p&gt;</content><category term="Javascript"></category><category term="javascript"></category><category term="string"></category></entry><entry><title>JavaScript 字符串/数字左补位，右补位，取固定长度，截位扩展函数代码</title><link href="https://doobom.me/string-number-to-define-length-foo" rel="alternate"></link><published>2019-04-15T16:01:00+08:00</published><updated>2019-04-15T16:01:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2019-04-15:/string-number-to-define-length-foo</id><summary type="html">&lt;p&gt;JavaScript&amp;nbsp;字符串/数字左补位，右补位，取固定长度，截位扩展函数代码&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;原文： &lt;a href="https://www.jb51.net/article/109523.htm"&gt;https://www.jb51.net/article/109523.htm&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有时候我们的日期等不足两位的补一个0等，都可以使用这个。&lt;/p&gt;
&lt;p&gt;这个大家应该都很明白了，就不废话了，代码如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;padLeft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;padLeft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;total&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pad&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;total&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pad&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;total&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;测试代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;//补位&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;padLeft&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//返回：YYYYX&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;padLeft&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//返回：00050&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;padLeft&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="c1"&gt;//返回：01&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;//截位&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;padLeft&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//返回：23&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;更多代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cm"&gt; * 取子字符串&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cm"&gt; * @param oriStr  原字符串&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cm"&gt; * @param beginIndex 取子串的起始位置&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cm"&gt; * @param len  取子串的长度&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cm"&gt; * @return 子字符串&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cm"&gt; */&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="nx"&gt;subString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="nx"&gt;oriStr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;beginIndex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;strlen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;oriStr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="nx"&gt;beginIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;beginIndex&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;strlen&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;beginIndex&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nx"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;out of &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;oriStr&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;#39;s length, please recheck!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;strlen&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;beginIndex&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;oriStr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;beginIndex&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;oriStr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;beginIndex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;beginIndex&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="cm"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cm"&gt; * 右补位，左对齐&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cm"&gt; * @param oriStr 原字符串&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cm"&gt; * @param len 目标字符串长度&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cm"&gt; * @param alexin 补位字符&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cm"&gt; * @return 目标字符串&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cm"&gt; */&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="nx"&gt;padRight&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="nx"&gt;oriStr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kr"&gt;char&lt;/span&gt; &lt;span class="nx"&gt;alexin&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;strlen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;oriStr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;strlen&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;alexin&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;oriStr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="cm"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cm"&gt; * 左补位，右对齐&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cm"&gt; * @param oriStr 原字符串&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cm"&gt; * @param len 目标字符串长度&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cm"&gt; * @param alexin 补位字符&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cm"&gt; * @return 目标字符串&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cm"&gt; */&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="nx"&gt;padLeft&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="nx"&gt;oriStr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kr"&gt;char&lt;/span&gt; &lt;span class="nx"&gt;alexin&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;strlen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;oriStr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;strlen&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kr"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;alexin&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;oriStr&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;-=- &lt;span class="caps"&gt;END&lt;/span&gt;&amp;nbsp;-=-&lt;/p&gt;</content><category term="Javascript"></category><category term="javascript"></category><category term="string"></category></entry><entry><title>.gitignore 设置 git 忽略跟踪文件和文件夹</title><link href="https://doobom.me/git-set-gitignore" rel="alternate"></link><published>2019-02-13T19:01:00+08:00</published><updated>2019-02-13T19:01:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2019-02-13:/git-set-gitignore</id><summary type="html">&lt;p&gt;.gitignore 设置 git&amp;nbsp;忽略跟踪文件和文件夹&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;在项目的根目录（跟 &lt;code&gt;.git&lt;/code&gt; 文件夹所在目录同层）建立 &lt;code&gt;.gitignore&lt;/code&gt; 文件，在里面声明即可。 &lt;/strong&gt;&lt;/p&gt;
&lt;h3 id="_1"&gt;配置语法&lt;a class="headerlink" href="#_1" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;以斜杠“/”开头表示目录；&lt;/li&gt;
&lt;li&gt;以星号“*”通配多个字符；&lt;/li&gt;
&lt;li&gt;以问号“?”通配单个字符&lt;/li&gt;
&lt;li&gt;以方括号“[]”包含单个字符的匹配列表；&lt;/li&gt;
&lt;li&gt;以叹号“!”表示不忽略(跟踪)匹配到的文件或目录。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;git 对于 &lt;code&gt;.gitignore&lt;/code&gt; 配置文件是按行从上到下进行规则匹配的&lt;/p&gt;
&lt;p&gt;如果之前文件已提交过，则需要先清除原文件: &lt;code&gt;git rm *.dll&lt;/code&gt; 这样.    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_2"&gt;另一种方法&lt;a class="headerlink" href="#_2" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;修改git的全局设置，把忽略名单用于所有项目： 
首先，建立一个&lt;code&gt;.gitignore_global&lt;/code&gt;文件； &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;git config --global core.excludesfile .gitignore_global &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="_3"&gt;栗子&lt;a class="headerlink" href="#_3" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Github 给出的 Android 开发中使用的&lt;code&gt;.gitignore&lt;/code&gt;模板&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;# Built application files&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;*.apk&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;*.ap_&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;# Files for the Dalvik VM&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;*.dex&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;# Java class files&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;*.class&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;# Generated files&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;bin/&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;gen/&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;out/&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;# Gradle files&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;.gradle/&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;build/&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;# Local configuration file (sdk path, etc)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;local.properties&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;# Proguard folder generated by Eclipse&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;proguard/&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;# Log Files&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;*.log&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;# Android Studio Navigation editor temp files&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;.navigation/&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;# Android Studio captures folder&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;captures/&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;# Intellij&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;*.iml&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;# Keystore files&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;*.jks&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="_4"&gt;参考&lt;a class="headerlink" href="#_4" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/github/gitignore/blob/master/Android.gitignore"&gt;https://github.com/github/gitignore/blob/master/Android.gitignore&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://git-scm.com/docs/gitignore"&gt;https://git-scm.com/docs/gitignore&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.jianshu.com/p/ea6341224e89"&gt;https://www.jianshu.com/p/ea6341224e89&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/u011475134/article/details/71521725"&gt;https://blog.csdn.net/u011475134/article/details/71521725&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;-= 完&amp;nbsp;=-&lt;/p&gt;</content><category term="git"></category><category term="git"></category><category term="github"></category><category term="gitignore"></category></entry><entry><title>Vim 多文件编辑：缓冲区</title><link href="https://doobom.me/use-buffer-edit-multi-files-in-vim" rel="alternate"></link><published>2019-02-08T23:01:00+08:00</published><updated>2019-02-08T23:01:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2019-02-08:/use-buffer-edit-multi-files-in-vim</id><summary type="html">&lt;p&gt;Vim&amp;nbsp;多文件编辑：缓冲区.&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;原文链接: &lt;a href="https://harttle.land/2015/11/17/vim-buffer.html"&gt;https://harttle.land/2015/11/17/vim-buffer.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本文介绍Vim下 &lt;strong&gt;缓冲区(Buffer)&lt;/strong&gt;&amp;nbsp;的使用.&lt;/p&gt;
&lt;p&gt;引用Vim官方解释，&lt;strong&gt;缓冲区&lt;/strong&gt;&amp;nbsp;是一个文件的内容占用的那部分Vim内存：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A buffer is an area of Vim’s memory used to hold text read from a file. In addition, an empty buffer with no associated file can be created to allow the entry of text.&amp;nbsp;–vim.wikia&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;先来回顾一下Tab，Window，Buffer的关系吧！&lt;/p&gt;
&lt;p&gt;&lt;img alt="tabs-windows-buffers" src="/images/tabs-windows-buffers.png" /&gt;&lt;/p&gt;
&lt;p&gt;基于缓冲区的多文件编辑是Vim最为推荐的做法，Vim维护着你在当前打开的这些Buffer里的所有跳转， &lt;code&gt;Ctrl+o&lt;/code&gt;和&lt;code&gt;Ctrl+i&lt;/code&gt;可以遍历这些光标位置（参考：&lt;a href="https://harttle.land/2015/11/07/vim-cursor.html"&gt;在Vim中进行快速光标移动&lt;/a&gt;）。&amp;nbsp;但一个窗口内只有一个Buffer是处于可见状态的，所以Buffer的用法最不直观。&lt;/p&gt;
&lt;p&gt;学习Vim就要克服那些不直观的操作！因为Vim本身就是基于CLI的，而我们相信CLI就是效率。本文便来总结一下Buffer相关的命令与操作。&lt;/p&gt;
&lt;h3 id="_1"&gt;打开与关闭&lt;a class="headerlink" href="#_1" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;不带任何参数打开多个文件便可以把它们都放入缓冲区（Buffer）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;vim&lt;/span&gt; &lt;span class="k"&gt;a&lt;/span&gt;.txt &lt;span class="k"&gt;b&lt;/span&gt;.txt&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;当你使用&lt;code&gt;:q&lt;/code&gt;关闭文件时？是否看到过&lt;code&gt;1 more file to edit&lt;/code&gt;的警告？那就是缓冲区中的文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;进入Vim后，通过&lt;code&gt;:e[dit]&lt;/code&gt;命令即可打开某个文件到缓冲区。还记得吗？使用&lt;code&gt;:new&lt;/code&gt;可以&lt;a href="/use-windows-edit-multi-files-in-vim.html"&gt;打开一个新窗口&lt;/a&gt;。 关闭一个文件可以用&lt;code&gt;:q&lt;/code&gt;，移出缓冲区用&lt;code&gt;:bd[elete]&lt;/code&gt;（占用缓冲区的文件对你毫无影响，多数情况下不需要这样做）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果Buffer未保存&lt;code&gt;:bd&lt;/code&gt;会失败，如果强制删除可以&lt;code&gt;:bd!&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_2"&gt;缓冲区跳转&lt;a class="headerlink" href="#_2" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;缓冲区之间跳转最常用的方式便是 &lt;code&gt;Ctrl+^&lt;/code&gt;（不需要按下Shift）来切换当前缓冲区和上一个缓冲区。&amp;nbsp;另外，还提供了很多跳转命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;ls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; :&lt;span class="k"&gt;buffers&lt;/span&gt;       列出所有缓冲区&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;bn&lt;/span&gt;[ext]            下一个缓冲区&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;bp&lt;/span&gt;[revious]        上一个缓冲区&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;b&lt;/span&gt; {&lt;span class="k"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; expression}     跳转到指定缓冲区&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;:b&lt;/code&gt;接受缓冲区编号，或者部分文件名。例如：
* &lt;code&gt;:b2&lt;/code&gt;将会跳转到编号为2的缓冲区，如果你正在用&lt;code&gt;:ls&lt;/code&gt;列出缓冲区，这时只需要输入编号回车即可。
* &lt;code&gt;:b exa&lt;/code&gt;将会跳转到最匹配&lt;code&gt;exa&lt;/code&gt;的文件名，比如&lt;code&gt;example.html&lt;/code&gt;，&lt;strong&gt;模糊匹配打开文件正是Vim缓冲区的强大之处&lt;/strong&gt;&amp;nbsp;。&lt;/p&gt;
&lt;h3 id="_3"&gt;分屏&lt;a class="headerlink" href="#_3" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;在&lt;a href="/use-windows-edit-multi-files-in-vim.html"&gt;Vim 多文件编辑：窗口&lt;/a&gt;中已经介绍了Vim中分割屏幕的操作。&amp;nbsp;其实分屏时还可以指定一个Buffer在新的Window中打开。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;sb&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;               分屏并打开编号为3的Buffer&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;vertical&lt;/span&gt; &lt;span class="k"&gt;sb&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;      同上，垂直分屏&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;vertical&lt;/span&gt; &lt;span class="k"&gt;rightbelow&lt;/span&gt; &lt;span class="k"&gt;sfind&lt;/span&gt; &lt;span class="k"&gt;file&lt;/span&gt;.txt&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意&lt;code&gt;sfind&lt;/code&gt;可以打开在Vim PATH中的任何文件。这当然需要我们设置PATH，一个通用的做法是在&lt;code&gt;~/.vimrc&lt;/code&gt;中添加：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;quot; 将当前工作路径设为Vim PATH&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;path&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;$PWD/**&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="_4"&gt;利用通配符进行缓冲区跳转&lt;a class="headerlink" href="#_4" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;这是缓冲区最强大的功能之一。我们可以使用通配符来指定要跳转到的缓冲区文件名。 在此之前，我们启动&lt;code&gt;wildmenu&lt;/code&gt;并设置匹配后文件选择模式为&lt;code&gt;full&lt;/code&gt;。 &lt;code&gt;wildchar&lt;/code&gt;为选择下一个备选文件的快捷键， 而&lt;code&gt;wildcharm&lt;/code&gt;用于宏定义中（语义同&lt;code&gt;wildchar&lt;/code&gt;），比如后面的&lt;code&gt;noremap&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;wildmenu&lt;/span&gt; &lt;span class="nb"&gt;wildmode&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;full &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;wildchar&lt;/span&gt;&lt;span class="p"&gt;=&amp;lt;&lt;/span&gt;Tab&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;wildcharm&lt;/span&gt;&lt;span class="p"&gt;=&amp;lt;&lt;/span&gt;C&lt;span class="p"&gt;-&lt;/span&gt;Z&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;比如现在按下打开这些文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;vehicle.&lt;span class="k"&gt;c&lt;/span&gt; vehicle.&lt;span class="k"&gt;h&lt;/span&gt; car.&lt;span class="k"&gt;c&lt;/span&gt; car.&lt;span class="k"&gt;h&lt;/span&gt; jet.&lt;span class="k"&gt;c&lt;/span&gt; jet.&lt;span class="k"&gt;h&lt;/span&gt; jetcar.&lt;span class="k"&gt;c&lt;/span&gt; jetcar.&lt;span class="k"&gt;h&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后按下&lt;code&gt;:b &amp;lt;Tab&amp;gt;&lt;/code&gt;便可看到Vim提供的备选文件列表了， 按下&lt;code&gt;&amp;lt;Tab&amp;gt;&lt;/code&gt;选择下一个，按下回车打开当前文件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;b&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;Tab&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;       &lt;span class="c"&gt;&amp;quot; 显示所有Buffer中的文件&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;b&lt;/span&gt; car&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;Tab&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;    &lt;span class="c"&gt;&amp;quot; 显示 car.c car.h&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;b&lt;/span&gt; *car&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;Tab&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;   &lt;span class="c"&gt;&amp;quot; 显示 car.c jetcar.c car.h jetcar.h&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;b&lt;/span&gt; .&lt;span class="k"&gt;h&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;Tab&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;     &lt;span class="c"&gt;&amp;quot; 显示 vehicle.h car.h jet.h jetcar.h&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;b&lt;/span&gt; .&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;Tab&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;     &lt;span class="c"&gt;&amp;quot; 显示 vehicle.c car.c jet.c jetcar.c&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;b&lt;/span&gt; &lt;span class="k"&gt;ar&lt;/span&gt;.&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;Tab&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;   &lt;span class="c"&gt;&amp;quot; 显示 car.c jetcar.c&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;b&lt;/span&gt; &lt;span class="k"&gt;j&lt;/span&gt;*&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;Tab&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;    &lt;span class="c"&gt;&amp;quot; 显示 jet.c jetcar.c jetcar.h&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;我们可以为&lt;code&gt;:b &amp;lt;Tab&amp;gt;&lt;/code&gt;设置一个快捷键&lt;code&gt;&amp;lt;c-n&amp;gt;&lt;/code&gt;，这时便用到上文中设置的&lt;code&gt;wildcharm&lt;/code&gt;了：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;noremap&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="k"&gt;n&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; :&lt;span class="k"&gt;b&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;z&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;-= 完&amp;nbsp;=-&lt;/p&gt;</content><category term="VIM"></category><category term="VIM"></category><category term="buffer"></category><category term="edit multi files"></category></entry><entry><title>Vim 多文件编辑：标签页</title><link href="https://doobom.me/use-tagpages-edit-multi-files-in-vim" rel="alternate"></link><published>2019-02-08T23:01:00+08:00</published><updated>2019-02-08T23:01:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2019-02-08:/use-tagpages-edit-multi-files-in-vim</id><summary type="html">&lt;p&gt;Vim&amp;nbsp;多文件编辑：标签页.&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;原文链接: &lt;a href="https://harttle.land/2015/11/12/vim-tabpage.html"&gt;https://harttle.land/2015/11/12/vim-tabpage.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;多文件编辑的场景太常见了：代码比对、项目重构、模块构建… 最初harttle在碰到这些问题时直接转向IDE了，其实Vim不仅支持多文件编辑，而且支持多种风格：标签页(tab)、窗口(window)、缓冲区(buffer)等。&amp;nbsp;今天harttle就来介绍一下Vim强大的多文件编辑！本文介绍Vim标签页的使用.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;要做一个强大的IDE，除了多文件编辑技巧，你可能还需要终端复用和目录树。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_1"&gt;打开与关闭&lt;a class="headerlink" href="#_1" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a href="http://vim.wikia.com/wiki/Using_tab_pages"&gt;标签页&lt;/a&gt;是最常见的多文件编辑方式吧，熟悉IDE的小伙伴一定能很快上手！ 使用&lt;code&gt;-p&lt;/code&gt;参数来用多个标签页启动Vim：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;vim&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="k"&gt;p&lt;/span&gt; main.cpp my&lt;span class="p"&gt;-&lt;/span&gt;oj&lt;span class="p"&gt;-&lt;/span&gt;toolkit.&lt;span class="k"&gt;h&lt;/span&gt; &lt;span class="sr"&gt;/private/&lt;/span&gt;etc/hosts&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="vim-tab" src="images/vim-tab@2x.png" /&gt;&lt;/p&gt;
&lt;p&gt;在Vim中也可以打开和关闭标签：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;tabe&lt;/span&gt;[dit] {&lt;span class="k"&gt;file&lt;/span&gt;}   edit specified &lt;span class="k"&gt;file&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="k"&gt;a&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="k"&gt;tab&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;tabf&lt;/span&gt;[ind] {&lt;span class="k"&gt;file&lt;/span&gt;}   open &lt;span class="k"&gt;a&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="k"&gt;tab&lt;/span&gt; with filename given&lt;span class="p"&gt;,&lt;/span&gt; searching the &lt;span class="s1"&gt;&amp;#39;path&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; find it&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;tabc&lt;/span&gt;[lose]         &lt;span class="k"&gt;close&lt;/span&gt; current &lt;span class="k"&gt;tab&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;tabc&lt;/span&gt;[lose] {&lt;span class="k"&gt;i&lt;/span&gt;}     &lt;span class="k"&gt;close&lt;/span&gt; &lt;span class="k"&gt;i&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="k"&gt;th&lt;/span&gt; &lt;span class="k"&gt;tab&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;tabo&lt;/span&gt;[nly]          &lt;span class="k"&gt;close&lt;/span&gt; &lt;span class="k"&gt;all&lt;/span&gt; other &lt;span class="k"&gt;tabs&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;show &lt;span class="k"&gt;only&lt;/span&gt; the current &lt;span class="k"&gt;tab&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;中括号中的部分可以省略，在Vim中&lt;code&gt;:h tabedit&lt;/code&gt;可以查看命令帮助。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_2"&gt;移动标签&lt;a class="headerlink" href="#_2" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;tabs&lt;/span&gt;         &lt;span class="nb"&gt;list&lt;/span&gt; &lt;span class="k"&gt;all&lt;/span&gt; &lt;span class="k"&gt;tabs&lt;/span&gt; including their displayed &lt;span class="nb"&gt;window&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;tabm&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;       move current &lt;span class="k"&gt;tab&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;first&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;tabm&lt;/span&gt;         move current &lt;span class="k"&gt;tab&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; last&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;tabm&lt;/span&gt; {&lt;span class="k"&gt;i&lt;/span&gt;}     move current &lt;span class="k"&gt;tab&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; position &lt;span class="k"&gt;i&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="_3"&gt;标签跳转&lt;a class="headerlink" href="#_3" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;tabn&lt;/span&gt;         &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; next &lt;span class="k"&gt;tab&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;tabp&lt;/span&gt;         &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;previous&lt;/span&gt; &lt;span class="k"&gt;tab&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;tabfirst&lt;/span&gt;     &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;first&lt;/span&gt; &lt;span class="k"&gt;tab&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;tablast&lt;/span&gt;      &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; last &lt;span class="k"&gt;tab&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在正常模式（normal）下，还可以使用快捷键：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gt            &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; next &lt;span class="k"&gt;tab&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;gT            &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;previous&lt;/span&gt; &lt;span class="k"&gt;tab&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;{&lt;span class="k"&gt;i&lt;/span&gt;}gt         &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;tab&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; position &lt;span class="k"&gt;i&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以设置更通用的切换标签页快捷键，比如我的&lt;code&gt;~/.vimrc&lt;/code&gt;是这样设置的:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;noremap&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;C&lt;span class="p"&gt;-&lt;/span&gt;L&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;Esc&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;:tabnext&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;noremap&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;C&lt;span class="p"&gt;-&lt;/span&gt;H&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;Esc&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;:&lt;span class="k"&gt;tabprevious&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;-= 完&amp;nbsp;=-&lt;/p&gt;</content><category term="VIM"></category><category term="VIM"></category><category term="tag"></category><category term="edit multi files"></category></entry><entry><title>Vim 多文件编辑：窗口</title><link href="https://doobom.me/use-windows-edit-multi-files-in-vim" rel="alternate"></link><published>2019-02-08T23:01:00+08:00</published><updated>2019-02-08T23:01:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2019-02-08:/use-windows-edit-multi-files-in-vim</id><summary type="html">&lt;p&gt;Vim&amp;nbsp;多文件编辑：窗口.&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;原文链接: &lt;a href="https://harttle.land/2015/11/14/vim-window.html"&gt;https://harttle.land/2015/11/14/vim-window.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;标签页(tab)、窗口(window)、缓冲区(buffer)是Vim多文件编辑的三种方式，它们可以单独使用，也可以同时使用。&amp;nbsp;它们的关系是这样的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A buffer is the in-memory text of a file. A window is a viewport on a buffer. A tab page is a collection of windows. –&lt;a href="http://vimdoc.sourceforge.net/htmldoc/windows.html"&gt;vimdoc&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本文主要介绍Vim窗口的创建与维护,&amp;nbsp;先上图：&lt;/p&gt;
&lt;p&gt;&lt;img alt="vim-window" src="images/vim-window@2x.png" /&gt;&lt;/p&gt;
&lt;h3 id="_1"&gt;分屏打开多个文件&lt;a class="headerlink" href="#_1" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;使用&lt;code&gt;-O&lt;/code&gt;参数可以让Vim以分屏的方式打开多个文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;vim&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;O main.cpp my&lt;span class="p"&gt;-&lt;/span&gt;oj&lt;span class="p"&gt;-&lt;/span&gt;toolkit.&lt;span class="k"&gt;h&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;使用小写的-o可以水平分屏。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_2"&gt;打开关闭命令&lt;a class="headerlink" href="#_2" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;在进入Vim后，可以使用这些命令来打开/关闭窗口：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;sp&lt;/span&gt;[lit] {&lt;span class="k"&gt;file&lt;/span&gt;}     水平分屏&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; {&lt;span class="k"&gt;file&lt;/span&gt;}         水平分屏&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;sv&lt;/span&gt;[iew] {&lt;span class="k"&gt;file&lt;/span&gt;}     水平分屏，以只读方式打开&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;vs&lt;/span&gt;[plit] {&lt;span class="k"&gt;file&lt;/span&gt;}    垂直分屏&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;clo&lt;/span&gt;[&lt;span class="k"&gt;se&lt;/span&gt;]            关闭当前窗口&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;上述命令中，如未指定file则打开当前文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_3"&gt;打开关闭快捷键&lt;a class="headerlink" href="#_3" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;上述命令都有相应的快捷键，它们有共同的前缀：&lt;code&gt;Ctrl+w&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Ctrl&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="k"&gt;w&lt;/span&gt; s        水平分割当前窗口&lt;/span&gt;
&lt;span class="code-line"&gt;Ctrl&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="k"&gt;w&lt;/span&gt; &lt;span class="k"&gt;v&lt;/span&gt;        垂直分割当前窗口&lt;/span&gt;
&lt;span class="code-line"&gt;Ctrl&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="k"&gt;w&lt;/span&gt; &lt;span class="k"&gt;q&lt;/span&gt;        关闭当前窗口&lt;/span&gt;
&lt;span class="code-line"&gt;Ctrl&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="k"&gt;w&lt;/span&gt; &lt;span class="k"&gt;n&lt;/span&gt;        打开一个新窗口（空文件）&lt;/span&gt;
&lt;span class="code-line"&gt;Ctrl&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="k"&gt;w&lt;/span&gt; &lt;span class="k"&gt;o&lt;/span&gt;        关闭出当前窗口之外的所有窗口&lt;/span&gt;
&lt;span class="code-line"&gt;Ctrl&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="k"&gt;w&lt;/span&gt; T        当前窗口移动到新标签页&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="_4"&gt;切换窗口&lt;a class="headerlink" href="#_4" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;切换窗口的快捷键就是&lt;code&gt;Ctrl+w&lt;/code&gt;前缀 + &lt;code&gt;hjkl&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Ctrl&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="k"&gt;w&lt;/span&gt; &lt;span class="k"&gt;h&lt;/span&gt;        切换到左边窗口&lt;/span&gt;
&lt;span class="code-line"&gt;Ctrl&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="k"&gt;w&lt;/span&gt; &lt;span class="k"&gt;j&lt;/span&gt;        切换到下边窗口&lt;/span&gt;
&lt;span class="code-line"&gt;Ctrl&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="k"&gt;w&lt;/span&gt; &lt;span class="k"&gt;k&lt;/span&gt;        切换到上边窗口&lt;/span&gt;
&lt;span class="code-line"&gt;Ctrl&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="k"&gt;w&lt;/span&gt; &lt;span class="k"&gt;l&lt;/span&gt;        切换到右边窗口&lt;/span&gt;
&lt;span class="code-line"&gt;Ctrl&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="k"&gt;w&lt;/span&gt; &lt;span class="k"&gt;w&lt;/span&gt;        遍历切换窗口&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;还有&lt;code&gt;t&lt;/code&gt;切换到最上方的窗口，&lt;code&gt;b&lt;/code&gt;切换到最下方的窗口。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_5"&gt;移动窗口&lt;a class="headerlink" href="#_5" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;分屏后还可以把当前窗口向任何方向移动，只需要将上述快捷键中的&lt;code&gt;hjkl&lt;/code&gt;大写：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Ctrl&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="k"&gt;w&lt;/span&gt; H        向左移动当前窗口&lt;/span&gt;
&lt;span class="code-line"&gt;Ctrl&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="k"&gt;w&lt;/span&gt; J        向下移动当前窗口&lt;/span&gt;
&lt;span class="code-line"&gt;Ctrl&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="k"&gt;w&lt;/span&gt; K        向上移动当前窗口&lt;/span&gt;
&lt;span class="code-line"&gt;Ctrl&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="k"&gt;w&lt;/span&gt; L        向右移动当前窗口&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="_6"&gt;调整大小&lt;a class="headerlink" href="#_6" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;调整窗口大小的快捷键仍然有&lt;code&gt;Ctrl+W&lt;/code&gt;前缀：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Ctrl&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="k"&gt;w&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt;        增加窗口高度&lt;/span&gt;
&lt;span class="code-line"&gt;Ctrl&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="k"&gt;w&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;        减小窗口高度&lt;/span&gt;
&lt;span class="code-line"&gt;Ctrl&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="k"&gt;w&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;        统一窗口高度&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;-= 完&amp;nbsp;=-&lt;/p&gt;</content><category term="VIM"></category><category term="VIM"></category><category term="window"></category><category term="edit multi files"></category></entry><entry><title>在 Vim 中优雅地查找和替换</title><link href="https://doobom.me/search-and-replace-in-vim" rel="alternate"></link><published>2019-02-05T23:01:00+08:00</published><updated>2019-02-05T23:01:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2019-02-05:/search-and-replace-in-vim</id><summary type="html">&lt;p&gt;&lt;span class="caps"&gt;VIM&lt;/span&gt; 中的查找及替换,&amp;nbsp;可以用正则式进行.&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;本文来源:&amp;nbsp;https://harttle.land/2016/08/08/vim-search-in-file.html&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;总有人问我 Vim 中能不能查找，当然能！而且是超级强的查找！ 这篇文章来详细介绍 Vim 中查找相关的设置和使用方法。&amp;nbsp;包括查找与替换、查找光标所在词、高亮前景/背景色、切换高亮状态、大小写敏感查找等。&lt;/p&gt;
&lt;h2 id="_1"&gt;查找&lt;a class="headerlink" href="#_1" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;在&lt;code&gt;normal&lt;/code&gt;模式下按下&lt;code&gt;/&lt;/code&gt;即可进入查找模式，输入要查找的字符串并按下回车。 Vim会跳转到第一个匹配。按下&lt;code&gt;n&lt;/code&gt;查找下一个，按下&lt;code&gt;N&lt;/code&gt;查找上一个。&lt;/p&gt;
&lt;p&gt;Vim查找支持正则表达式，例如&lt;code&gt;/vim$&lt;/code&gt;匹配行尾的&amp;#8221;&lt;code&gt;vim&lt;/code&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;。 需要查找特殊字符需要转义，例如&lt;code&gt;/vim\$&lt;/code&gt;匹配&amp;#8221;&lt;code&gt;vim$&lt;/code&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意查找回车应当用&lt;code&gt;\n&lt;/code&gt;，而替换为回车应当用&lt;code&gt;\r&lt;/code&gt;（相当于&lt;code&gt;&amp;lt;CR&amp;gt;&lt;/code&gt;）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_2"&gt;大小写敏感查找&lt;a class="headerlink" href="#_2" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;在查找模式中加入&lt;code&gt;\c&lt;/code&gt;表示大小写不敏感查找，&lt;code&gt;\C&lt;/code&gt;表示大小写敏感查找。例如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/foo\&lt;span class="k"&gt;c&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;将会查找所有的&amp;#8221;&lt;code&gt;foo&lt;/code&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;,&amp;#8221;&lt;code&gt;FOO&lt;/code&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;,&amp;#8221;&lt;code&gt;Foo&lt;/code&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;等字符串。&lt;/p&gt;
&lt;h2 id="_3"&gt;大小写敏感配置&lt;a class="headerlink" href="#_3" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;Vim&amp;nbsp;默认采用大小写敏感的查找，为了方便我们常常将其配置为大小写不敏感：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;quot; 设置默认进行大小写不敏感查找&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;ignorecase&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c"&gt;&amp;quot; 如果有一个大写字母，则切换到大小写敏感查找&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;smartcase&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;将上述设置粘贴到你的&lt;code&gt;~/.vimrc&lt;/code&gt;，重新打开Vim即可生效。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_4"&gt;查找当前单词&lt;a class="headerlink" href="#_4" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;在&lt;code&gt;normal&lt;/code&gt;模式下按下&lt;code&gt;*&lt;/code&gt;即可查找光标所在单词（word）， 要求每次出现的前后为空白字符或标点符号。例如当前为&lt;code&gt;foo&lt;/code&gt;， 可以匹配&lt;code&gt;foo bar&lt;/code&gt;中的&lt;code&gt;foo&lt;/code&gt;，但不可匹配&lt;code&gt;foobar&lt;/code&gt;中的&lt;code&gt;foo&lt;/code&gt;。&amp;nbsp;这在查找函数名、变量名时非常有用。&lt;/p&gt;
&lt;p&gt;按下&lt;code&gt;g*&lt;/code&gt;即可查找光标所在单词的字符序列，每次出现前后字符无要求。 即&lt;code&gt;foo bar&lt;/code&gt;和&lt;code&gt;foobar&lt;/code&gt;中的&lt;code&gt;foo&lt;/code&gt;均可被匹配到。&lt;/p&gt;
&lt;h2 id="_5"&gt;查找与替换&lt;a class="headerlink" href="#_5" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;code&gt;:s&lt;/code&gt;（substitute）命令用来查找和替换字符串。语法如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;{作用范围}s&lt;span class="sr"&gt;/{目标}/&lt;/span&gt;{替换}/{替换标志}&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;例如&lt;code&gt;:%s/foo/bar/g&lt;/code&gt;会在全局范围(&lt;code&gt;%&lt;/code&gt;)查找&lt;code&gt;foo&lt;/code&gt;并替换为&lt;code&gt;bar&lt;/code&gt;，所有出现都会被替换（&lt;code&gt;g&lt;/code&gt;）。&lt;/p&gt;
&lt;h2 id="_6"&gt;作用范围&lt;a class="headerlink" href="#_6" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;作用范围分为当前行、全文、选区等等。&lt;/p&gt;
&lt;p&gt;当前行：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;s&lt;span class="sr"&gt;/foo/&lt;/span&gt;bar/&lt;span class="k"&gt;g&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;全文：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;%s&lt;span class="sr"&gt;/foo/&lt;/span&gt;bar/&lt;span class="k"&gt;g&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;选区，在Visual模式下选择区域后输入&lt;code&gt;:&lt;/code&gt;，Vim即可自动补全为 &lt;code&gt;:'&amp;lt;,'&amp;gt;&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;s&lt;span class="sr"&gt;/foo/&lt;/span&gt;bar/&lt;span class="k"&gt;g&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2-11行：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;s&lt;span class="sr"&gt;/foo/&lt;/span&gt;bar/&lt;span class="k"&gt;g&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;当前行.与接下来两行+2：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;.&lt;span class="p"&gt;,+&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;s&lt;span class="sr"&gt;/foo/&lt;/span&gt;bar/&lt;span class="k"&gt;g&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="_7"&gt;替换标志&lt;a class="headerlink" href="#_7" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;上文中命令结尾的&lt;code&gt;g&lt;/code&gt;即是替换标志之一，表示全局&lt;code&gt;global&lt;/code&gt;替换（即替换目标的所有出现）。&amp;nbsp;还有很多其他有用的替换标志：&lt;/p&gt;
&lt;p&gt;空替换标志表示只替换从光标位置开始，目标的第一次出现：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;%s&lt;span class="sr"&gt;/foo/&lt;/span&gt;bar&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;i&lt;/code&gt;表示大小写不敏感查找，&lt;code&gt;I&lt;/code&gt;表示大小写敏感：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;%s&lt;span class="sr"&gt;/foo/&lt;/span&gt;bar/&lt;span class="k"&gt;i&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;# 等效于模式中的\&lt;span class="k"&gt;c&lt;/span&gt;（不敏感）或\C（敏感）&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;%s&lt;span class="sr"&gt;/foo\c/&lt;/span&gt;bar&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;c&lt;/code&gt;表示需要确认，例如全局查找&amp;#8221;&lt;code&gt;foo&lt;/code&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;替换为&amp;#8221;&lt;code&gt;bar&lt;/code&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;并且需要确认：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;%s&lt;span class="sr"&gt;/foo/&lt;/span&gt;bar/gc&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;回车后Vim会将光标移动到每一次&amp;#8221;&lt;code&gt;foo&lt;/code&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;出现的位置，并提示&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;replace with bar &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;y&lt;/span&gt;&lt;span class="sr"&gt;/n/&lt;/span&gt;&lt;span class="k"&gt;a&lt;/span&gt;&lt;span class="sr"&gt;/q/&lt;/span&gt;&lt;span class="k"&gt;l&lt;/span&gt;&lt;span class="sr"&gt;/^E/&lt;/span&gt;^Y&lt;span class="p"&gt;)&lt;/span&gt;?&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;按下&lt;code&gt;y&lt;/code&gt;表示替换，&lt;code&gt;n&lt;/code&gt;表示不替换，&lt;code&gt;a&lt;/code&gt;表示替换所有，&lt;code&gt;q&lt;/code&gt;表示退出查找模式， &lt;code&gt;l&lt;/code&gt;表示替换当前位置并退出。&lt;code&gt;^E&lt;/code&gt;与&lt;code&gt;^Y&lt;/code&gt;是光标移动快捷键，参考： &lt;a href="https://harttle.land/2015/11/07/vim-cursor.html"&gt;Vim中如何快速进行光标移动&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id="_8"&gt;高亮设置&lt;a class="headerlink" href="#_8" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;h3 id="_9"&gt;高亮颜色设置&lt;a class="headerlink" href="#_9" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;如果你像我一样觉得高亮的颜色不太舒服，可以在 &lt;code&gt;~/.vimrc&lt;/code&gt; 中进行设置：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;highlight&lt;/span&gt; Search ctermbg&lt;span class="p"&gt;=&lt;/span&gt;yellow ctermfg&lt;span class="p"&gt;=&lt;/span&gt;black &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;highlight&lt;/span&gt; IncSearch ctermbg&lt;span class="p"&gt;=&lt;/span&gt;black ctermfg&lt;span class="p"&gt;=&lt;/span&gt;yellow &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;highlight&lt;/span&gt; MatchParen cterm&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;underline&lt;/span&gt; ctermbg&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;NONE&lt;/span&gt; ctermfg&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;NONE&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上述配置指定 Search 结果的前景色（foreground）为黑色，背景色（background）为灰色；&amp;nbsp;渐进搜索的前景色为黑色，背景色为黄色；光标处的字符加下划线。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;更多的CTERM颜色可以查阅：&lt;a href="http://vim.wikia.com/wiki/Xterm256_color_names_for_console_Vim"&gt;http://vim.wikia.com/wiki/Xterm256_color_names_for_console_Vim&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_10"&gt;禁用/启用高亮&lt;a class="headerlink" href="#_10" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;有木有觉得每次查找替换后 Vim 仍然高亮着搜索结果？&amp;nbsp;可以手动让它停止高亮，在normal模式下输入：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;nohighlight&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c"&gt;&amp;quot; 等效于&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;nohl&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其实上述命令禁用了所有高亮，只禁用搜索高亮的命令是&lt;code&gt;:set nohlsearch&lt;/code&gt;。 下次搜索时需要&lt;code&gt;:set hlsearch&lt;/code&gt;再次启动搜索高亮。&lt;/p&gt;
&lt;h4 id="_11"&gt;&lt;em&gt;延时禁用&lt;/em&gt;&lt;a class="headerlink" href="#_11" title="Permanent link"&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;怎么能够让Vim查找/替换后一段时间自动取消高亮，发生查找时自动开启呢？&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;quot; 当光标一段时间保持不动了，就禁用高亮&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;autocmd cursorhold * &lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="k"&gt;nohlsearch&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c"&gt;&amp;quot; 当输入查找命令时，再启用高亮&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;noremap&lt;/span&gt; &lt;span class="k"&gt;n&lt;/span&gt; :&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;hlsearch&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;cr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;n&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;noremap&lt;/span&gt; N :&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;hlsearch&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;cr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;N&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;noremap&lt;/span&gt; &lt;span class="sr"&gt;/ :set hlsearch&amp;lt;cr&amp;gt;/&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;noremap&lt;/span&gt; ? :&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;hlsearch&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;cr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;?&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;noremap&lt;/span&gt; * *:&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;hlsearch&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;cr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;将上述配置粘贴到&lt;code&gt;~/.vimrc&lt;/code&gt;，重新打开vim即可生效。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="_12"&gt;&lt;em&gt;一键禁用&lt;/em&gt;&lt;a class="headerlink" href="#_12" title="Permanent link"&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;如果延时禁用搜索高亮仍然不够舒服，可以设置快捷键来一键禁用/开启搜索高亮：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;noremap&lt;/span&gt; &lt;span class="k"&gt;n&lt;/span&gt; :&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;hlsearch&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;cr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;n&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;noremap&lt;/span&gt; N :&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;hlsearch&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;cr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;N&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;noremap&lt;/span&gt; &lt;span class="sr"&gt;/ :set hlsearch&amp;lt;cr&amp;gt;/&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;noremap&lt;/span&gt; ? :&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;hlsearch&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;cr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;?&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;noremap&lt;/span&gt; * *:&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;hlsearch&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;cr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;nnoremap&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="k"&gt;h&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; :&lt;span class="k"&gt;call&lt;/span&gt; DisableHighlight&lt;span class="p"&gt;()&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;cr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; DisableHighlight&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="k"&gt;nohlsearch&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;endfunc&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;希望关闭高亮时只需要按下 &lt;code&gt;Ctrl+H&lt;/code&gt;，当发生下次搜索时又会自动启用。&lt;/p&gt;
&lt;h2 id="_13"&gt;参考阅读&lt;a class="headerlink" href="#_13" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="caps"&gt;XTERM&lt;/span&gt; 256色：&lt;a href="http://vim.wikia.com/wiki/Xterm256_color_names_for_console_Vim"&gt;http://vim.wikia.com/wiki/Xterm256_color_names_for_console_Vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Vim Wikia - 查找与替换：&lt;a href="http://vim.wikia.com/wiki/Search_and_replace"&gt;http://vim.wikia.com/wiki/Search_and_replace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;用 Vim 打造 &lt;span class="caps"&gt;IDE&lt;/span&gt; 环境：&lt;a href="https://harttle.land/2015/11/04/vim-ide.html"&gt;https://harttle.land/2015/11/04/vim-ide.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;-= 完&amp;nbsp;=-&lt;/p&gt;</content><category term="VIM"></category><category term="VIM"></category><category term="regex"></category><category term="string"></category></entry><entry><title>How To Used Git</title><link href="https://doobom.me/how-to-used-git" rel="alternate"></link><published>2017-03-05T19:01:00+08:00</published><updated>2017-03-05T19:01:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2017-03-05:/how-to-used-git</id><summary type="html">&lt;p&gt;How To Used&amp;nbsp;Git&lt;/p&gt;</summary><content type="html">&lt;h2 id="1git-bash"&gt;1.使用git bash创建一个文件夹&lt;a class="headerlink" href="#1git-bash" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt; cd g:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt; cd GitLearning&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt; mkdir LearningPythonDiary&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="2"&gt;2.初始化代码仓库&lt;a class="headerlink" href="#2" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt; git init&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="3"&gt;3.添加一个文件到仓库的缓存区（从工作目录添加到缓存区）&lt;a class="headerlink" href="#3" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt; git add filename&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="4head"&gt;4.将添加的文件从缓存区提交到HEAD（最近一次提交后的结果）&lt;a class="headerlink" href="#4head" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt; git commit -m &amp;quot;代码提交信息&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="5pushgithub"&gt;5.将本地代码仓库中代码push到gitHub上&lt;a class="headerlink" href="#5pushgithub" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;首先需要用我们在gitHub上的邮箱与用户名生成一个.ssh（id_rsa.pub） &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;--global user.name &amp;quot;Your Name Here&amp;quot;  &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Sets&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;when&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;commit&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;--global user.email &amp;quot;your_email@example.com&amp;quot;   &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Sets&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;when&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;commit&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后将生成的id_rsa.pub 中最后== 添加上自己在gitHub上的邮箱地址，全选一起拷贝到在gitHub上同样项目的 domay&amp;nbsp;key中。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;然后在git中创建主干线(ssh方式)  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt; git remote add origin git@github.com:username/LearningPythonDiary.git&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;也可以这样创建（https方式）：    &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt; git remote add origin https://github.com/username/LearningPythonDiary.git&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;不过这样创建就是每次提交的时候都要输入用户名与密码，比较繁琐。   &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;push到github中的同名项目中  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt; git push origin master&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="6github"&gt;6.将gitHub上的代码更新到本地&lt;a class="headerlink" href="#6github" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt; git pull origin master&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="7githublocalhost"&gt;7.从gitHub上复制项目到本地localhost&lt;a class="headerlink" href="#7githublocalhost" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt; git clone https://github.com/username/LearningPythonDiary.git master&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;&lt;em&gt;转自https://github.com/peterluo/LearningPythonDiary&lt;/em&gt;&lt;/em&gt;&lt;/p&gt;</content><category term="git"></category><category term="git"></category><category term="github"></category></entry><entry><title>Hello World</title><link href="https://doobom.me/hello-world" rel="alternate"></link><published>2017-03-02T02:01:00+08:00</published><updated>2017-03-02T02:01:00+08:00</updated><author><name>Pelican</name></author><id>tag:doobom.me,2017-03-02:/hello-world</id><summary type="html">&lt;p&gt;The first post for&amp;nbsp;Pelican.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hello World, Hello&amp;nbsp;Pelican.&lt;/p&gt;
&lt;p&gt;and&amp;nbsp;oops.run&lt;/p&gt;</content><category term="Pelican"></category><category term="Pelican"></category><category term="Python"></category></entry></feed>