<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>oops: run - git</title><link href="https://doobom.me/" rel="alternate"></link><link href="https://doobom.me/feeds/git.atom.xml" rel="self"></link><id>https://doobom.me/</id><updated>2021-01-05T00:00:49+08:00</updated><subtitle>keep running...</subtitle><entry><title>How To Migrate Or Export All Gpg Public And Private Keys From One User To Another</title><link href="https://doobom.me/how-to-migrate-or-export-all-gpg-public-and-private-keys-from-one-user-to-another" rel="alternate"></link><published>2021-01-05T00:00:49+08:00</published><updated>2021-01-05T00:00:49+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2021-01-05:/how-to-migrate-or-export-all-gpg-public-and-private-keys-from-one-user-to-another</id><summary type="html">&lt;p&gt;How to migrate or export all GnuPG (gpg) public and private keys from one user to another, Telling Git about your signing&amp;nbsp;key.&lt;/p&gt;</summary><content type="html">&lt;h2 id="how-to-migrate-or-export-all-gnupg-gpg-public-and-private-keys-from-one-user-to-another"&gt;How to migrate or export all GnuPG (gpg) public and private keys from one user to another&lt;a class="headerlink" href="#how-to-migrate-or-export-all-gnupg-gpg-public-and-private-keys-from-one-user-to-another" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;原文：&lt;/p&gt;
&lt;p&gt;&lt;a href="https://access.redhat.com/solutions/2115511"&gt;https://access.redhat.com/solutions/2115511&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;As the original user, use the following command to export all public keys to a base64-encoded text&amp;nbsp;file:&lt;/p&gt;
&lt;p&gt;:::bash
gpg -a &amp;#8212;export&amp;nbsp;&amp;gt;mypubkeys.asc&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Use the following command to export all encrypted private keys (which will also include corresponding public keys) to a text&amp;nbsp;file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gpg -a --export-secret-keys &amp;gt;myprivatekeys.asc&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Optionally export gpg&amp;#8217;s trustdb to a text&amp;nbsp;file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gpg --export-ownertrust &amp;gt;otrust.txt&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Transfer those files to a place that the new user can read, keeping in mind that it&amp;#8217;s bad practice to share private keys (e.g., via email or in a world-readable directory like &lt;code&gt;/tmp&lt;/code&gt;), despite the fact that they are encrypted and require the passphrase to be&amp;nbsp;used&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As the new user, execute gpg &amp;#8212;import commands against the two asc files and then check for the new keys with gpg -k and gpg -K,&amp;nbsp;e.g.:&lt;/p&gt;
&lt;p&gt;:::bash
gpg &amp;#8212;import myprivatekeys.asc
gpg &amp;#8212;import mypubkeys.asc
gpg -K
gpg&amp;nbsp;-k&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Optionally import the trustdb file as&amp;nbsp;well:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gpg --import-ownertrust otrust.txt&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;As the new user, test encryption and decryption with &lt;code&gt;gpg -er USERID&lt;/code&gt; and &lt;code&gt;gpg -d&lt;/code&gt; commands
Keep in mind that decryption and signing will likely fail unless the user running &lt;code&gt;gpg&lt;/code&gt; owns the terminal it is running on
(Translation: don&amp;#8217;t &lt;code&gt;su&lt;/code&gt; over to the new user; login directly via ssh or&amp;nbsp;console)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="telling-git-about-your-gpg-key"&gt;Telling Git about your &lt;span class="caps"&gt;GPG&lt;/span&gt; key&lt;a class="headerlink" href="#telling-git-about-your-gpg-key" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;原文：
&lt;a href="https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/telling-git-about-your-signing-key"&gt;Github Docs: Telling Git about your &lt;span class="caps"&gt;GPG&lt;/span&gt;&amp;nbsp;key&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use the &lt;code&gt;gpg --list-secret-keys --keyid-format LONG&lt;/code&gt; command to list &lt;span class="caps"&gt;GPG&lt;/span&gt; keys for which you have both a public and private key. A private key is required for signing commits or&amp;nbsp;tags.&lt;/p&gt;
&lt;p&gt;:::bash
$ gpg &amp;#8212;list-secret-keys &amp;#8212;keyid-format &lt;span class="caps"&gt;LONG&lt;/span&gt;&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;Note: Some &lt;span class="caps"&gt;GPG&lt;/span&gt; installations on Linux may require you to use &lt;code&gt;gpg2 --list-keys --keyid-format LONG&lt;/code&gt; to view a list of your existing keys instead. In this case you will also need to configure Git to use &lt;code&gt;gpg2 by running git config --global gpg.program gpg2&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;From the list of &lt;span class="caps"&gt;GPG&lt;/span&gt; keys, copy the &lt;span class="caps"&gt;GPG&lt;/span&gt; key &lt;span class="caps"&gt;ID&lt;/span&gt; you&amp;#8217;d like to use. In this example, the &lt;span class="caps"&gt;GPG&lt;/span&gt; key &lt;span class="caps"&gt;ID&lt;/span&gt; is &lt;code&gt;3AA5C34371567BD2&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;:::bash
$ gpg &amp;#8212;list-secret-keys &amp;#8212;keyid-format &lt;span class="caps"&gt;LONG&lt;/span&gt;&amp;nbsp;/Users/hubot/.gnupg/secring.gpg&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;sec   4096R/&lt;span class="caps"&gt;3AA5C34371567BD2&lt;/span&gt; 2016-03-10 [expires:2017-03-10]
uid                          Hubot
ssb   4096R/&lt;span class="caps"&gt;42B317FD4BA89E7A&lt;/span&gt;&amp;nbsp;2016-03-10&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To set your &lt;span class="caps"&gt;GPG&lt;/span&gt; signing key in Git, paste the text below, substituting in the &lt;span class="caps"&gt;GPG&lt;/span&gt; key &lt;span class="caps"&gt;ID&lt;/span&gt; you&amp;#8217;d like to use. In this example, the &lt;span class="caps"&gt;GPG&lt;/span&gt; key &lt;span class="caps"&gt;ID&lt;/span&gt; is &lt;code&gt;3AA5C34371567BD2&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;:::bash
$ git config &amp;#8212;global user.signingkey &lt;span class="caps"&gt;3AA5C34371567BD2&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="git"></category><category term="git"></category><category term="gpg"></category><category term="gnupg"></category></entry><entry><title>用 Github Actions 生成 Pelican</title><link href="https://doobom.me/pelican-with-github-actions" rel="alternate"></link><published>2020-12-25T19:40:19+08:00</published><updated>2020-12-25T19:40:19+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2020-12-25:/pelican-with-github-actions</id><summary type="html">&lt;p&gt;Pelican 利用 github 的 Actions 自动生成并提交到&amp;nbsp;github&lt;/p&gt;</summary><content type="html">&lt;p&gt;Github Actions&amp;nbsp;功能很强大，网上各种能玩出花的，我有这个想法，是因为折腾某个不可描述的网站的签到，那啥就不说了。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://getpelican.com/"&gt;Pelican&lt;/a&gt; 是个用 Python 写的一个静态网站生成工具，本站就是用这个生成的。毕竟在自己电脑上生成再提交 github 还是挺麻烦的，要装 好一些&amp;nbsp;软件呢。&lt;/p&gt;
&lt;p&gt;Github Actions 能自动去处理，节省了好多步骤，现在只要负责写写，转转，然后提交到源仓库就好了，其它就交给 Github&amp;nbsp;吧。&lt;/p&gt;
&lt;p&gt;其实也很简单，源仓库建一个 &lt;code&gt;.github/workflows&lt;/code&gt; 目录，里面放上 &lt;code&gt;xxx.yml&lt;/code&gt; 文件，比如： &lt;code&gt;site_generator.yml&lt;/code&gt;。贴上下面的内容：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# This workflow will install Python dependencies, run tests and lint with a single version of Python&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;Pelican&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt; &lt;span class="n"&gt;generator&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="ss"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="ss"&gt;push&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="ss"&gt;branches&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="ss"&gt;pull_request&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="ss"&gt;branches&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="ss"&gt;jobs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="ss"&gt;build&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;runs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="ss"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ubuntu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;latest&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="ss"&gt;steps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="ss"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;checkout&lt;/span&gt;&lt;span class="vi"&gt;@v2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;Set&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="no"&gt;Python&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="ss"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="vi"&gt;@v2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="ss"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="ss"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;Install&lt;/span&gt; &lt;span class="n"&gt;dependencies&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="ss"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;upgrade&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;flake8&lt;/span&gt; &lt;span class="n"&gt;pytest&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;requirements&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="n"&gt;requirements&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;fi&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;Lint&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;flake8&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="ss"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="c1"&gt;# stop the build if there are Python syntax errors or undefined names&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;flake8&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nb"&gt;select&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;E9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;F63&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;F7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;F82&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;statistics&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="c1"&gt;# exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;flake8&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;zero&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;complexity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;127&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;statistics&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nb"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="ss"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="c1"&gt;# 设置 git&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;global&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rovecat@gmail.com&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;global&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;doobom&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="c1"&gt;# 获取 pelican 插件&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="nb"&gt;clone&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;recursive&lt;/span&gt; &lt;span class="ss"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;getpelican&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;plugins&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="c1"&gt;# 获取本站的皮&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="nb"&gt;clone&lt;/span&gt; &lt;span class="ss"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;doobom&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;elegant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt; &lt;span class="no"&gt;SSH&lt;/span&gt; &lt;span class="n"&gt;keys&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;known_hosts&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="ss"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="c1"&gt;# 设置 SSH 环境&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;/.ssh&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sr"&gt;        ssh-keyscan github.com &amp;gt;&amp;gt; ~/&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;known_hosts&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;agent&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="vg"&gt;$SSH_AUTH_SOCK&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="sr"&gt;/dev/nu&lt;/span&gt;&lt;span class="n"&gt;ll&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;${{ secrets.ID_RSA }}&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="ss"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="ss"&gt;SSH_AUTH_SOCK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/tmp/ss&lt;/span&gt;&lt;span class="n"&gt;h_agent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sock&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;doobom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="ss"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="c1"&gt;# 获取网站保存的 repo 到 githubpage 目录，因为我的配置文件里面设置的生成目标目录是 githubpage&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="nb"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="vi"&gt;@github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="ss"&gt;:doobom&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;doobom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;githubpage&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="ss"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="ss"&gt;SSH_AUTH_SOCK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/tmp/ss&lt;/span&gt;&lt;span class="n"&gt;h_agent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sock&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="ss"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="c1"&gt;# 用 make 命令生成&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;publish&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;publish&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;gitpage&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="ss"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="c1"&gt;# 提交&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;githubpage&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;commit&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;auto build and update by github actions.&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt; &lt;span class="n"&gt;origin&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;      &lt;span class="ss"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="ss"&gt;SSH_AUTH_SOCK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/tmp/ss&lt;/span&gt;&lt;span class="n"&gt;h_agent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sock&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;在源仓库 &lt;code&gt;settings &amp;gt; secrets&lt;/code&gt; 添加一个 &lt;code&gt;ID_RSA&lt;/code&gt; 的环境变量，参考： &lt;a href="https://docs.github.com/articles/generating-an-ssh-key/"&gt;Github Documents&lt;/a&gt;
因为 Pelican 要装挺多东西的，所以放到 &lt;code&gt;requirements.txt&lt;/code&gt; 文件里面：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;beautifulsoup4&amp;gt;=4.9.3&lt;/span&gt;
&lt;span class="code-line"&gt;bs4&amp;gt;=0.0.1&lt;/span&gt;
&lt;span class="code-line"&gt;blinker&amp;gt;=1.4&lt;/span&gt;
&lt;span class="code-line"&gt;cssmin&amp;gt;=0.2.0&lt;/span&gt;
&lt;span class="code-line"&gt;ddt&amp;gt;=1.4.1&lt;/span&gt;
&lt;span class="code-line"&gt;docutils&amp;gt;=0.16&lt;/span&gt;
&lt;span class="code-line"&gt;feedgenerator&amp;gt;=1.9.1&lt;/span&gt;
&lt;span class="code-line"&gt;gitdb2&amp;gt;=4.0.2&lt;/span&gt;
&lt;span class="code-line"&gt;GitPython&amp;gt;=3.1.11&lt;/span&gt;
&lt;span class="code-line"&gt;invoke&amp;gt;=1.4.1&lt;/span&gt;
&lt;span class="code-line"&gt;jinja2&amp;gt;=2.11&lt;/span&gt;
&lt;span class="code-line"&gt;livereload&amp;gt;=2.6.3&lt;/span&gt;
&lt;span class="code-line"&gt;Markdown&amp;gt;=3.3.3&lt;/span&gt;
&lt;span class="code-line"&gt;MarkupSafe&amp;gt;=1.1.1&lt;/span&gt;
&lt;span class="code-line"&gt;pelican&amp;gt;=4.5.3&lt;/span&gt;
&lt;span class="code-line"&gt;Pygments&amp;lt;2.7.0,&amp;gt;=2.6.1&lt;/span&gt;
&lt;span class="code-line"&gt;python-dateutil&amp;gt;=2.8.1&lt;/span&gt;
&lt;span class="code-line"&gt;pytz&amp;gt;=2020.4&lt;/span&gt;
&lt;span class="code-line"&gt;six&amp;gt;=1.15.0&lt;/span&gt;
&lt;span class="code-line"&gt;smartypants&amp;gt;=2.0.1&lt;/span&gt;
&lt;span class="code-line"&gt;smmap&amp;gt;=3.0.4&lt;/span&gt;
&lt;span class="code-line"&gt;soupsieve&amp;gt;=2.1&lt;/span&gt;
&lt;span class="code-line"&gt;tornado&amp;gt;=6.1&lt;/span&gt;
&lt;span class="code-line"&gt;typogrify&amp;gt;=2.0.7&lt;/span&gt;
&lt;span class="code-line"&gt;Unidecode&amp;gt;=1.1.1&lt;/span&gt;
&lt;span class="code-line"&gt;webassets&amp;gt;=2.0&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;也并不是全部要用的就是了。&lt;/p&gt;
&lt;p&gt;另外就是本身 Pelican&amp;nbsp;的配置文件。&lt;/p&gt;
&lt;p&gt;Push&amp;nbsp;源仓库就可以看到日志了。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.mdeditor.tw/pl/p30L/zh-tw"&gt;GitHub Actions&amp;nbsp;實用參考&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://docs.github.com/articles/generating-an-ssh-key/"&gt;Github&amp;nbsp;Documents&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="git"></category><category term="git"></category><category term="github"></category><category term="python"></category><category term="pelican"></category></entry><entry><title>git ssh 配置</title><link href="https://doobom.me/git-auth-via-ssh-key" rel="alternate"></link><published>2020-02-06T15:09:00+08:00</published><updated>2020-02-06T15:09:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2020-02-06:/git-auth-via-ssh-key</id><summary type="html">&lt;p&gt;用 ssh 私钥登录 github&amp;nbsp;配置记录&lt;/p&gt;</summary><content type="html">&lt;h3 id="git"&gt;添加用户名及邮箱到 git 的全局配置&lt;a class="headerlink" href="#git" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git config --global user.name &lt;span class="s2"&gt;&amp;quot;Your Name Here&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Sets the default name for git to use when you commit&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;git config --global user.email &lt;span class="s2"&gt;&amp;quot;your_email@example.com&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Sets the default email for git to use when you commit&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="ssh"&gt;生成 ssh 密钥文件（已有证书就忽略&lt;a class="headerlink" href="#ssh" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1. 邮箱改成你的 github&amp;nbsp;邮件，根据提示操作创建密钥&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh-keygen -t rsa -b &lt;span class="m"&gt;4096&lt;/span&gt; -C &lt;span class="s2"&gt;&amp;quot;your_email@example.com&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;2. 提示 &lt;code&gt;nter a file in which to save the key,&lt;/code&gt; 输入文件保存的路径，直接回车就保存到提示的目录&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Enter a file in which to save the key &lt;span class="o"&gt;(&lt;/span&gt;/c/Users/you/.ssh/id_rsa&lt;span class="o"&gt;)&lt;/span&gt;:&lt;span class="o"&gt;[&lt;/span&gt;Press enter&lt;span class="o"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;3.&amp;nbsp;如果需要添加密码就在出现下面提示时输入&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Enter passphrase &lt;span class="o"&gt;(&lt;/span&gt;empty &lt;span class="k"&gt;for&lt;/span&gt; no passphrase&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;Type a passphrase&lt;span class="o"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Enter same passphrase again: &lt;span class="o"&gt;[&lt;/span&gt;Type passphrase again&lt;span class="o"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="ssh_1"&gt;设置 ssh&lt;a class="headerlink" href="#ssh_1" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1. 修改 &lt;code&gt;/etc/ssh/ssh_config&lt;/code&gt;,&amp;nbsp;在文件末尾添加&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Host github.com&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;    User git&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;    Hostname github.com&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;    IdentityFile /etc/ssh/github-ecdsa-521&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;2. 将公钥添加到 github&amp;nbsp;帐户&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;复制公钥文件到剪贴板&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;clip &amp;lt; /etc/ssh/github-ecdsa-521.pub&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Copies the contents of the id_rsa.pub file to your clipboard&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;然后点击 你的头像 -&amp;gt; &lt;code&gt;Setting&lt;/code&gt; -&amp;gt; &lt;code&gt;SSH and GPG keys&lt;/code&gt; -&amp;gt; &lt;code&gt;New SSH key&lt;/code&gt; -&amp;gt; 取个名字，粘贴上公钥 -&amp;gt; &lt;code&gt;Add SSH key&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3.&amp;nbsp;用命令测试一下&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh -T git@github.com&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果提示信息里面能看到你的用户名就说明成功了&lt;/p&gt;
&lt;h3 id="_1"&gt;参考&lt;a class="headerlink" href="#_1" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://help.github.com/en/github/authenticating-to-github"&gt;GitHub&amp;nbsp;Help&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;-= 完&amp;nbsp;=-&lt;/p&gt;</content><category term="git"></category><category term="git"></category><category term="github"></category><category term="ssh"></category></entry><entry><title>.gitignore 设置 git 忽略跟踪文件和文件夹</title><link href="https://doobom.me/git-set-gitignore" rel="alternate"></link><published>2019-02-13T19:01:00+08:00</published><updated>2019-02-13T19:01:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2019-02-13:/git-set-gitignore</id><summary type="html">&lt;p&gt;.gitignore 设置 git&amp;nbsp;忽略跟踪文件和文件夹&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;在项目的根目录（跟 &lt;code&gt;.git&lt;/code&gt; 文件夹所在目录同层）建立 &lt;code&gt;.gitignore&lt;/code&gt; 文件，在里面声明即可。 &lt;/strong&gt;&lt;/p&gt;
&lt;h3 id="_1"&gt;配置语法&lt;a class="headerlink" href="#_1" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;以斜杠“/”开头表示目录；&lt;/li&gt;
&lt;li&gt;以星号“*”通配多个字符；&lt;/li&gt;
&lt;li&gt;以问号“?”通配单个字符&lt;/li&gt;
&lt;li&gt;以方括号“[]”包含单个字符的匹配列表；&lt;/li&gt;
&lt;li&gt;以叹号“!”表示不忽略(跟踪)匹配到的文件或目录。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;git 对于 &lt;code&gt;.gitignore&lt;/code&gt; 配置文件是按行从上到下进行规则匹配的&lt;/p&gt;
&lt;p&gt;如果之前文件已提交过，则需要先清除原文件: &lt;code&gt;git rm *.dll&lt;/code&gt; 这样.    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_2"&gt;另一种方法&lt;a class="headerlink" href="#_2" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;修改git的全局设置，把忽略名单用于所有项目： 
首先，建立一个&lt;code&gt;.gitignore_global&lt;/code&gt;文件； &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;git config --global core.excludesfile .gitignore_global &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="_3"&gt;栗子&lt;a class="headerlink" href="#_3" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Github 给出的 Android 开发中使用的&lt;code&gt;.gitignore&lt;/code&gt;模板&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Built application files&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;*&lt;/span&gt;&lt;span class="na"&gt;.apk&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;*&lt;/span&gt;&lt;span class="na"&gt;.ap_&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Files for the Dalvik VM&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;*&lt;/span&gt;&lt;span class="na"&gt;.dex&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Java class files&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;*&lt;/span&gt;&lt;span class="na"&gt;.class&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Generated files&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nf"&gt;bin&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nf"&gt;gen&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nf"&gt;out&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Gradle files&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="na"&gt;.gradle&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nf"&gt;build&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Local configuration file (sdk path, etc)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nf"&gt;local.properties&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Proguard folder generated by Eclipse&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nf"&gt;proguard&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Log Files&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;*&lt;/span&gt;&lt;span class="na"&gt;.log&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Android Studio Navigation editor temp files&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="na"&gt;.navigation&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Android Studio captures folder&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nf"&gt;captures&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Intellij&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;*&lt;/span&gt;&lt;span class="na"&gt;.iml&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Keystore files&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;*&lt;/span&gt;&lt;span class="na"&gt;.jks&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="_4"&gt;参考&lt;a class="headerlink" href="#_4" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/github/gitignore/blob/master/Android.gitignore"&gt;https://github.com/github/gitignore/blob/master/Android.gitignore&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://git-scm.com/docs/gitignore"&gt;https://git-scm.com/docs/gitignore&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.jianshu.com/p/ea6341224e89"&gt;https://www.jianshu.com/p/ea6341224e89&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/u011475134/article/details/71521725"&gt;https://blog.csdn.net/u011475134/article/details/71521725&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;-= 完&amp;nbsp;=-&lt;/p&gt;</content><category term="git"></category><category term="git"></category><category term="github"></category><category term="gitignore"></category></entry><entry><title>How To Used Git</title><link href="https://doobom.me/how-to-used-git" rel="alternate"></link><published>2017-03-05T19:01:00+08:00</published><updated>2017-03-05T19:01:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2017-03-05:/how-to-used-git</id><summary type="html">&lt;p&gt;How To Used&amp;nbsp;Git&lt;/p&gt;</summary><content type="html">&lt;h2 id="1git-bash"&gt;1.使用git bash创建一个文件夹&lt;a class="headerlink" href="#1git-bash" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt; cd g:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt; cd GitLearning&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt; mkdir LearningPythonDiary&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="2"&gt;2.初始化代码仓库&lt;a class="headerlink" href="#2" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt; git init&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="3"&gt;3.添加一个文件到仓库的缓存区（从工作目录添加到缓存区）&lt;a class="headerlink" href="#3" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt; git add filename&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="4head"&gt;4.将添加的文件从缓存区提交到HEAD（最近一次提交后的结果）&lt;a class="headerlink" href="#4head" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt; git commit -m &amp;quot;代码提交信息&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="5pushgithub"&gt;5.将本地代码仓库中代码push到gitHub上&lt;a class="headerlink" href="#5pushgithub" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;首先需要用我们在gitHub上的邮箱与用户名生成一个.ssh（id_rsa.pub） &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;--global user.name &amp;quot;Your Name Here&amp;quot;  &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Sets&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;when&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;commit&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;--global user.email &amp;quot;your_email@example.com&amp;quot;   &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Sets&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;when&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;commit&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后将生成的id_rsa.pub 中最后== 添加上自己在gitHub上的邮箱地址，全选一起拷贝到在gitHub上同样项目的 domay&amp;nbsp;key中。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;然后在git中创建主干线(ssh方式)  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt; git remote add origin git@github.com:username/LearningPythonDiary.git&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;也可以这样创建（https方式）：    &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt; git remote add origin https://github.com/username/LearningPythonDiary.git&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;不过这样创建就是每次提交的时候都要输入用户名与密码，比较繁琐。   &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;push到github中的同名项目中  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt; git push origin master&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="6github"&gt;6.将gitHub上的代码更新到本地&lt;a class="headerlink" href="#6github" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt; git pull origin master&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="7githublocalhost"&gt;7.从gitHub上复制项目到本地localhost&lt;a class="headerlink" href="#7githublocalhost" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt; git clone https://github.com/username/LearningPythonDiary.git master&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;&lt;em&gt;转自https://github.com/peterluo/LearningPythonDiary&lt;/em&gt;&lt;/em&gt;&lt;/p&gt;</content><category term="git"></category><category term="git"></category><category term="github"></category></entry></feed>