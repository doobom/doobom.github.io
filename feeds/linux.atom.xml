<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>oops: run - Linux</title><link href="https://doobom.me/" rel="alternate"></link><link href="https://doobom.me/feeds/linux.atom.xml" rel="self"></link><id>https://doobom.me/</id><updated>2020-03-17T16:01:00+08:00</updated><subtitle>keep running...</subtitle><entry><title>How to Install EPEL and REMI Repository on CentOS/RedHat 7/6</title><link href="https://doobom.me/how-to-install-epel-and-remi-repository-on-centos" rel="alternate"></link><published>2020-03-17T12:01:00+08:00</published><updated>2020-03-17T16:01:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2020-03-17:/how-to-install-epel-and-remi-repository-on-centos</id><summary type="html">&lt;p&gt;How to Install &lt;span class="caps"&gt;EPEL&lt;/span&gt; and &lt;span class="caps"&gt;REMI&lt;/span&gt; Repository on CentOS/RedHat&amp;nbsp;7/6&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;原文： &lt;a href="https://tecadmin.net/install-epel-and-remi-repository-on-centos-and-redhat/"&gt;How to Install &lt;span class="caps"&gt;EPEL&lt;/span&gt; and &lt;span class="caps"&gt;REMI&lt;/span&gt; Repository on CentOS/RedHat&amp;nbsp;7/6&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;EPEL&lt;/span&gt;&lt;/strong&gt; is known as &lt;strong&gt;Extra Packages for Enterprise Linux&lt;/strong&gt; repository having lots of extra packages which is not added in official repositories. &lt;strong&gt;&lt;span class="caps"&gt;REMI&lt;/span&gt;&lt;/strong&gt; is a third party repository provides latest version of packages which is already included in official repositories of CentOS and Red&amp;nbsp;Hat.&lt;/p&gt;
&lt;p&gt;This article will help you to install &lt;strong&gt;&lt;span class="caps"&gt;EPEL&lt;/span&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;span class="caps"&gt;REMI&lt;/span&gt;&lt;/strong&gt; repository on CentOS and Red Hat 7/6/5&amp;nbsp;systems.&lt;/p&gt;
&lt;h1 id="install-epel-repository"&gt;Install &lt;span class="caps"&gt;EPEL&lt;/span&gt; Repository&lt;a class="headerlink" href="#install-epel-repository" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;span class="caps"&gt;EPEL&lt;/span&gt; release package is available under default CentOS repositories. So use the following command to install &lt;span class="caps"&gt;EPEL&lt;/span&gt; yum repository on your CentOS/&lt;span class="caps"&gt;RHEL&lt;/span&gt; 7/6/5&amp;nbsp;systems.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yum install epel-release&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the case of command doesn’t work for you, use one of below&amp;nbsp;commands.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;### For CentOS/RHEL 7 ###&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;rpm -Uvh http://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e/epel-release-7-11.noarch.rpm&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;### For CentOS/RHEL 6 ###&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;rpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h1 id="install-remi-repository"&gt;Install &lt;span class="caps"&gt;REMI&lt;/span&gt; Repository&lt;a class="headerlink" href="#install-remi-repository" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Use following commands to install &lt;span class="caps"&gt;REMI&lt;/span&gt; yum repository on your CentOS/&lt;span class="caps"&gt;RHEL&lt;/span&gt; 7/6/5 systems. Make sure you already have installed &lt;span class="caps"&gt;EPEL&lt;/span&gt; repository before installing &lt;span class="caps"&gt;REMI&lt;/span&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;### For CentOS/RHEL 7 ###&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;### For CentOS/RHEL 6 ###&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h1 id="list-all-installed-repository"&gt;List all Installed Repository&lt;a class="headerlink" href="#list-all-installed-repository" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Use following command to list all installed yum repositories in your&amp;nbsp;system.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yum repolist&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Sample&amp;nbsp;Output&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Loaded plugins: fastestmirror&lt;/span&gt;
&lt;span class="code-line"&gt;Loading mirror speeds from cached hostfile&lt;/span&gt;
&lt;span class="code-line"&gt; * base: pubmirrors.dal.corespace.com&lt;/span&gt;
&lt;span class="code-line"&gt; * epel: linux.mirrors.es.net&lt;/span&gt;
&lt;span class="code-line"&gt; * extras: mirrors.easynews.com&lt;/span&gt;
&lt;span class="code-line"&gt; * remi: mirrors.mediatemple.net&lt;/span&gt;
&lt;span class="code-line"&gt; * updates: mirrors.easynews.com&lt;/span&gt;
&lt;span class="code-line"&gt;repo id                 repo name                                             status&lt;/span&gt;
&lt;span class="code-line"&gt;base                    CentOS-6 - Base                                        &lt;span class="m"&gt;6&lt;/span&gt;,518&lt;/span&gt;
&lt;span class="code-line"&gt;epel                    Extra Packages &lt;span class="k"&gt;for&lt;/span&gt; Enterprise Linux &lt;span class="m"&gt;6&lt;/span&gt; - x86_64        &lt;span class="m"&gt;11&lt;/span&gt;,153&lt;/span&gt;
&lt;span class="code-line"&gt;extras                  CentOS-6 - Extras                                         &lt;span class="m"&gt;37&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;pgdg91                  PostgreSQL &lt;span class="m"&gt;9&lt;/span&gt;.1 &lt;span class="m"&gt;6&lt;/span&gt; - x86_64                                &lt;span class="m"&gt;279&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;pgdg93                  PostgreSQL &lt;span class="m"&gt;9&lt;/span&gt;.3 &lt;span class="m"&gt;6&lt;/span&gt; - x86_64                                &lt;span class="m"&gt;307&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;puppetlabs-deps         Puppet Labs Dependencies El &lt;span class="m"&gt;6&lt;/span&gt; - x86_64                    &lt;span class="m"&gt;77&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;puppetlabs-products     Puppet Labs Products El &lt;span class="m"&gt;6&lt;/span&gt; - x86_64                       &lt;span class="m"&gt;475&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;remi                    Les RPM de remi pour Enterprise Linux &lt;span class="m"&gt;6&lt;/span&gt; - x86_64       &lt;span class="m"&gt;2&lt;/span&gt;,407&lt;/span&gt;
&lt;span class="code-line"&gt;updates                 CentOS-6 - Updates                                       &lt;span class="m"&gt;748&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;repolist: &lt;span class="m"&gt;22&lt;/span&gt;,001&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Linux"></category><category term="Linux"></category><category term="epel"></category><category term="repository"></category></entry><entry><title>How to Install and Configure Askbot with Nginx on CentOS 7</title><link href="https://doobom.me/how-to-install-and-configure-askbot-with-nginx-on-centos-7" rel="alternate"></link><published>2020-02-10T10:56:00+08:00</published><updated>2020-02-10T10:56:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2020-02-10:/how-to-install-and-configure-askbot-with-nginx-on-centos-7</id><summary type="html">&lt;p&gt;Askbot is an open source software for creating Q&amp;amp;A forums based on Python Django Framework. It&amp;#8217;s basically a Q&amp;amp;A system like StackOverflow, Yahoo Answers, and others. Created by Mike Chan and Sailing Cai on 2009, and it&amp;#8217;s easy to install and configure on Linux systems like Ubuntu and CentOS. Many large open source software projects like Fedora and LibreOffice are using&amp;nbsp;it.&lt;/p&gt;</summary><content type="html">
&lt;blockquote&gt;
&lt;p&gt;原文: &lt;a href="https://www.howtoforge.com/tutorial/how-to-install-and-configure-askbot-with-nginx-on-centos-7/"&gt;How to Install and Configure Askbot with Nginx on CentOS 7&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Askbot is an open source software for creating Q&amp;amp;A forums based on Python Django Framework. It’s basically a Q&amp;amp;A system like StackOverflow, Yahoo Answers, and others. Created by Mike Chan and Sailing Cai on 2009, and it’s easy to install and configure on Linux systems like Ubuntu and CentOS. Many large open source software projects like Fedora and LibreOffice are using it.&lt;/p&gt;
&lt;p&gt;In this tutorial, we will show you how to install Askbot Python Django application using uWSGI and Nginx web server on CentOS 7 system. As for database, we will be using PostgreSQL for Askbot installation.&lt;/p&gt;
&lt;h1 id="what-we-will-do"&gt;What we will do&lt;a class="headerlink" href="#what-we-will-do" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Install dependencies&lt;/li&gt;
&lt;li&gt;Install and configure PostgreSQL&lt;/li&gt;
&lt;li&gt;Install and configure Askbot&lt;/li&gt;
&lt;li&gt;Install and configure uWSGI&lt;/li&gt;
&lt;li&gt;Install and configure Nginx Webserver&lt;/li&gt;
&lt;li&gt;Test the setup&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="prerequisites"&gt;Prerequisites&lt;a class="headerlink" href="#prerequisites" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;CentOS 7 Server&lt;/li&gt;
&lt;li&gt;Root privileges&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="step-1-install-dependencies"&gt;Step 1 - Install dependencies&lt;a class="headerlink" href="#step-1-install-dependencies" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;In this step, we will install some packages that are needed for successful Askbot installation. These include ‘Development Tools’, Epel repository, and some python-related tools (for managing Python packages). So let’s begin.&lt;/p&gt;
&lt;p&gt;First, install CentOS ‘Development Tools’ with yum group command below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yum group install &lt;span class="s1"&gt;'Development Tools'&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then install the Epel repository.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yum -y install epel-release&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And finally install the python packages, including python pip, python-devel and python six.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yum -y install python-pip python-devel python-six&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="Installing python" src="images/7002-1.png"/&gt;&lt;/p&gt;
&lt;h1 id="step-2-install-and-configure-postgresql"&gt;Step 2 - Install and configure PostgreSQL&lt;a class="headerlink" href="#step-2-install-and-configure-postgresql" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Now we need PostgreSQL database, which is available in the CentOS repository. In this section, we will discuss how you can install PostgreSQL database, change the postgres password user, create a new user and database for the Askbot installation, and finally, change the postgres authentication config.&lt;/p&gt;
&lt;p&gt;So let’s start with installing PostgreSQL from the repository using the yum command below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yum -y install postgresql-server postgresql-devel postgresql-contrib&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once the installation is complete, we need to initialize the database, which you can do using the command below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;postgresql-setup initdb&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Moving on, start postgres and enable it to launch automatically at the boot time.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;systemctl start postgresql&lt;/span&gt;
&lt;span class="code-line"&gt;systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; postgresql&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;At this point, the PostgreSQL database should be installed. Next, we need to reset the postgres user password. For this, first login as ‘postgres’ user and access the psql command line tool.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;su - postgres&lt;/span&gt;
&lt;span class="code-line"&gt;psql&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then give the postgres user a new password.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="se"&gt;\p&lt;/span&gt;assword postgres&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, create a new database and user for Askbot. For example, we want to create a new user ‘&lt;strong&gt;hakaselabs&lt;/strong&gt;‘ with password ‘&lt;strong&gt;hakase123&lt;/strong&gt;‘, and the database named ‘&lt;strong&gt;askbotdb&lt;/strong&gt;‘. The following postgres queries will help us create all of these.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;create database askbotdb&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;create user hakaselabs with password &lt;span class="s1"&gt;'hakase123'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;grant all privileges on database askbotdb to hakaselabs&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="Install PostgreSQL" src="images/7002-2.png"/&gt;&lt;/p&gt;
&lt;p&gt;So now, a database and user for Askbot installation have been created. The next step is to edit the postgres configuration for authentication setup, which you can do by heading to the ‘pgsql/data’ directory and editing the ‘pg_hba.conf’ file with vim.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /var/lib/pgsql/data/&lt;/span&gt;
&lt;span class="code-line"&gt;vim pg_hba.conf&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once inside the file, change all authentication to md5, as shown below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;local   all             all                                     md5&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt; # IPv4 local connections:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt; host    all             all             127.0.0.1/32            md5&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt; # IPv6 local connections:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt; host    all             all             ::1/128                 md5&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="Configure PostgreSQL" src="images/7002-3.png"/&gt;&lt;/p&gt;
&lt;p&gt;Now, save and exit the file, and then restart the postgres service.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;systemctl restart postgresql&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So by now, the PostgreSQL database has been installed; database for the Askbot installation has been created; and the postgres user authentication method has been changed to md5.&lt;/p&gt;
&lt;h1 id="step-3-install-and-configure-askbot"&gt;Step 3 - Install and configure Askbot&lt;a class="headerlink" href="#step-3-install-and-configure-askbot" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;In this step, we will discuss the installation and configuration of Askbot. We will install Askbot under a user named ‘askbot’, and using the virtualenv python. So let’s begin.&lt;/p&gt;
&lt;p&gt;Firstly, create a new user ‘askbot’ and give the user a new password.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;useradd -m -s /bin/bash askbot&lt;/span&gt;
&lt;span class="code-line"&gt;passwd askbot&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then add the ‘askbot’ user to the ‘wheel’ group for sudo command access (not sure what ‘sudo’ is? Learn more about it &lt;a href="https://www.howtoforge.com/tutorial/sudo-beginners-guide/"&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;usermod -a -G wheel askbot&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="Install AskBot" src="images/7002-4.png"/&gt;&lt;/p&gt;
&lt;p&gt;Now upgrade pip to the latest version and install the python virtualenv package.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install --upgrade pip&lt;/span&gt;
&lt;span class="code-line"&gt;pip install virtualenv six&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="Install pip" src="images/7002-5.png"/&gt;&lt;/p&gt;
&lt;p&gt;Next. log in as ‘askbot’ user and create new python virtual environment ‘hakase-labs’ with virtualenv.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;su - askbot&lt;/span&gt;
&lt;span class="code-line"&gt;virtualenv hakase-labs/&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Go to the ‘hakase-labs’ directory and activate the virtual environment for Askbot installation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; hakase-labs/&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;source&lt;/span&gt; bin/activate&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now install askbot and other python packages with pip command on ‘hakase-labs’ virtual environment.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install six &lt;/span&gt;
&lt;span class="code-line"&gt;pip install askbot psycopg2&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="installing askbot" src="images/7002-6.png"/&gt;&lt;/p&gt;
&lt;p&gt;Next, create a new directory for the ‘Askbot’ project. Please make sure you don’t use ‘askbot’ as the directory name. In our case, for example, we created a new directory named ‘myapp’&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir myapp/&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Go to the myapp directory and run the ‘askbot-setup’ command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; myapp/&lt;/span&gt;
&lt;span class="code-line"&gt;askbot-setup&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The ‘askbot-setup’ command will ask you certain things. For example, you will be asked about directory path to deploy Askbot - you can type ‘.’ and press Enter to continue. Similarly, when asked about database engine, type ‘1’ to use postgresql and press Enter. For database-related details, enter databasename as ‘askbotdb’, database user as ‘hakaselabs’, and password as ‘hakase123’.&lt;/p&gt;
&lt;p&gt;&lt;img alt="configure the application" src="images/7002-7.png"/&gt;&lt;/p&gt;
&lt;p&gt;So Askbot is now installed on the ‘myapp’ directory. Now we need to generate Askbot Django static files and the database.&lt;/p&gt;
&lt;p&gt;Run the command below to generate Askbot Django static files.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python manage.py collectstatic&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When asked for confirmation, type ‘yes’ and press Enter.&lt;/p&gt;
&lt;p&gt;&lt;img alt="python manage.py" src="images/7002-8.png"/&gt;&lt;/p&gt;
&lt;p&gt;Now, to generate the database, run syncdb as below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python manage.py syncdb&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You will be asked about creating the admin user and password. So when asked, type the username, email, and password for admin configuration.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Create admin user" src="images/7002-9.png"/&gt;&lt;/p&gt;
&lt;p&gt;So by now, Askbot has been installed, static files have been generated, and the database configuration has been completed.&lt;/p&gt;
&lt;p&gt;You can test the Askbot installation with runserver command below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python manage.py runserver &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0:8080&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Open your Web browser and type the server &lt;span class="caps"&gt;IP&lt;/span&gt; address, and you should see a page similar to the following:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Result in web browser" src="images/7002-10.png"/&gt;&lt;/p&gt;
&lt;h1 id="step-4-install-and-configure-uwsgi"&gt;Step 4 - Install and configure uWSGI&lt;a class="headerlink" href="#step-4-install-and-configure-uwsgi" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;We will be using uWSGI as service for the Askbot Django project. Specifically, we will be using uWSGI with Nginx web server for the Askbot installation. So let’s begin.&lt;/p&gt;
&lt;p&gt;Firstly, install uWSGI using the pip command, as shown below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo pip install uwsgi&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After the installation is complete, create a new directory for the uWSGI virtual host files. For example, in our case, we created ‘/etc/uwsgi/sites’.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir -p /etc/uwsgi/sites&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Go to the newly-created directory and create new askbot uWSGI configuration with vim.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /etc/uwsgi/sites&lt;/span&gt;
&lt;span class="code-line"&gt;vim askbot.ini&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Paste the following configuration in the file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[uwsgi]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="c1"&gt;# Project directory, Python directory&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="na"&gt;chdir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/home/askbot/hakase-labs/myapp&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; home = /home/askbot/hakase-labs/&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; static-map = /m=/home/askbot/hakase-labs/myapp/static&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; wsgi-file = /home/askbot/hakase-labs/myapp/django.wsgi&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="na"&gt;master&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;true&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; processes = 5&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="c1"&gt;# Askbot will running under the sock file&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="na"&gt;socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/run/uwsgi/askbot.sock&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; chmod-socket = 664&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; uid = askbot&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; gid = nginx&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; vacuum = true&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="c1"&gt;# uWSGI Log file&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="na"&gt;logto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/var/log/uwsgi.log&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That’s it. Save the file and exit from the editor.&lt;/p&gt;
&lt;p&gt;Next, add new uWSGI service script file to the ‘/etc/systemd/system’ directory. Go to the directory and create the ‘uwsgi.service’ file with vim.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /etc/systemd/system/&lt;/span&gt;
&lt;span class="code-line"&gt;vim uwsgi.service&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Paste the following uWSGI service configuration in the file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[Unit]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="na"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;uWSGI Emperor service&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="k"&gt;[Service]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="na"&gt;ExecStartPre&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/bin/bash -c 'mkdir -p /run/uwsgi; chown askbot:nginx /run/uwsgi'&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; ExecStart=/bin/uwsgi --emperor /etc/uwsgi/sites&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; Restart=always&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; KillSignal=SIGQUIT&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; Type=notify&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s"&gt; NotifyAccess=all&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="k"&gt;[Install]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="na"&gt;WantedBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;multi-user.target&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Save and exit.&lt;/p&gt;
&lt;p&gt;Now, reload systemd services and enable uWSGI to start automatically at the boot time.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;systemctl daemon-reload&lt;/span&gt;
&lt;span class="code-line"&gt;systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; uwsgi&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="Reload services" src="images/7002-11.png"/&gt;&lt;/p&gt;
&lt;p&gt;So with this, uWSGI has been installed, and you should see it running as a service.&lt;/p&gt;
&lt;h1 id="step-5-install-and-configure-nginx-webserver"&gt;Step 5 - Install and configure Nginx webserver&lt;a class="headerlink" href="#step-5-install-and-configure-nginx-webserver" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;So, Askbot is now installed, and it’s running under uWSGI sock file ‘askbot.sock’. In this step, we will be using Nginx web server as a reverse proxy for uWSGI application ‘Askbot’.&lt;/p&gt;
&lt;p&gt;To begin with, install Nginx with the yum command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yum -y install nginx&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now go to the Nginx ‘conf.d’ directory and create new virtual host file ‘askbot.conf’ with the vim editor.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /etc/nginx/conf.d/&lt;/span&gt;
&lt;span class="code-line"&gt;vim askbot.conf&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="install nginx" src="images/7002-12.png"/&gt;&lt;/p&gt;
&lt;p&gt;Paste the following Askbot Nginx configuration in the file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;server {&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;         listen 80;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;         server_name askbot.me www.askbot.me;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;         location / {&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;         include         uwsgi_params;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;         uwsgi_pass      unix:/run/uwsgi/askbot.sock;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;    }&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt; }&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Save the file and exit from the editor. Now, test the configuration to make sure there is no error.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;nginx -t&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, start Nginx and uWSGI services.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;systemctl start nginx&lt;/span&gt;
&lt;span class="code-line"&gt;systemctl start uwsgi&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And enable them to start automatically at the boot time.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; nginx&lt;/span&gt;
&lt;span class="code-line"&gt;systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; uwsgi&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="test nginx config and restart nginx" src="images/7002-13.png"/&gt;&lt;/p&gt;
&lt;p&gt;So Nginx is now installed as a reverse proxy for uWSGI application ‘Askbot’.&lt;/p&gt;
&lt;h1 id="step-6-test-the-setup"&gt;Step 6 - Test the setup&lt;a class="headerlink" href="#step-6-test-the-setup" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Open your web browser and visit the Askbot domain name: askbot.me, and you will get to see the home page, as shown below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="askbot domain" src="images/7002-14.png"/&gt;&lt;/p&gt;
&lt;p&gt;Here’s the Askbot user login page:&lt;/p&gt;
&lt;p&gt;&lt;img alt="askbot login" src="images/7002-15.png"/&gt;&lt;/p&gt;
&lt;p&gt;Askbot user dashboard:&lt;/p&gt;
&lt;p&gt;&lt;img alt="askbot dashboard" src="images/7002-16.png"/&gt;&lt;/p&gt;
&lt;p&gt;Askbot admin setting:&lt;/p&gt;
&lt;p&gt;&lt;img alt="askbot admin dashboard" src="images/7002-17.png"/&gt;&lt;/p&gt;
&lt;p&gt;Askbot Django admin login:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Django admin login" src="images/7002-18.png"/&gt;&lt;/p&gt;
&lt;p&gt;Askbot Django admin dashboard:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Django admin dashboard" src="images/7002-19.png"/&gt;&lt;/p&gt;
&lt;p&gt;So the Q&amp;amp;A system application ‘Askbot’ has been successfully installed with uWSGI and Nginx web server on CentOS 7 server.&lt;/p&gt;
&lt;h1 id="reference"&gt;Reference&lt;a class="headerlink" href="#reference" title="Permanent link"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://askbot.org/en/"&gt;https://askbot.org/en/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Linux"></category><category term="nginx"></category><category term="uWSGI"></category><category term="PostgreSQL"></category><category term="python"></category><category term="Q&amp;A"></category><category term="askbot"></category><category term="centos"></category></entry><entry><title>LINUX 暂停、继续进程</title><link href="https://doobom.me/linux-stop-cont-ps" rel="alternate"></link><published>2019-05-09T16:01:00+08:00</published><updated>2019-05-09T16:01:00+08:00</updated><author><name>doobom</name></author><id>tag:doobom.me,2019-05-09:/linux-stop-cont-ps</id><summary type="html">&lt;p&gt;&lt;span class="caps"&gt;LINUX&lt;/span&gt;&amp;nbsp;如何暂停、继续进程&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;原文： &lt;a href="https://www.cnblogs.com/mfryf/archive/2012/09/24/2700042.html"&gt;https://www.cnblogs.com/mfryf/archive/2012/09/24/2700042.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;kill -STOP 1234&lt;/code&gt; 将该进程暂停。&lt;/p&gt;
&lt;p&gt;如果要让它恢复到后台，用 &lt;code&gt;kill -CONT 1234&lt;/code&gt; （很多在前台运行的程序这样是不行的）&lt;/p&gt;
&lt;p&gt;如果要恢复到前台，请在当时运行该进程的那个终端用 &lt;code&gt;jobs&lt;/code&gt; 命令查询暂停的进程。&lt;/p&gt;
&lt;p&gt;然后用 &lt;code&gt;fg 〔job号〕&lt;/code&gt; 把进程恢复到前台。&lt;/p&gt;
&lt;p&gt;如果 &lt;code&gt;jobs&lt;/code&gt; 只查询到一个进程，只用 &lt;code&gt;fg&lt;/code&gt; 即可。&lt;/p&gt;
&lt;p&gt;例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;root@dWorks:~# bc -q&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;+  Stopped                 bc -q&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;root@dWorks:~# bc -q&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;+  Stopped                 bc -q&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;root@dWorks:~# &lt;span class="nb"&gt;jobs&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;-  Stopped                 bc -q&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;+  Stopped                 bc -q&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;root@dWorks:~# &lt;span class="nb"&gt;fg&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;bc -q&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;1&lt;/span&gt;+1&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A. Shell&amp;nbsp;支持作用控制，有以下命令：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;command&amp;amp;&lt;/code&gt; 让进程在后台运行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;jobs&lt;/code&gt; 查看后台运行的进程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;fg %n&lt;/code&gt; 让后台运行的进程n到前台来&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;bg %n&lt;/code&gt; 让进程 n&amp;nbsp;到后台去；  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class="caps"&gt;PS&lt;/span&gt;:&amp;#8221;n&amp;#8221;为 jobs&amp;nbsp;查看到的进程编号.&lt;/p&gt;
&lt;p&gt;B.下列转:http://blog.chinaunix.net/u/1604/showart_1079559.html&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fg&lt;/code&gt;、&lt;code&gt;bg&lt;/code&gt;、&lt;code&gt;jobs&lt;/code&gt;、&amp;amp;、&lt;code&gt;ctrl + z&lt;/code&gt; 都是跟系统任务有关的，虽然现在基本上不怎么需要用到这些命令，但学会了也是很实用的&lt;/p&gt;
&lt;p&gt;一。 &lt;code&gt;&amp;amp;&lt;/code&gt; 最经常被用到&lt;/p&gt;
&lt;p&gt;这个用在一个命令的最后，可以把这个命令放到后台执行&lt;/p&gt;
&lt;p&gt;二。&lt;code&gt;ctrl + z&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可以将一个正在前台执行的命令放到后台，并且暂停&lt;/p&gt;
&lt;p&gt;三。&lt;code&gt;jobs&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查看当前有多少在后台运行的命令&lt;/p&gt;
&lt;p&gt;四。&lt;code&gt;fg&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将后台中的命令调至前台继续运行&lt;/p&gt;
&lt;p&gt;如果后台中有多个命令，可以用 &lt;code&gt;fg %jobnumber&lt;/code&gt; 将选中的命令调出，&lt;code&gt;%jobnumber&lt;/code&gt; 是通过 &lt;code&gt;jobs&lt;/code&gt; 命令查到的后台正在执行的命令的序号(不是pid)&lt;/p&gt;
&lt;p&gt;五。&lt;code&gt;bg&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将一个在后台暂停的命令，变成继续执行&lt;/p&gt;
&lt;p&gt;如果后台中有多个命令，可以用 &lt;code&gt;bg %jobnumber&lt;/code&gt; 将选中的命令调出，&lt;code&gt;%jobnumber&lt;/code&gt; 是通过 &lt;code&gt;jobs&lt;/code&gt; 命令查到的后台正在执行的命令的序号(不是pid)&lt;/p&gt;
&lt;h2 id="linuxshelljobs"&gt;Linux下使用Shell命令控制任务Jobs执行&lt;a class="headerlink" href="#linuxshelljobs" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;下列命令可以用来操纵进程任务：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ps&lt;/code&gt; 列出系统中正在运行的进程；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kill&lt;/code&gt; 发送信号给一个或多个进程（经常用来杀死一个进程）；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;jobs&lt;/code&gt; 列出当前 shell 环境中已启动的任务状态，若未指定 jobsid，则显示所有活动的任务状态信息；如果报告了一个任务的终止(即任务的状态被标记为 Terminated)，shell 从当前的 shell&amp;nbsp;环境已知的列表中删除任务的进程标识；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bg&lt;/code&gt; 将进程搬到后台运行（Background）；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fg&lt;/code&gt; 将进程搬到前台运行（Foreground）；&lt;/p&gt;
&lt;p&gt;将 job&amp;nbsp;转移到后台运行&lt;/p&gt;
&lt;p&gt;如果你经常在X图形下工作，你可能有这样的经历：通过终端命令运行一个 &lt;span class="caps"&gt;GUI&lt;/span&gt; 程序，&lt;span class="caps"&gt;GUI&lt;/span&gt; 界面出来了，但是你的终端还停留在原地，你不能在 shell 中继续执行其他命令了，除非将 &lt;span class="caps"&gt;GUI&lt;/span&gt; 程序关掉。
　　为了使程序执行后终端还能继续接受命令，你可以将进程移到后台运行，使用如下命令运行程序：&amp;nbsp;#假设要运行xmms&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$xmms&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样打开 xmms 后，终端的提示又回来了。现在 xmms 在后台运行着呢；但万一你运行程序时忘记使用 “&amp;amp;” 了，又不想重新执行；你可以先使用 &lt;code&gt;ctrl+z&lt;/code&gt; 挂起程序，然后敲入 &lt;code&gt;bg&lt;/code&gt; 命令，这样程序就在后台继续运行了。&lt;/p&gt;
&lt;h3 id="_1"&gt;概念：当前任务&lt;a class="headerlink" href="#_1" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;如果后台的任务号有2个，[1],[2]；如果当第一个后台任务顺利执行完毕，第二个后台任务还在执行中时，当前任务便会自动变成后台任务号码“[2]”的后台任务。所以可以得出一点，即当前任务是会变动的。当用户输入 &lt;code&gt;fg&lt;/code&gt;、&lt;code&gt;bg&lt;/code&gt; 和 &lt;code&gt;stop&lt;/code&gt; 等命令时，如果不加任何引号，则所变动的均是当前任务。&lt;/p&gt;
&lt;h3 id="jobs"&gt;察看 jobs&lt;a class="headerlink" href="#jobs" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;使用 &lt;code&gt;jobs&lt;/code&gt; 或 &lt;code&gt;ps&lt;/code&gt; 命令可以察看正在执行的&amp;nbsp;jobs。&lt;/p&gt;
&lt;p&gt;jobs 命令执行的结果，&lt;code&gt;＋&lt;/code&gt; 表示是一个当前的作业，&lt;code&gt;-&lt;/code&gt; 表是是一个当前作业之后的一个作业，&lt;code&gt;jobs -l&lt;/code&gt; 选项可显示所有任务的 &lt;span class="caps"&gt;PID&lt;/span&gt;, jobs 的状态可以是 running, stopped, Terminated,但是如果任务被终止了（kill），shell 从当前的 shell 环境已知的列表中删除任务的进程标识；也就是说，jobs&amp;nbsp;命令显示的是当前shell环境中所起的后台正在运行或者被挂起的任务信息；&lt;/p&gt;
&lt;h3 id="_2"&gt;进程的挂起&lt;a class="headerlink" href="#_2" title="Permanent link"&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;hr /&gt;
&lt;h4 id="_3"&gt;后台进程的挂起：&lt;a class="headerlink" href="#_3" title="Permanent link"&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;在 solaris 中通过 &lt;code&gt;stop&lt;/code&gt; 命令执行，通过 &lt;code&gt;jobs&lt;/code&gt; 命令查看 job 号(假设为 num)，然后执行&lt;code&gt;stop %num&lt;/code&gt;；&lt;/p&gt;
&lt;p&gt;在 redhat 中，不存在 &lt;code&gt;stop&lt;/code&gt; 命令，可通过执行命令 &lt;code&gt;kill -stop PID&lt;/code&gt;，将进程挂起；&lt;/p&gt;
&lt;p&gt;当要重新执行当前被挂起的任务时，通过 &lt;code&gt;bg %num&lt;/code&gt; 即可将挂起的 job 的状态由 stopped 改为running，仍在后台执行；当需要改为在前台执行时，执行命令 &lt;code&gt;fg %num&lt;/code&gt; 即可；&lt;/p&gt;
&lt;h4 id="_4"&gt;前台进程的挂起：&lt;a class="headerlink" href="#_4" title="Permanent link"&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;ctrl+Z&lt;/code&gt; 进程的终止&lt;/p&gt;
&lt;h4 id="_5"&gt;后台进程的终止：&lt;a class="headerlink" href="#_5" title="Permanent link"&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;方法一：
　　通过 &lt;code&gt;jobs&lt;/code&gt; 命令查看 job 号（假设为 num ），然后执行 &lt;code&gt;kill %num&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;方法二：
　　通过 &lt;code&gt;ps&lt;/code&gt; 命令查看 job 的进程号（&lt;span class="caps"&gt;PID&lt;/span&gt;，假设为pid），然后执行 &lt;code&gt;kill pid&lt;/code&gt;&lt;/p&gt;
&lt;h4 id="_6"&gt;前台进程的终止：&lt;a class="headerlink" href="#_6" title="Permanent link"&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;ctrl+c&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;kill的其他作用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kill&lt;/code&gt; 除了可以终止进程，还能给进程发送其它信号，使用 &lt;code&gt;kill -l&lt;/code&gt; 可以察看 &lt;code&gt;kill&lt;/code&gt; 支持的信号。&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;SIGTERM&lt;/span&gt; 是不带参数时 &lt;code&gt;kill&lt;/code&gt; 发送的信号，意思是要进程终止运行，但执行与否还得看进程是否支持。如果进程还没有终止，可以使用 &lt;code&gt;kill -SIGKILL pid&lt;/code&gt; ，这是由内核来终止进程，进程不能监听这个信号。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Unix/Linux 下一般想让某个程序在后台运行，很多都是使用 &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt;&amp;nbsp;在程序结尾来让程序自动运行。比如我们要运行mysql在后台：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/usr/local/mysql/bin/mysqld_safe --user&lt;span class="o"&gt;=&lt;/span&gt;mysql &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;但是我们很多程序并不象 mysqld 一样可以做成守护进程，可能我们的程序只是普通程序而已，一般这种程序即使使用 &lt;code&gt;&amp;amp;&lt;/code&gt; 结尾，如果终端关闭，那么程序也会被关闭。为了能够后台运行，我们需要使用&lt;code&gt;nohup&lt;/code&gt; 这个命令，比如我们有个 &lt;code&gt;start.sh&lt;/code&gt; 需要在后台运行，并且希望在后台能够一直运行，那么就使用 &lt;code&gt;nohup&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;nohup /root/start.sh &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在 shell&amp;nbsp;中回车后提示：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;$ appending output to nohup.out&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;原程序的的标准输出被自动改向到当前目录下的 &lt;code&gt;nohup.out&lt;/code&gt; 文件，起到了 log&amp;nbsp;的作用。&lt;/p&gt;
&lt;p&gt;但是有时候在这一步会有问题，当把终端关闭后，进程会自动被关闭，察看 &lt;code&gt;nohup.out&lt;/code&gt; 可以看到在关闭终端瞬间服务自动关闭。&lt;/p&gt;
&lt;p&gt;咨询红旗 Linux&amp;nbsp;工程师后，他也不得其解，在我的终端上执行后，他启动的进程竟然在关闭终端后依然运行。&lt;/p&gt;
&lt;p&gt;在第二遍给我演示时，我才发现我和他操作终端时的一个细节不同：他是在当 shell 中提示了 &lt;code&gt;nohup&lt;/code&gt; 成功后还需要按终端上键盘任意键退回到 shell 输入命令窗口，然后通过在 shell 中输入 &lt;code&gt;exit&lt;/code&gt; 来退出终端；而我是每次在 &lt;code&gt;nohup&lt;/code&gt; 执行成功后直接点关闭程序按钮关闭终端.。所以这时候会断掉该命令所对应的 session，导致 &lt;code&gt;nohup&lt;/code&gt; 对应的进程被通知需要一起&amp;nbsp;shutdown。&lt;/p&gt;
&lt;p&gt;这个细节有人和我一样没注意到，所以在这儿记录一下了。&lt;/p&gt;
&lt;h2 id="nohup"&gt;附：nohup命令参考&lt;a class="headerlink" href="#nohup" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;nohup&amp;nbsp;命令&lt;/p&gt;
&lt;p&gt;用途：不挂断地运行命令。&lt;/p&gt;
&lt;p&gt;语法：&lt;code&gt;nohup Command [ Arg ... ] [　&amp;amp; ]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;描述：nohup 命令运行由 Command 参数和任何相关的 Arg 参数指定的命令，忽略所有挂断（&lt;span class="caps"&gt;SIGHUP&lt;/span&gt;）信号。在注销后使用 nohup 命令运行后台中的程序。要运行后台中的 nohup 命令，添加 &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt;&amp;nbsp;（表示&amp;#8221;and&amp;#8221;的符号）到命令的尾部。&lt;/p&gt;
&lt;p&gt;无论是否将 nohup 命令的输出重定向到终端，输出都将附加到当前目录的 &lt;code&gt;nohup.out&lt;/code&gt; 文件中。如果当前目录的 &lt;code&gt;nohup.out&lt;/code&gt; 文件不可写，输出重定向到 &lt;code&gt;$HOME/nohup.out&lt;/code&gt; 文件中。如果没有文件能创建或打开以用于追加，那么 Command&amp;nbsp;参数指定的命令不可调用。如果标准错误是一个终端，那么把指定的命令写给标准错误的所有输出作为标准输出重定向到相同的文件描述符。&lt;/p&gt;
&lt;p&gt;退出状态：该命令返回下列出口值：&lt;/p&gt;
&lt;p&gt;126 可以查找但不能调用 Command&amp;nbsp;参数指定的命令。&lt;/p&gt;
&lt;p&gt;127 nohup 命令发生错误或不能查找由 Command&amp;nbsp;参数指定的命令。&lt;/p&gt;
&lt;p&gt;否则，nohup 命令的退出状态是 Command&amp;nbsp;参数指定命令的退出状态。&lt;/p&gt;
&lt;p&gt;nohup命令及其输出文件&lt;/p&gt;
&lt;p&gt;nohup命令：如果你正在运行一个进程，而且你觉得在退出帐户时该进程还不会结束，那么可以使用nohup命令。该命令可以在你退出帐户/关闭终端之后继续运行相应的进程。nohup就是不挂起的意思( n ohang&amp;nbsp;up)。&lt;/p&gt;
&lt;p&gt;该命令的一般形式为：&lt;code&gt;nohup command &amp;amp;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用nohup命令提交作业&lt;/p&gt;
&lt;p&gt;如果使用nohup命令提交作业，那么在缺省情况下该作业的所有输出都被重定向到一个名为 &lt;code&gt;nohup.out&lt;/code&gt; 的文件中，除非另外指定了输出文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;nohup &lt;span class="nb"&gt;command&lt;/span&gt; &amp;gt; myout.file &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在上面的例子中，输出被重定向到 &lt;code&gt;myout.file&lt;/code&gt; 文件中。&lt;/p&gt;
&lt;p&gt;使用 jobs&amp;nbsp;查看任务。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;fg %n&lt;/code&gt;　关闭。&lt;/p&gt;
&lt;p&gt;另外有两个常用的 ftp 工具 &lt;code&gt;ncftpget&lt;/code&gt; 和 &lt;code&gt;ncftpput&lt;/code&gt;，可以实现后台的 ftp&amp;nbsp;上传和下载，这样就可以利用这些命令在后台上传和下载文件了。&lt;/p&gt;
&lt;p&gt;简单而有用的 &lt;code&gt;nohup&lt;/code&gt; 命令在 &lt;span class="caps"&gt;UNIX&lt;/span&gt;/&lt;span class="caps"&gt;LINUX&lt;/span&gt; 中，普通进程用&amp;amp;符号放到后台运行，如果启动该程序的控制台&amp;nbsp;logout，则该进程随即终止。&lt;/p&gt;
&lt;p&gt;要实现守护进程，一种方法是按守护进程的规则去编程（本站有文章介绍过），比较麻烦；另一种方法是仍然用普通方法编程，然后用nohup命令启动程序：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;nohup＜程序名＞&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;则控制台logout后，进程仍然继续运行，起到守护进程的作用（虽然它不是严格意义上的守护进程）。&lt;/p&gt;
&lt;p&gt;使用nohup命令后，原程序的的标准输出被自动改向到当前目录下的 &lt;code&gt;nohup.out&lt;/code&gt; 文件，起到了 log&amp;nbsp;的作用，实现了完整的守护进程功能。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;ygwu @ 2005年04月18日&amp;nbsp;上午10:03&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For&amp;nbsp;example：&lt;/p&gt;
&lt;p&gt;如何远程启动 WebLogic&amp;nbsp;服务?&lt;/p&gt;
&lt;p&gt;用 telnet 远程控制服务器，远程启动 &lt;span class="caps"&gt;WEBLOGIC&lt;/span&gt; 服务，启动后关闭 telnet，WebLogic 服务也跟着停止，这是因为使用 telnet 启动的进程会随着 telnet 进程的关闭而关闭。所以我们可以使用一些 &lt;span class="caps"&gt;UNIX&lt;/span&gt;&amp;nbsp;下的命令来做到不关闭。&lt;/p&gt;
&lt;p&gt;使用如下命令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nohup startWeblogic.sh&amp;amp;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果想要监控标准输出可以使用：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tail -f nohup.out&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当在后台运行了程序的时候，可以用 &lt;code&gt;jobs&lt;/code&gt; 命令来查看后台作业的状态。在有多个后台程序时，要使用来参数的 &lt;code&gt;fg&lt;/code&gt; 命令将不同序号的后台作业切换到前台上运行。&lt;/p&gt;
&lt;p&gt;当用户启动一个进程的时候，这个进程是运行在前台，使用与相应控制终端相联系的标准输入、输出进行输入和输出。即使将进程的输入输出重定向，并将进程放在后台执行，进程仍然和当前终端设备有关系。正因为如此，在当前的登录会话结束时，控制终端设备将和登录进程相脱离，那么系统就向所有与这个终端相联系的进程发送 &lt;span class="caps"&gt;SIGHUP&lt;/span&gt; 的信号，通知进程线路已经挂起了，如果程序没有接管这个信号的处理，那么缺省的反应是进程结束。因此普通的程序并不能真正脱离登录会话而运行进程，为了使得在系统登录后还可以正常执行，只有使用命令 &lt;code&gt;nohup&lt;/code&gt; 来启动相应程序。&lt;/p&gt;
&lt;p&gt;使用命令 &lt;code&gt;nohup&lt;/code&gt; 当然可以启动这样的程序，但 &lt;code&gt;nohup&lt;/code&gt; 启动的程序在进程执行完毕就退出，而常见的一些服务进程通常永久的运行在后台，不向屏幕输出结果。在 Unix&amp;nbsp;中这些永久的后台进程称为守护进程（daemon）。守护进程通常从系统启动时自动开始执行，系统关闭时才停止。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;-=- &lt;span class="caps"&gt;END&lt;/span&gt;&amp;nbsp;-=-&lt;/p&gt;</content><category term="Linux"></category><category term="Linux"></category><category term="Shell"></category></entry></feed>